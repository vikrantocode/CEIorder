{"ast":null,"code":"import _objectSpread from \"/home/browsewire/Desktop/hj/CEI/cei/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/browsewire/Desktop/hj/CEI/cei/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/browsewire/Desktop/hj/CEI/cei/client/src/views/user/reset-password.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport { Row, Card, CardTitle, Label, FormGroup, Button } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport { Formik, Form, Field } from 'formik';\nimport { connect } from 'react-redux';\nimport { Colxx } from '../../components/common/CustomBootstrap';\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { resetPassword } from '../../redux/actions';\nimport { NotificationManager } from '../../components/common/react-notifications';\nimport axios from \"axios\";\n\nvar validateNewPassword = function validateNewPassword(values) {\n  var newPassword = values.newPassword,\n      newPasswordAgain = values.newPasswordAgain;\n  var errors = {};\n\n  if (newPasswordAgain && newPassword !== newPasswordAgain) {\n    errors.newPasswordAgain = 'Please check your new password';\n  }\n\n  return errors;\n};\n\nvar ResetPassword = function ResetPassword(_ref) {\n  var location = _ref.location,\n      history = _ref.history,\n      loading = _ref.loading,\n      error = _ref.error,\n      resetPasswordAction = _ref.resetPasswordAction;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      formData = _useState2[0],\n      setformData = _useState2[1];\n\n  var userEmail = function userEmail() {\n    var email = localStorage.getItem(\"userEmail\");\n    return email;\n  };\n\n  console.log(userEmail());\n  useEffect(function () {\n    if (userEmail()) {\n      console.log(\"hi\");\n    } else {\n      window.location.href = \"/user/login\";\n    }\n  }); // CHANGE PASSWORD REQUEST\n\n  var changePassword = function changePassword(e) {\n    // WHILE EXPIRATION TIME IS GREATER THAN CURRENT TIME\n    if (formData.password == formData.ConfirmPassword) {\n      axios.post(\"/api/change-password\", formData).then(function (res) {\n        console.log(res.data);\n\n        if (res.data.success) {\n          NotificationManager.success(res.data.success, 'Success', 3000, null, null, '');\n          setformData({});\n          localStorage.removeItem(\"userEmail\");\n        } else if (res.data.error) {\n          NotificationManager.warning(res.data.error, 'Error', 3000, null, null, '');\n        }\n      });\n    } // IF PASSWORD AND CONFIRM PASSWORD DO NOT MATCH\n    else {\n        NotificationManager.warning(\"Password do not match\", 'Error', 3000, null, null, '');\n      } // }\n    // else {\n    //   NotificationManager.warning(\"OTP expired\", 'OTP Error', 3000, null, null, '');\n    // }\n\n  }; // useEffect(() => {\n  //   if (error) {\n  //     NotificationManager.warning(\n  //       error,\n  //       'Forgot Password Error',\n  //       3000,\n  //       null,\n  //       null,\n  //       ''\n  //     );\n  //   } else if (!loading && newPassword === 'success')\n  //     NotificationManager.success(\n  //       'Please login with your new password.',\n  //       'Reset Password Success',\n  //       3000,\n  //       null,\n  //       null,\n  //       ''\n  //     );\n  // }, [error, loading, newPassword]);\n  // const onResetPassword = (values) => {\n  //   if (!loading) {\n  //     const params = new URLSearchParams(location.search);\n  //     const oobCode = params.get('oobCode');\n  //     if (oobCode) {\n  //       if (values.newPassword !== '') {\n  //         resetPasswordAction({\n  //           newPassword: values.newPassword,\n  //           resetPasswordCode: oobCode,\n  //           history,\n  //         });\n  //       }\n  //     } else {\n  //       NotificationManager.warning(\n  //         'Please check your email url.',\n  //         'Reset Password Error',\n  //         3000,\n  //         null,\n  //         null,\n  //         ''\n  //       );\n  //     }\n  //   }\n  // };\n\n\n  return /*#__PURE__*/React.createElement(Row, {\n    className: \"h-100\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    xxs: \"12\",\n    md: \"10\",\n    className: \"mx-auto my-auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"auth-card\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"position-relative image-side \",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-white h2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, \"MAGIC IS IN THE DETAILS\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"white mb-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, \"Please use your e-mail to reset your password. \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 62\n    }\n  }), \"If you are not a member, please\", ' ', /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/register\",\n    className: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, \"register\"), \".\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-side\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/\",\n    className: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"logo-single\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(CardTitle, {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"user.reset-password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Formik, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    className: \"av-tooltip tooltip-label-bottom\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"form-group has-float-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"user.new-password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Field, {\n    onChange: function onChange(e) {\n      setformData(_objectSpread(_objectSpread({}, formData), {}, {\n        password: e.target.value,\n        email: userEmail()\n      }));\n    },\n    className: \"form-control\",\n    name: \"newPassword\",\n    type: \"password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"form-group has-float-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"user.new-password-again\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Field, {\n    className: \"form-control\",\n    name: \"newPasswordAgain\",\n    type: \"password\",\n    onChange: function onChange(e) {\n      setformData(_objectSpread(_objectSpread({}, formData), {}, {\n        ConfirmPassword: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-between align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/user/login\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"user.login-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    onClick: changePassword,\n    color: \"primary\",\n    className: \"btn-shadow btn-multiple-state \".concat(loading ? 'show-spinner' : ''),\n    size: \"lg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"spinner d-inline-block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"bounce1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"bounce2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"bounce3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"user.reset-password-button\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 23\n    }\n  }))))))))));\n};\n\nvar mapStateToProps = function mapStateToProps(_ref2) {\n  var authUser = _ref2.authUser;\n  var newPassword = authUser.newPassword,\n      resetPasswordCode = authUser.resetPasswordCode,\n      loading = authUser.loading,\n      error = authUser.error;\n  return {\n    newPassword: newPassword,\n    resetPasswordCode: resetPasswordCode,\n    loading: loading,\n    error: error\n  };\n};\n\nexport default connect(mapStateToProps, {\n  resetPasswordAction: resetPassword\n})(ResetPassword);","map":{"version":3,"sources":["/home/browsewire/Desktop/hj/CEI/cei/client/src/views/user/reset-password.js"],"names":["React","useState","useEffect","Row","Card","CardTitle","Label","FormGroup","Button","NavLink","Formik","Form","Field","connect","Colxx","IntlMessages","resetPassword","NotificationManager","axios","validateNewPassword","values","newPassword","newPasswordAgain","errors","ResetPassword","location","history","loading","error","resetPasswordAction","formData","setformData","userEmail","email","localStorage","getItem","console","log","window","href","changePassword","e","password","ConfirmPassword","post","then","res","data","success","removeItem","warning","target","value","mapStateToProps","authUser","resetPasswordCode"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Row, Card, CardTitle, Label, FormGroup, Button } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport { Formik, Form, Field } from 'formik';\nimport { connect } from 'react-redux';\nimport { Colxx } from '../../components/common/CustomBootstrap';\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { resetPassword } from '../../redux/actions';\nimport { NotificationManager } from '../../components/common/react-notifications';\nimport axios from \"axios\"\n\nconst validateNewPassword = (values) => {\n  const { newPassword, newPasswordAgain } = values;\n  const errors = {};\n  if (newPasswordAgain && newPassword !== newPasswordAgain) {\n    errors.newPasswordAgain = 'Please check your new password';\n  }\n  return errors;\n};\n\n\n\nconst ResetPassword = ({\n  location,\n  history,\n  loading,\n  error,\n  resetPasswordAction,\n}) => {\n  const [formData, setformData] = useState({})\n  const userEmail = () => {\n    const email = localStorage.getItem(\"userEmail\")\n    return email\n  }\n  console.log(userEmail());\n  useEffect(()=>{\n    if(userEmail()){\n      console.log(\"hi\");\n    }\n    else{\n      window.location.href=\"/user/login\"\n    }\n  })\n  // CHANGE PASSWORD REQUEST\n  const changePassword = (e) => {\n    // WHILE EXPIRATION TIME IS GREATER THAN CURRENT TIME\n    if (formData.password == formData.ConfirmPassword) {\n      axios.post(\"/api/change-password\", formData).then(res => {\n        console.log(res.data);\n        if (res.data.success) {\n          NotificationManager.success(res.data.success, 'Success', 3000, null, null, '');\n          setformData({})\n          localStorage.removeItem(\"userEmail\");\n        }\n        else if (res.data.error) {\n          NotificationManager.warning(res.data.error, 'Error', 3000, null, null, '');\n        }\n      })\n    }\n    // IF PASSWORD AND CONFIRM PASSWORD DO NOT MATCH\n    else {\n      NotificationManager.warning(\"Password do not match\", 'Error', 3000, null, null, '');\n    }\n\n\n    // }\n    // else {\n    //   NotificationManager.warning(\"OTP expired\", 'OTP Error', 3000, null, null, '');\n    // }\n\n  }\n  // useEffect(() => {\n  //   if (error) {\n  //     NotificationManager.warning(\n  //       error,\n  //       'Forgot Password Error',\n  //       3000,\n  //       null,\n  //       null,\n  //       ''\n  //     );\n  //   } else if (!loading && newPassword === 'success')\n  //     NotificationManager.success(\n  //       'Please login with your new password.',\n  //       'Reset Password Success',\n  //       3000,\n  //       null,\n  //       null,\n  //       ''\n  //     );\n  // }, [error, loading, newPassword]);\n\n  // const onResetPassword = (values) => {\n  //   if (!loading) {\n  //     const params = new URLSearchParams(location.search);\n  //     const oobCode = params.get('oobCode');\n  //     if (oobCode) {\n  //       if (values.newPassword !== '') {\n  //         resetPasswordAction({\n  //           newPassword: values.newPassword,\n  //           resetPasswordCode: oobCode,\n  //           history,\n  //         });\n  //       }\n  //     } else {\n  //       NotificationManager.warning(\n  //         'Please check your email url.',\n  //         'Reset Password Error',\n  //         3000,\n  //         null,\n  //         null,\n  //         ''\n  //       );\n  //     }\n  //   }\n  // };\n\n\n  return (\n    <Row className=\"h-100\">\n      <Colxx xxs=\"12\" md=\"10\" className=\"mx-auto my-auto\">\n        <Card className=\"auth-card\">\n          <div className=\"position-relative image-side \">\n            <p className=\"text-white h2\">MAGIC IS IN THE DETAILS</p>\n            <p className=\"white mb-0\">\n              Please use your e-mail to reset your password. <br />\n              If you are not a member, please{' '}\n              <NavLink to=\"/register\" className=\"white\">\n                register\n              </NavLink>\n              .\n            </p>\n          </div>\n          <div className=\"form-side\">\n            <NavLink to=\"/\" className=\"white\">\n              <span className=\"logo-single\" />\n            </NavLink>\n            <CardTitle className=\"mb-4\">\n              <IntlMessages id=\"user.reset-password\" />\n            </CardTitle>\n\n            <Formik>\n\n              <Form className=\"av-tooltip tooltip-label-bottom\">\n                <FormGroup className=\"form-group has-float-label\">\n                  <Label>\n                    <IntlMessages id=\"user.new-password\" />\n                  </Label>\n                  <Field\n                    onChange={(e) => {\n                      setformData({ ...formData, password: e.target.value ,email:userEmail()})\n                    }}\n                    className=\"form-control\"\n                    name=\"newPassword\"\n                    type=\"password\"\n                  />\n                </FormGroup>\n                <FormGroup className=\"form-group has-float-label\">\n                  <Label>\n                    <IntlMessages id=\"user.new-password-again\" />\n                  </Label>\n                  <Field\n                    className=\"form-control\"\n                    name=\"newPasswordAgain\"\n                    type=\"password\"\n                    onChange={(e) => { setformData({ ...formData, ConfirmPassword: e.target.value }) }}\n\n                  />\n\n                </FormGroup>\n\n                <div className=\"d-flex justify-content-between align-items-center\">\n                  <NavLink to=\"/user/login\">\n                    <IntlMessages id=\"user.login-title\" />\n                  </NavLink>\n                  <Button\n                    onClick={changePassword}\n                    color=\"primary\"\n                    className={`btn-shadow btn-multiple-state ${loading ? 'show-spinner' : ''\n                      }`}\n                    size=\"lg\"\n                  >\n                    <span className=\"spinner d-inline-block\">\n                      <span className=\"bounce1\" />\n                      <span className=\"bounce2\" />\n                      <span className=\"bounce3\" />\n                    </span>\n                    <span className=\"label\">\n                      <IntlMessages id=\"user.reset-password-button\" />\n                    </span>\n                  </Button>\n                </div>\n              </Form>\n\n            </Formik>\n          </div>\n        </Card>\n      </Colxx>\n    </Row>\n  );\n};\n\nconst mapStateToProps = ({ authUser }) => {\n  const { newPassword, resetPasswordCode, loading, error } = authUser;\n  return { newPassword, resetPasswordCode, loading, error };\n};\n\nexport default connect(mapStateToProps, {\n  resetPasswordAction: resetPassword,\n})(ResetPassword);\n"]},"metadata":{},"sourceType":"module"}