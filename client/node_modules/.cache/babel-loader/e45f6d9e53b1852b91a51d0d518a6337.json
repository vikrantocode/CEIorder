{"ast":null,"code":"import _createForOfIteratorHelper from \"/home/browsewire/Desktop/hj/CEI/cei/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _regeneratorRuntime from \"/home/browsewire/Desktop/hj/CEI/cei/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/browsewire/Desktop/hj/CEI/cei/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/browsewire/Desktop/hj/CEI/cei/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/browsewire/Desktop/hj/CEI/cei/client/src/views/app/orders/orders/ImportBulkOrder.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { servicePath } from '../../../../constants/defaultValues';\nimport useMousetrap from '../../../../hooks/use-mousetrap';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { NotificationManager } from '../../../../components/common/react-notifications';\nimport IntlMessages from '../../../../helpers/IntlMessages';\nimport OrdersListHeading from './BulkOrdersListHeading';\nimport OrdersPageListing from './BulkOrdersPageListing';\nimport OrdersPageHeading from './BulkOrderPageHeading';\n\nvar ImportBulkOrder = function ImportBulkOrder(_ref) {\n  var match = _ref.match;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoaded = _useState2[0],\n      setIsLoaded = _useState2[1];\n\n  var _useState3 = useState('thumblist'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      displayMode = _useState4[0],\n      setDisplayMode = _useState4[1];\n\n  var _useState5 = useState(1),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentPage = _useState6[0],\n      setCurrentPage = _useState6[1];\n\n  var _useState7 = useState(15),\n      _useState8 = _slicedToArray(_useState7, 2),\n      selectedPageSize = _useState8[0],\n      setSelectedPageSize = _useState8[1];\n\n  var _useState9 = useState({\n    column: 'title',\n    label: 'Category Name'\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      selectedOrderOption = _useState10[0],\n      setSelectedOrderOption = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      modalBasic = _useState12[0],\n      setModalBasic = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      modalOpen = _useState14[0],\n      setModalOpen = _useState14[1];\n\n  var _useState15 = useState(0),\n      _useState16 = _slicedToArray(_useState15, 2),\n      totalItemCount = _useState16[0],\n      setTotalItemCount = _useState16[1];\n\n  var _useState17 = useState(1),\n      _useState18 = _slicedToArray(_useState17, 2),\n      totalPage = _useState18[0],\n      setTotalPage = _useState18[1];\n\n  var _useState19 = useState([]),\n      _useState20 = _slicedToArray(_useState19, 2),\n      selectedItems = _useState20[0],\n      setSelectedItems = _useState20[1];\n\n  var _useState21 = useState([]),\n      _useState22 = _slicedToArray(_useState21, 2),\n      items = _useState22[0],\n      setItems = _useState22[1];\n\n  var _useState23 = useState(false),\n      _useState24 = _slicedToArray(_useState23, 2),\n      change = _useState24[0],\n      setchange = _useState24[1];\n\n  var _useState25 = useState(''),\n      _useState26 = _slicedToArray(_useState25, 2),\n      orderId = _useState26[0],\n      setOrderId = _useState26[1];\n\n  var _useState27 = useState(null),\n      _useState28 = _slicedToArray(_useState27, 2),\n      importFile = _useState28[0],\n      setImportFile = _useState28[1];\n\n  var _useState29 = useState(false),\n      _useState30 = _slicedToArray(_useState29, 2),\n      importModal = _useState30[0],\n      setImportModal = _useState30[1];\n\n  var _useState31 = useState(false),\n      _useState32 = _slicedToArray(_useState31, 2),\n      importing = _useState32[0],\n      setImporting = _useState32[1];\n\n  var styles = {\n    profileImg: {\n      height: '3rem',\n      width: '3rem',\n      borderRadius: '50%'\n    }\n  };\n\n  var deleteModal = function deleteModal(e) {\n    setOrderId(e);\n    setModalBasic(true);\n  };\n\n  useEffect(function () {\n    setCurrentPage(1);\n  }, [selectedPageSize, selectedOrderOption]);\n  useEffect(function () {\n    axios.get(\"/ordersync/filename\").then(function (_ref2) {\n      var data = _ref2.data;\n      console.log(data, \"------------------------------------------------------------------file names\"); //   setItems(data.orders);\n      //   setTotalItemCount(data.count);\n\n      setIsLoaded(true);\n    });\n  }, [change]);\n\n  var deleteOrder = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              axios.post('/api/orders/delete', null, {\n                params: {\n                  id: orderId\n                }\n              }).then(function (res) {\n                setchange(!change);\n                setModalBasic(false);\n                NotificationManager.success(res.data.success, 'Success', 3000, null, null, '');\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function deleteOrder(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var importOrders = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var data, config, _iterator, _step, pair, res;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!importFile) {\n                _context2.next = 23;\n                break;\n              }\n\n              // Update the formData object\n              data = new FormData();\n              data.append('importFile', importFile);\n              config = {\n                headers: {\n                  'content-type': 'multipart/form-data'\n                }\n              }; // Details of the uploaded file\n\n              _iterator = _createForOfIteratorHelper(data.entries());\n\n              try {\n                for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                  pair = _step.value;\n                  console.log(pair[0], ' : ', pair[1], \"-------------pair-----------------------\");\n                } // Request made to the backend api\n                // Send formData object \n\n              } catch (err) {\n                _iterator.e(err);\n              } finally {\n                _iterator.f();\n              }\n\n              _context2.prev = 6;\n              setImporting(true);\n              _context2.next = 10;\n              return axios.post('/api/orders/import', data, config);\n\n            case 10:\n              res = _context2.sent;\n\n              if (res.status === 201) {\n                setImporting(false);\n                setchange(!change);\n                setImportModal(false);\n                NotificationManager.success(res.data.success, 'Success', 3000, null, null, '');\n              } else {\n                setImporting(false);\n                NotificationManager.error(res.data.error, 'Error', 3000, null, null, '');\n              }\n\n              console.log(res);\n              _context2.next = 20;\n              break;\n\n            case 15:\n              _context2.prev = 15;\n              _context2.t0 = _context2[\"catch\"](6);\n              console.log(_context2.t0);\n              setImporting(false);\n              NotificationManager.error(\"Something Wrong With CSV\", 'Error', 3000, null, null, '');\n\n            case 20:\n              console.log(importFile, \"==========================================================================================importFile\");\n              _context2.next = 24;\n              break;\n\n            case 23:\n              NotificationManager.error(\"Select File to Import...\", 'Error', 3000, null, null, '');\n\n            case 24:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[6, 15]]);\n    }));\n\n    return function importOrders() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var onContextMenu = function onContextMenu(e, data) {\n    var clickedCategoryId = data.data;\n\n    if (!selectedItems.includes(clickedCategoryId)) {\n      setSelectedItems([clickedCategoryId]);\n    }\n\n    return true;\n  };\n\n  useMousetrap(['ctrl+d', 'command+d'], function () {\n    setSelectedItems([]);\n    return false;\n  });\n  return !isLoaded ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loading\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 5\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"disable-text-selection\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(OrdersPageHeading, {\n    heading: \"Orders\",\n    addUrl: \"/app/orders/add-order\",\n    displayMode: displayMode,\n    changeDisplayMode: setDisplayMode,\n    changePageSize: setSelectedPageSize,\n    selectedPageSize: selectedPageSize,\n    totalItemCount: totalItemCount,\n    selectedOrderOption: selectedOrderOption,\n    match: match,\n    selectedItemsLength: selectedItems ? selectedItems.length : 0,\n    itemsLength: items ? items.length : 0,\n    toggleModal: function toggleModal() {\n      return setModalOpen(!modalOpen);\n    },\n    setImportFile: setImportFile,\n    importModal: importModal,\n    setImportModal: setImportModal,\n    importOrders: importOrders,\n    importing: importing,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }), items.length == 0 ? '' : /*#__PURE__*/React.createElement(OrdersListHeading, {\n    selectedItemsLength: selectedItems ? selectedItems.length : 0,\n    itemsLength: items ? items.length : 0,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 11\n    }\n  }), items.length == 0 ? /*#__PURE__*/React.createElement(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 11\n    }\n  }, \"No Records found\") : /*#__PURE__*/React.createElement(OrdersPageListing, {\n    items: items,\n    deleteModal: deleteModal,\n    displayMode: displayMode,\n    selectedItems: selectedItems,\n    currentPage: currentPage,\n    totalPage: totalPage,\n    onContextMenu: onContextMenu,\n    setOrderId: setOrderId,\n    pagesize: selectedPageSize,\n    setModalBasic: setModalBasic,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modalBasic,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"Delete\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 11\n    }\n  }, \"Are you sure you want to delete Order?\"), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: deleteOrder,\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }\n  }, \"Confirm\"), ' ', /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    onClick: function onClick() {\n      return setModalBasic(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }\n  }, \"Cancel\")))));\n};\n\nexport default ImportBulkOrder;","map":{"version":3,"sources":["/home/browsewire/Desktop/hj/CEI/cei/client/src/views/app/orders/orders/ImportBulkOrder.js"],"names":["React","useState","useEffect","axios","servicePath","useMousetrap","Button","Modal","ModalHeader","ModalBody","ModalFooter","NotificationManager","IntlMessages","OrdersListHeading","OrdersPageListing","OrdersPageHeading","ImportBulkOrder","match","isLoaded","setIsLoaded","displayMode","setDisplayMode","currentPage","setCurrentPage","selectedPageSize","setSelectedPageSize","column","label","selectedOrderOption","setSelectedOrderOption","modalBasic","setModalBasic","modalOpen","setModalOpen","totalItemCount","setTotalItemCount","totalPage","setTotalPage","selectedItems","setSelectedItems","items","setItems","change","setchange","orderId","setOrderId","importFile","setImportFile","importModal","setImportModal","importing","setImporting","styles","profileImg","height","width","borderRadius","deleteModal","e","get","then","data","console","log","deleteOrder","post","params","id","res","success","importOrders","FormData","append","config","headers","entries","pair","status","error","onContextMenu","clickedCategoryId","includes","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { servicePath } from '../../../../constants/defaultValues';\nimport useMousetrap from '../../../../hooks/use-mousetrap';\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n} from 'reactstrap';\nimport { NotificationManager } from '../../../../components/common/react-notifications';\nimport IntlMessages from '../../../../helpers/IntlMessages';\nimport OrdersListHeading from './BulkOrdersListHeading';\nimport OrdersPageListing from './BulkOrdersPageListing';\nimport OrdersPageHeading from './BulkOrderPageHeading';\n\nconst ImportBulkOrder = ({ match }) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [displayMode, setDisplayMode] = useState('thumblist');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [selectedPageSize, setSelectedPageSize] = useState(15);\n  const [selectedOrderOption, setSelectedOrderOption] = useState({\n    column: 'title',\n    label: 'Category Name',\n  });\n  const [modalBasic, setModalBasic] = useState(false);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [totalItemCount, setTotalItemCount] = useState(0);\n  const [totalPage, setTotalPage] = useState(1);\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [items, setItems] = useState([]);\n\n\n  const [change, setchange] = useState(false);\n\n  const [orderId, setOrderId] = useState('');\n  const [importFile, setImportFile] = useState(null);\n  const [importModal, setImportModal] = useState(false);\n  const [importing, setImporting] = useState(false);\n\n  const styles = {\n    profileImg: {\n      height: '3rem',\n      width: '3rem',\n      borderRadius: '50%',\n    },\n  };\n\n  const deleteModal = (e) => {\n    setOrderId(e);\n    setModalBasic(true);\n  };\n\n\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [selectedPageSize, selectedOrderOption]);\n\n  useEffect(() => {\n    axios.get(`/ordersync/filename`).then(({ data }) => {\n      console.log(data, \"------------------------------------------------------------------file names\");\n    //   setItems(data.orders);\n    //   setTotalItemCount(data.count);\n      setIsLoaded(true);\n    });\n  }, [change]);\n\n  const deleteOrder = async (e) => {\n    axios\n      .post('/api/orders/delete', null, { params: { id: orderId } })\n      .then((res) => {\n        setchange(!change);\n        setModalBasic(false);\n        NotificationManager.success(\n          res.data.success,\n          'Success',\n          3000,\n          null,\n          null,\n          ''\n        );\n      });\n  };\n\n\n  const importOrders = async () => {\n    if (importFile) {\n      // Update the formData object\n      const data = new FormData();\n      data.append('importFile', importFile);\n      const config = {\n          headers: {\n            'content-type': 'multipart/form-data',\n          },\n        };\n        // Details of the uploaded file\n      for (let pair of data.entries()) {\n        console.log(pair[0], ' : ', pair[1], \"-------------pair-----------------------\");\n      }\n      // Request made to the backend api\n      // Send formData object \n      try {\n        setImporting(true);\n        const res = await axios.post(\n          '/api/orders/import',\n          data,\n          config\n        );\n        if (res.status === 201) {\n          setImporting(false);\n          setchange(!change);\n          setImportModal(false);\n          NotificationManager.success(\n            res.data.success,\n            'Success',\n            3000,\n            null,\n            null,\n            ''\n          );\n        } else {\n          setImporting(false);\n          NotificationManager.error(\n            res.data.error,\n            'Error',\n            3000,\n            null,\n            null,\n            ''\n          );\n        }\n        console.log(res);\n      } catch (err) {\n        console.log(err);\n        setImporting(false);\n        NotificationManager.error(\n          `Something Wrong With CSV`,\n          'Error',\n          3000,\n          null,\n          null,\n          ''\n        );\n      }\n    console.log(importFile, \"==========================================================================================importFile\")\n    } else {\n      NotificationManager.error(\n        `Select File to Import...`,\n        'Error',\n        3000,\n        null,\n        null,\n        ''\n      );\n    }\n  };\n\n  const onContextMenu = (e, data) => {\n    const clickedCategoryId = data.data;\n    if (!selectedItems.includes(clickedCategoryId)) {\n      setSelectedItems([clickedCategoryId]);\n    }\n\n    return true;\n  };\n\n  useMousetrap(['ctrl+d', 'command+d'], () => {\n    setSelectedItems([]);\n    return false;\n  });\n\n  return !isLoaded ? (\n    <div className=\"loading\" />\n  ) : (\n    <>\n      <div className=\"disable-text-selection\">\n        <OrdersPageHeading\n          heading=\"Orders\"\n          addUrl=\"/app/orders/add-order\"\n          displayMode={displayMode}\n          changeDisplayMode={setDisplayMode}\n          changePageSize={setSelectedPageSize}\n          selectedPageSize={selectedPageSize}\n          totalItemCount={totalItemCount}\n          selectedOrderOption={selectedOrderOption}\n          match={match}\n          selectedItemsLength={selectedItems ? selectedItems.length : 0}\n          itemsLength={items ? items.length : 0}\n          toggleModal={() => setModalOpen(!modalOpen)}\n          setImportFile={setImportFile}\n          importModal={importModal}\n          setImportModal={setImportModal}\n          importOrders={importOrders}\n          importing={importing}\n        />\n        {items.length == 0 ? (\n          ''\n        ) : (\n          <OrdersListHeading\n            selectedItemsLength={selectedItems ? selectedItems.length : 0}\n            itemsLength={items ? items.length : 0}\n          />\n        )}\n\n        {items.length == 0 ? (\n          <h3>No Records found</h3>\n        ) : (\n          <OrdersPageListing\n            items={items}\n            deleteModal={deleteModal}\n            displayMode={displayMode}\n            selectedItems={selectedItems}\n            currentPage={currentPage}\n            totalPage={totalPage}\n            onContextMenu={onContextMenu}\n\n            setOrderId={setOrderId}\n            pagesize={selectedPageSize}\n            setModalBasic={setModalBasic}\n          />\n        )}\n\n        {/* Edit Modal */}\n      \n        {/* Delete Modal */}\n        <Modal isOpen={modalBasic}>\n          <ModalHeader>\n            <IntlMessages id=\"Delete\" />\n          </ModalHeader>\n          <ModalBody>Are you sure you want to delete Order?</ModalBody>\n          <ModalFooter>\n            <Button onClick={deleteOrder} color=\"primary\">\n              Confirm\n            </Button>{' '}\n            <Button color=\"secondary\" onClick={() => setModalBasic(false)}>\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    </>\n  );\n};\n\nexport default ImportBulkOrder;\n"]},"metadata":{},"sourceType":"module"}