{"ast":null,"code":"import _objectSpread from \"/home/browsewire/Desktop/hj/CEI/cei/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/browsewire/Desktop/hj/CEI/cei/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/browsewire/Desktop/hj/CEI/cei/client/src/views/app/orders/orders/BulkOrderOptions.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport Loader from 'react-loader-spinner';\nimport { Row, Button, Col, Label, Input, Card, CardBody, CustomInput } from 'reactstrap';\nimport axios from 'axios';\nimport { useHistory } from 'react-router';\nimport { Colxx, Separator } from '../../../../components/common/CustomBootstrap';\nimport Breadcrumb from '../../../../containers/navs/Breadcrumb';\nimport IntlMessages from '../../../../helpers/IntlMessages';\nimport { NotificationManager } from '../../../../components/common/react-notifications';\n\nvar BulkOrderOptions = function BulkOrderOptions(_ref) {\n  var match = _ref.match;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      orderItems = _useState4[0],\n      setOrderItems = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      onchange = _useState6[0],\n      setOnchange = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      importFile = _useState8[0],\n      setImportFile = _useState8[1];\n\n  var _useState9 = useState({}),\n      _useState10 = _slicedToArray(_useState9, 2),\n      formData = _useState10[0],\n      setFormData = _useState10[1];\n\n  var _useState11 = useState({}),\n      _useState12 = _slicedToArray(_useState11, 2),\n      externalLinkData = _useState12[0],\n      setExternalLinkData = _useState12[1];\n\n  var history = useHistory();\n\n  var onValueChange = function onValueChange(e) {\n    setOnchange(e);\n    history.push('/app/orders/import-bulk-orders');\n  };\n\n  var ImportFtp = function ImportFtp() {\n    console.log(formData, \"-----------------------------form Data\");\n  };\n\n  var ImportExternalLink = function ImportExternalLink() {\n    try {\n      axios.post('/ordersync//import-from-external-link', null, {\n        params: {\n          link: externalLinkData.link\n        }\n      }).then(function (res) {\n        if (res.status === 201) {\n          NotificationManager.success(res.data, 'Success', 3000, null, null, '');\n        } else {\n          NotificationManager.error(res.data, 'Error', 3000, null, null, '');\n        }\n      });\n    } catch (_unused) {\n      NotificationManager.error(\"Somthing went Wrong\", 'Error', 3000, null, null, '');\n    } //    if (res.status === 201) {\n    //     NotificationManager.success(\n    //       res.data.success,\n    //       'Success',\n    //       3000,\n    //       null,\n    //       null,\n    //       ''\n    //     );\n    //   } else {\n    //     NotificationManager.error(\n    //       res.data.error,\n    //       'Error',\n    //       3000,\n    //       null,\n    //       null,\n    //       ''\n    //     );\n    //   }\n\n  };\n\n  var ImportUploadfile = function ImportUploadfile() {\n    console.log(importFile, \"============================================================fileData\");\n  };\n\n  return isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loading\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    xxs: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    heading: 'Import Order',\n    match: match,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-zero\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, '  '), /*#__PURE__*/React.createElement(Separator, {\n    className: \"mb-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex flex-column\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    xxs: \"3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"h5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, \"Select Options\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    className: \"m-2 p-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"radio\",\n    value: \"1\",\n    name: \"options\",\n    onChange: function onChange() {\n      onValueChange(1);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 23\n    }\n  }, \"Direct Upload\")), /*#__PURE__*/React.createElement(Col, {\n    className: \"m-2 p-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"radio\",\n    value: \"2\",\n    name: \"options\",\n    onChange: function onChange() {\n      onValueChange(2);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, \"Using FTP/SSH\")), /*#__PURE__*/React.createElement(Col, {\n    className: \"m-2 p-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"radio\",\n    value: \"3\",\n    name: \"options\",\n    onChange: function onChange() {\n      onValueChange(3);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, \"External Links\"))))), onchange == 1 ? /*#__PURE__*/React.createElement(Colxx, {\n    xxs: \"9\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    xxs: \"12\",\n    className: \"mb-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 18\n    }\n  }, \"DIRECT UPLOAD\"), /*#__PURE__*/React.createElement(Row, {\n    className: \"mt-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 20\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 20\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"Select csv File to Import\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(CustomInput, {\n    type: \"file\",\n    accept: \".csv\",\n    multiple: true,\n    onChange: function onChange(event) {\n      setImportFile(event.target.files[0]);\n    },\n    id: \"exampleCustomFileBrowser3\",\n    name: \"customFile\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '20px 0px',\n      margin: '20px 0px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    onClick: function onClick() {\n      ImportUploadfile();\n    },\n    className: \"mt-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 20\n    }\n  }, \"Add File\")))))) : onchange == 2 ? /*#__PURE__*/React.createElement(Colxx, {\n    xxs: \"9\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    xxs: \"12\",\n    className: \"mb-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 19\n    }\n  }, \"USING FTP/SSH\"), /*#__PURE__*/React.createElement(Row, {\n    className: \"mt-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"Host Name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    onChange: function onChange(e) {\n      setFormData(_objectSpread(_objectSpread({}, formData), {}, {\n        host: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"Port No.\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    type: \"number\",\n    onChange: function onChange(e) {\n      setFormData(_objectSpread(_objectSpread({}, formData), {}, {\n        port: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    className: \"mt-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"User Name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    onChange: function onChange(e) {\n      setFormData(_objectSpread(_objectSpread({}, formData), {}, {\n        uname: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"Password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    onChange: function onChange(e) {\n      setFormData(_objectSpread(_objectSpread({}, formData), {}, {\n        password: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    className: \"mt-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"Directory Path\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    onChange: function onChange(e) {\n      setFormData(_objectSpread(_objectSpread({}, formData), {}, {\n        path: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '20px 0px',\n      margin: '20px 0px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    className: \"mt-3\",\n    onClick: ImportFtp,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 21\n    }\n  }, \"Import\")))))) : onchange == 3 ? /*#__PURE__*/React.createElement(Colxx, {\n    xxs: \"9\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    xxs: \"12\",\n    className: \"mb-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 19\n    }\n  }, \"EXTERNAL LINK\"), /*#__PURE__*/React.createElement(Row, {\n    className: \"mt-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"External Link\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    onChange: function onChange(e) {\n      setExternalLinkData(_objectSpread(_objectSpread({}, externalLinkData), {}, {\n        link: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '20px 0px',\n      margin: '20px 0px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    className: \"mt-3\",\n    onClick: ImportExternalLink,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 21\n    }\n  }, \"Import\")))))) : \"\")), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: importsModal,\n    toggle: function toggle() {\n      return setImportsModal(!importsModal);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"Importing!!!.\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 mt-3 text-right\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 9\n    }\n  }))));\n};\n\nexport default BulkOrderOptions;","map":{"version":3,"sources":["/home/browsewire/Desktop/hj/CEI/cei/client/src/views/app/orders/orders/BulkOrderOptions.js"],"names":["React","useState","useEffect","Loader","Row","Button","Col","Label","Input","Card","CardBody","CustomInput","axios","useHistory","Colxx","Separator","Breadcrumb","IntlMessages","NotificationManager","BulkOrderOptions","match","isLoading","setIsLoading","orderItems","setOrderItems","onchange","setOnchange","importFile","setImportFile","formData","setFormData","externalLinkData","setExternalLinkData","history","onValueChange","e","push","ImportFtp","console","log","ImportExternalLink","post","params","link","then","res","status","success","data","error","ImportUploadfile","event","target","files","padding","margin","host","value","port","uname","password","path","importsModal","setImportsModal"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,GAAtB,EAA2BC,KAA3B,EAAkCC,KAAlC,EAAyCC,IAAzC,EAA+CC,QAA/C,EAAyDC,WAAzD,QAA4E,YAA5E;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SACEC,KADF,EAEEC,SAFF,QAGO,+CAHP;AAIA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,SAASC,mBAAT,QAAoC,mDAApC;;AAGA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAAA,kBACJnB,QAAQ,CAAC,KAAD,CADJ;AAAA;AAAA,MAC/BoB,SAD+B;AAAA,MACpBC,YADoB;;AAAA,mBAEFrB,QAAQ,CAAC,EAAD,CAFN;AAAA;AAAA,MAE/BsB,UAF+B;AAAA,MAEnBC,aAFmB;;AAAA,mBAGNvB,QAAQ,EAHF;AAAA;AAAA,MAG/BwB,QAH+B;AAAA,MAGrBC,WAHqB;;AAAA,mBAIFzB,QAAQ,CAAC,IAAD,CAJN;AAAA;AAAA,MAI/B0B,UAJ+B;AAAA,MAInBC,aAJmB;;AAAA,mBAKN3B,QAAQ,CAAC,EAAD,CALF;AAAA;AAAA,MAK/B4B,QAL+B;AAAA,MAKrBC,WALqB;;AAAA,oBAMU7B,QAAQ,CAAC,EAAD,CANlB;AAAA;AAAA,MAM/B8B,gBAN+B;AAAA,MAMbC,mBANa;;AAQtC,MAAMC,OAAO,GAAGpB,UAAU,EAA1B;;AAIA,MAAMqB,aAAa,GAAC,SAAdA,aAAc,CAACC,CAAD,EAAO;AACzBT,IAAAA,WAAW,CAACS,CAAD,CAAX;AACAF,IAAAA,OAAO,CAACG,IAAR,CAAa,gCAAb;AAED,GAJD;;AAMA,MAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ,EAAsB,wCAAtB;AACH,GAFD;;AAIA,MAAMW,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/B,QAAG;AACA5B,MAAAA,KAAK,CAAC6B,IAAN,CAAW,uCAAX,EAAoD,IAApD,EAA0D;AAAEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,IAAI,EAAEZ,gBAAgB,CAACY;AAAzB;AAAV,OAA1D,EACEC,IADF,CACO,UAACC,GAAD,EAAS;AACb,YAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtB5B,UAAAA,mBAAmB,CAAC6B,OAApB,CACEF,GAAG,CAACG,IADN,EAEE,SAFF,EAGE,IAHF,EAIE,IAJF,EAKE,IALF,EAME,EANF;AAQD,SATD,MASO;AACL9B,UAAAA,mBAAmB,CAAC+B,KAApB,CACEJ,GAAG,CAACG,IADN,EAEE,OAFF,EAGE,IAHF,EAIE,IAJF,EAKE,IALF,EAME,EANF;AAQD;AACF,OArBF;AAsBA,KAvBH,CAuBG,gBAAK;AACJ9B,MAAAA,mBAAmB,CAAC+B,KAApB,CACE,qBADF,EAEE,OAFF,EAGE,IAHF,EAIE,IAJF,EAKE,IALF,EAME,EANF;AAQD,KAjC4B,CAmC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACH,GAtDC;;AAuDF,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAK;AAC1BZ,IAAAA,OAAO,CAACC,GAAR,CAAYZ,UAAZ,EAAwB,sEAAxB;AAEH,GAHD;;AAOE,SAAON,SAAS,gBACd;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADc,gBAGd,uDACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAE,cAArB;AAAqC,IAAA,KAAK,EAAED,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4B,IAA5B,CAFF,eAIE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,CADF,eAUE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEM,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,KAAK,EAAG,GAFV;AAGE,IAAA,IAAI,EAAG,SAHT;AAIE,IAAA,QAAQ,EAAE,oBAAM;AACZc,MAAAA,aAAa,CAAC,CAAD,CAAb;AACD,KANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFN,eAWM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAXN,CAHF,eAgBE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA,oBAAC,KAAD;AACA,IAAA,IAAI,EAAC,OADL;AAEA,IAAA,KAAK,EAAG,GAFR;AAGA,IAAA,IAAI,EAAG,SAHP;AAIA,IAAA,QAAQ,EAAE,oBAAM;AACZA,MAAAA,aAAa,CAAC,CAAD,CAAb;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,eAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAXA,CAhBF,eA6BE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA,oBAAC,KAAD;AACA,IAAA,IAAI,EAAC,OADL;AAEA,IAAA,KAAK,EAAG,GAFR;AAGA,IAAA,IAAI,EAAG,SAHP;AAIA,IAAA,QAAQ,EAAE,oBAAM;AACZA,MAAAA,aAAa,CAAC,CAAD,CAAb;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,eAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAXA,CA7BF,CADF,CADJ,CADA,EAgDGT,QAAQ,IAAG,CAAX,gBACA,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,IAAX;AAAgB,IAAA,SAAS,EAAC,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACK,oBAAC,YAAD;AAAc,IAAA,EAAE,EAAC,2BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADL,CADA,eAIG,oBAAC,WAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,MAAM,EAAC,MAFT;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,QAAQ,EAAE,kBAAC0B,KAAD,EAAW;AACnBvB,MAAAA,aAAa,CAACuB,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAD,CAAb;AACD,KANH;AAOE,IAAA,EAAE,EAAC,2BAPL;AAQE,IAAA,IAAI,EAAC,YARP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJH,CADF,CAFF,eAoBE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE,UAAX;AAAuBC,MAAAA,MAAM,EAAE;AAA/B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,WADR;AAEE,IAAA,OAAO,EAAE,mBAAM;AACZL,MAAAA,gBAAgB;AAClB,KAJH;AAKE,IAAA,SAAS,EAAC,MALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CApBF,CADF,CADF,CADA,CADA,GAuCGzB,QAAQ,IAAG,CAAX,gBACF,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,IAAX;AAAgB,IAAA,SAAS,EAAC,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,EAAE,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,QAAQ,EAAE,kBAACU,CAAD,EAAO;AACbL,MAAAA,WAAW,iCACND,QADM;AAET2B,QAAAA,IAAI,EAAErB,CAAC,CAACiB,MAAF,CAASK;AAFN,SAAX;AAID,KAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,eAeE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,EAAE,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,QAAQ,EAAE,kBAACtB,CAAD,EAAO;AACbL,MAAAA,WAAW,iCACND,QADM;AAET6B,QAAAA,IAAI,EAAEvB,CAAC,CAACiB,MAAF,CAASK;AAFN,SAAX;AAID,KAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAfF,CAFF,eAgCE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,EAAE,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,QAAQ,EAAE,kBAACtB,CAAD,EAAO;AACbL,MAAAA,WAAW,iCACND,QADM;AAET8B,QAAAA,KAAK,EAAExB,CAAC,CAACiB,MAAF,CAASK;AAFP,SAAX;AAID,KAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,eAeE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,EAAE,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,QAAQ,EAAE,kBAACtB,CAAD,EAAO;AACbL,MAAAA,WAAW,iCACND,QADM;AAET+B,QAAAA,QAAQ,EAAEzB,CAAC,CAACiB,MAAF,CAASK;AAFV,SAAX;AAID,KAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAfF,CAhCF,eA8DE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,EAAE,EAAC,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,QAAQ,EAAE,kBAACtB,CAAD,EAAO;AACbL,MAAAA,WAAW,iCACND,QADM;AAETgC,QAAAA,IAAI,EAAE1B,CAAC,CAACiB,MAAF,CAASK;AAFN,SAAX;AAID,KAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,CA9DF,eA8EE;AAAK,IAAA,KAAK,EAAE;AAAEH,MAAAA,OAAO,EAAE,UAAX;AAAuBC,MAAAA,MAAM,EAAE;AAA/B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,WADR;AAEE,IAAA,SAAS,EAAC,MAFZ;AAGE,IAAA,OAAO,EAAElB,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CA9EF,CADF,CADF,CADA,CADE,GA+FAZ,QAAQ,IAAG,CAAX,gBACF,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,IAAX;AAAgB,IAAA,SAAS,EAAC,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,EAAE,EAAC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,QAAQ,EAAE,kBAACU,CAAD,EAAO;AACbH,MAAAA,mBAAmB,iCACdD,gBADc;AAEjBY,QAAAA,IAAI,EAAER,CAAC,CAACiB,MAAF,CAASK;AAFE,SAAnB;AAID,KAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,CAFF,eAkBE;AAAK,IAAA,KAAK,EAAE;AAAEH,MAAAA,OAAO,EAAE,UAAX;AAAuBC,MAAAA,MAAM,EAAE;AAA/B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,WADR;AAEE,IAAA,SAAS,EAAC,MAFZ;AAGE,IAAA,OAAO,EAAIf,kBAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAlBF,CADF,CADF,CADA,CADE,GAoCJ,EA1NF,CADF,CAVF,eA4OE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEsB,YAAf;AAA6B,IAAA,MAAM,EAAE;AAAA,aAAMC,eAAe,CAAC,CAACD,YAAF,CAArB;AAAA,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,EAAE,EAAC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAJF,CA5OF,CAHF;AA2PD,CA/UD;;AAiVA,eAAe3C,gBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Loader from 'react-loader-spinner';\nimport { Row, Button, Col, Label, Input, Card, CardBody, CustomInput } from 'reactstrap';\nimport axios from 'axios';\nimport { useHistory } from 'react-router';\nimport {\n  Colxx,\n  Separator,\n} from '../../../../components/common/CustomBootstrap';\nimport Breadcrumb from '../../../../containers/navs/Breadcrumb';\nimport IntlMessages from '../../../../helpers/IntlMessages';\nimport { NotificationManager } from '../../../../components/common/react-notifications';\n\n\nconst BulkOrderOptions = ({ match }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [orderItems, setOrderItems] = useState([]);\n  const [onchange, setOnchange] = useState();\n  const [importFile, setImportFile] = useState(null);\n  const [formData, setFormData] = useState({});\n  const [externalLinkData, setExternalLinkData] = useState({});\n\n  const history = useHistory();\n\n\n\n  const onValueChange=(e) => {\n    setOnchange(e)\n    history.push('/app/orders/import-bulk-orders');\n    \n  }\n\n  const ImportFtp = () => {\n      console.log(formData, \"-----------------------------form Data\")\n  }\n\n  const ImportExternalLink = () => {\n    try{\n       axios.post('/ordersync//import-from-external-link', null, { params: { link: externalLinkData.link } })\n        .then((res) => {\n          if (res.status === 201) {\n            NotificationManager.success(\n              res.data,\n              'Success',\n              3000,\n              null,\n              null,\n              ''\n            );\n          } else {\n            NotificationManager.error(\n              res.data,\n              'Error',\n              3000,\n              null,\n              null,\n              ''\n            );\n          }\n        })\n      }catch{\n        NotificationManager.error(\n          \"Somthing went Wrong\",\n          'Error',\n          3000,\n          null,\n          null,\n          ''\n        );\n      }\n      \n    //    if (res.status === 201) {\n    //     NotificationManager.success(\n    //       res.data.success,\n    //       'Success',\n    //       3000,\n    //       null,\n    //       null,\n    //       ''\n    //     );\n    //   } else {\n    //     NotificationManager.error(\n    //       res.data.error,\n    //       'Error',\n    //       3000,\n    //       null,\n    //       null,\n    //       ''\n    //     );\n    //   }\n}\nconst ImportUploadfile = () =>{\n    console.log(importFile, \"============================================================fileData\")\n\n}\n\n\n\n  return isLoading ? (\n    <div className=\"loading\" />\n  ) : (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n          <Breadcrumb heading={'Import Order'} match={match} />\n          <div className=\"text-zero\">{'  '}</div>\n\n          <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      \n      <div className=\"d-flex flex-column\">\n        <Row className=\"mb-4\">\n        <Colxx xxs=\"3\">\n            <Card>\n              <CardBody>\n                <div className=\"h5\">Select Options</div>\n                <hr />\n                <Col className=\"m-2 p-2\">\n\n                      <Input\n                        type=\"radio\"\n                        value = \"1\"\n                        name = \"options\"\n                        onChange={() => {\n                            onValueChange(1);\n                          }}\n\n                      /> \n                      <h6>Direct Upload</h6>\n                </Col>\n                <Col className=\"m-2 p-2\">\n\n                <Input\n                type=\"radio\"\n                value = \"2\"\n                name = \"options\"\n                onChange={() => {\n                    onValueChange(2);\n                  }}\n\n                /> \n                <h6>Using FTP/SSH</h6>\n                </Col>\n                <Col className=\"m-2 p-2\">\n\n                <Input\n                type=\"radio\"\n                value = \"3\"\n                name = \"options\"\n                onChange={() => {\n                    onValueChange(3);\n                  }}\n\n                /> \n                <h6>External Links</h6>\n                </Col>\n              </CardBody>\n            </Card>\n          </Colxx>\n          {onchange ==1 ? (\n           <Colxx xxs=\"9\">\n           <Card>\n             <CardBody>\n               <Colxx xxs=\"12\" className=\"mb-5\">\n                 <h3 className=\"mb-4\">DIRECT UPLOAD</h3>\n                 <Row className=\"mt-3\">\n                   <Col>\n                   <Label>\n                        <IntlMessages id=\"Select csv File to Import\" />\n                      </Label>\n                      <CustomInput\n                        type=\"file\"\n                        accept=\".csv\"\n                        multiple\n                        onChange={(event) => {\n                          setImportFile(event.target.files[0]);\n                        }}\n                        id=\"exampleCustomFileBrowser3\"\n                        name=\"customFile\"\n                      />\n                   </Col>\n\n                 </Row>\n                 <div style={{ padding: '20px 0px', margin: '20px 0px' }}>\n                   <Button\n                     color=\"secondary\"\n                     onClick={() => {\n                        ImportUploadfile();\n                     }}\n                     className=\"mt-3\"\n                   >\n                     Add File\n                   </Button>\n                 </div>\n               </Colxx>\n             </CardBody>\n           </Card>\n         </Colxx>\n          ):( onchange ==2 ? (\n            <Colxx xxs=\"9\">\n            <Card>\n              <CardBody>\n                <Colxx xxs=\"12\" className=\"mb-5\">\n                  <h3 className=\"mb-4\">USING FTP/SSH</h3>\n                  <Row className=\"mt-3\">\n                    <Col>\n                      <Label>\n                        <IntlMessages id=\"Host Name\" />\n                      </Label>\n                      <Input\n                        type=\"text\"\n                        onChange={(e) => {\n                            setFormData({\n                              ...formData,\n                              host: e.target.value,\n                            });\n                          }}\n                      />\n                    </Col>\n                    <Col>\n                      <Label>\n                        <IntlMessages id=\"Port No.\" />\n                      </Label>\n                      <Input\n                        type=\"number\"\n                        onChange={(e) => {\n                            setFormData({\n                              ...formData,\n                              port: e.target.value,\n                            });\n                          }}\n                      />\n                    </Col>\n                  </Row>\n                  <Row className=\"mt-3\">\n                    <Col>\n                      <Label>\n                        <IntlMessages id=\"User Name\" />\n                      </Label>\n                      <Input\n                        type=\"text\"\n                        onChange={(e) => {\n                            setFormData({\n                              ...formData,\n                              uname: e.target.value,\n                            });\n                          }}\n                      />\n                    </Col>\n                    <Col>\n                      <Label>\n                        <IntlMessages id=\"Password\" />\n                      </Label>\n                      <Input\n                        type=\"password\"\n                        onChange={(e) => {\n                            setFormData({\n                              ...formData,\n                              password: e.target.value,\n                            });\n                          }}\n                      />\n                    </Col>\n                  </Row>\n                  <Row className=\"mt-3\">\n                    <Col>\n                      <Label>\n                        <IntlMessages id=\"Directory Path\" />\n                      </Label>\n                      <Input\n                        type=\"text\"\n                        onChange={(e) => {\n                            setFormData({\n                              ...formData,\n                              path: e.target.value,\n                            });\n                          }}\n                      />\n                    </Col>\n                  </Row>\n                  <div style={{ padding: '20px 0px', margin: '20px 0px' }}>\n                    <Button\n                      color=\"secondary\"\n                      className=\"mt-3\"\n                      onClick={ImportFtp}\n                    >\n                      Import\n                    </Button>\n                  </div>\n                </Colxx>\n              </CardBody>\n            </Card>\n          </Colxx>\n          ): (onchange ==3 ? (\n            <Colxx xxs=\"9\">\n            <Card>\n              <CardBody>\n                <Colxx xxs=\"12\" className=\"mb-5\">\n                  <h3 className=\"mb-4\">EXTERNAL LINK</h3>\n                  <Row className=\"mt-3\">\n                    <Col>\n                      <Label>\n                        <IntlMessages id=\"External Link\" />\n                      </Label>\n                      <Input\n                        type=\"text\"\n                        onChange={(e) => {\n                            setExternalLinkData({\n                              ...externalLinkData,\n                              link: e.target.value,\n                            });\n                          }}\n                      />\n                    </Col>\n                  </Row>\n                  <div style={{ padding: '20px 0px', margin: '20px 0px' }}>\n                    <Button\n                      color=\"secondary\"\n                      className=\"mt-3\"\n                      onClick = {ImportExternalLink}\n                    >\n                      Import\n                    </Button>\n                  </div>\n                </Colxx>\n              </CardBody>\n            </Card>\n          </Colxx>\n          ):(\n          \"\"\n           )\n          )     \n        )\n        }\n        </Row>\n      </div>\n      <Modal isOpen={importsModal} toggle={() => setImportsModal(!importsModal)}>\n        <ModalHeader>\n          <IntlMessages id=\"Importing!!!.\" />\n        </ModalHeader>\n        <ModalBody>\n        <div className=\"col-md-12 mt-3 text-right\">\n          \n          </div>\n        </ModalBody>\n      </Modal>\n    </>\n  );\n};\n\nexport default BulkOrderOptions;\n"]},"metadata":{},"sourceType":"module"}