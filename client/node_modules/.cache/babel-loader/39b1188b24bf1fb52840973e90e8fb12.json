{"ast":null,"code":"import _toConsumableArray from \"/home/browsewire/Desktop/CEI/cei/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _createForOfIteratorHelper from \"/home/browsewire/Desktop/CEI/cei/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _regeneratorRuntime from \"/home/browsewire/Desktop/CEI/cei/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/browsewire/Desktop/CEI/cei/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/browsewire/Desktop/CEI/cei/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/browsewire/Desktop/CEI/cei/client/src/views/app/customers/customers/Customers.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Label, CustomInput } from 'reactstrap';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport useMousetrap from '../../../../hooks/use-mousetrap';\nimport IntlMessages from '../../../../helpers/IntlMessages';\nimport CustomersListHeading from './CustomersListHeading';\nimport CustomersPageListing from './CustomersPageListing';\nimport CustomersPageHeading from './CustomersPageHeading';\nimport sample from '../../inventory/common/sample.csv';\nimport { NotificationManager } from '../../../../components/common/react-notifications';\n\nvar getIndex = function getIndex(value, arr, prop) {\n  for (var i = 0; i < arr.length; i += 1) {\n    if (arr[i][prop] === value) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\nvar orderOptions = [{\n  label: 'Id',\n  column: 'id'\n}, {\n  label: 'Name',\n  column: 'firstName'\n}, {\n  label: 'Email',\n  column: 'email'\n}, {\n  label: 'Orders Count',\n  column: 'orderCount'\n}];\nvar mannerOptions = [{\n  label: 'Ascending',\n  value: 'ASC'\n}, {\n  label: 'Descending',\n  value: 'DESC'\n}]; //const pageSizes = [4, 8, 12, 20];\n\nvar pageSizes = [15, 50, 100, 150, 200];\n\nvar Customers = function Customers(_ref) {\n  var match = _ref.match;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoaded = _useState2[0],\n      setIsLoaded = _useState2[1];\n\n  var _useState3 = useState('thumblist'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      displayMode = _useState4[0],\n      setDisplayMode = _useState4[1];\n\n  var _useState5 = useState(1),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentPage = _useState6[0],\n      setCurrentPage = _useState6[1];\n\n  var _useState7 = useState(15),\n      _useState8 = _slicedToArray(_useState7, 2),\n      selectedPageSize = _useState8[0],\n      setSelectedPageSize = _useState8[1];\n\n  var _useState9 = useState({\n    column: 'title',\n    label: 'Category Name'\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      selectedOrderOption = _useState10[0],\n      setSelectedOrderOption = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      modalBasic = _useState12[0],\n      setModalBasic = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      modalOpen = _useState14[0],\n      setModalOpen = _useState14[1];\n\n  var _useState15 = useState(0),\n      _useState16 = _slicedToArray(_useState15, 2),\n      totalItemCount = _useState16[0],\n      setTotalItemCount = _useState16[1];\n\n  var _useState17 = useState(1),\n      _useState18 = _slicedToArray(_useState17, 2),\n      totalPage = _useState18[0],\n      setTotalPage = _useState18[1];\n\n  var _useState19 = useState([]),\n      _useState20 = _slicedToArray(_useState19, 2),\n      selectedItems = _useState20[0],\n      setSelectedItems = _useState20[1];\n\n  var _useState21 = useState([]),\n      _useState22 = _slicedToArray(_useState21, 2),\n      items = _useState22[0],\n      setItems = _useState22[1];\n\n  var _useState23 = useState(null),\n      _useState24 = _slicedToArray(_useState23, 2),\n      lastChecked = _useState24[0],\n      setLastChecked = _useState24[1];\n\n  var _useState25 = useState(false),\n      _useState26 = _slicedToArray(_useState25, 2),\n      modal = _useState26[0],\n      setModal = _useState26[1];\n\n  var _useState27 = useState(false),\n      _useState28 = _slicedToArray(_useState27, 2),\n      change = _useState28[0],\n      setchange = _useState28[1];\n\n  var _useState29 = useState(false),\n      _useState30 = _slicedToArray(_useState29, 2),\n      modalDelete = _useState30[0],\n      setModalDelete = _useState30[1];\n\n  var _useState31 = useState(0),\n      _useState32 = _slicedToArray(_useState31, 2),\n      customerId = _useState32[0],\n      setCustomerId = _useState32[1];\n\n  var _useState33 = useState(false),\n      _useState34 = _slicedToArray(_useState33, 2),\n      importing = _useState34[0],\n      setImporting = _useState34[1];\n\n  var _useState35 = useState(false),\n      _useState36 = _slicedToArray(_useState35, 2),\n      importModal = _useState36[0],\n      setImportModal = _useState36[1];\n\n  var _useState37 = useState(null),\n      _useState38 = _slicedToArray(_useState37, 2),\n      importFile = _useState38[0],\n      setImportFile = _useState38[1];\n\n  var _useState39 = useState(''),\n      _useState40 = _slicedToArray(_useState39, 2),\n      searchItem = _useState40[0],\n      setSearchItem = _useState40[1];\n\n  var _useState41 = useState({\n    label: 'Id',\n    column: 'id'\n  }),\n      _useState42 = _slicedToArray(_useState41, 2),\n      orderBy = _useState42[0],\n      setOrderBy = _useState42[1];\n\n  var _useState43 = useState({\n    label: 'Ascending',\n    value: 'ASC'\n  }),\n      _useState44 = _slicedToArray(_useState43, 2),\n      orderManner = _useState44[0],\n      setOrderManner = _useState44[1];\n\n  useEffect(function () {\n    setCurrentPage(1);\n  }, [selectedPageSize, selectedOrderOption]);\n\n  var getCustomers = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$axios$get, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.get(\"/api/customers/\".concat(currentPage, \"?pageSize=\").concat(selectedPageSize, \"&orderBy=\").concat(orderBy.column, \"&searchItem=\").concat(searchItem, \"&orderManner=\").concat(orderManner.value));\n\n            case 3:\n              _yield$axios$get = _context.sent;\n              data = _yield$axios$get.data;\n              console.log(data);\n              setItems(data.customers);\n              setTotalItemCount(data.count);\n              setTotalPage(Math.ceil(data.count / selectedPageSize));\n              setSelectedItems([]);\n              setIsLoaded(true);\n              NotificationManager.success(\"Customer Details Fetched!!!\", 'Success', 3000);\n              _context.next = 19;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n              NotificationManager.error(\"Something Went Wrong!!!\", 'Error', 3000);\n              setIsLoaded(true);\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 14]]);\n    }));\n\n    return function getCustomers() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return getCustomers();\n\n            case 2:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  }, [change]); // Function to call for importing Customers\n\n  var importCustomers = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var data, config, _iterator, _step, pair, res;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (importFile) {\n                _context3.next = 2;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", NotificationManager.error(\"Select File to Import...\", 'Error', 3000, null, null, ''));\n\n            case 2:\n              data = new FormData(); // Update the formData object\n\n              data.append(\"importFile\", importFile);\n              config = {\n                headers: {\n                  'content-type': 'multipart/form-data'\n                }\n              };\n              _iterator = _createForOfIteratorHelper(data.entries());\n\n              try {\n                for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                  pair = _step.value;\n                  console.log(pair[0], \" : \", pair[1]);\n                } // Request made to the backend api\n                // Send formData object\n\n              } catch (err) {\n                _iterator.e(err);\n              } finally {\n                _iterator.f();\n              }\n\n              _context3.prev = 7;\n              setImporting(true);\n              _context3.next = 11;\n              return axios.post('/api/customers/import', data, config);\n\n            case 11:\n              res = _context3.sent;\n              setImporting(false);\n              setchange(!change);\n              setImportModal(false);\n              NotificationManager.success(res.data, 'Success', 3000, null, null, '');\n              _context3.next = 23;\n              break;\n\n            case 18:\n              _context3.prev = 18;\n              _context3.t0 = _context3[\"catch\"](7);\n              console.log(_context3.t0);\n              setImporting(false);\n              NotificationManager.error(\"Something Wrong With CSV\", 'Error', 3000, null, null, '');\n\n            case 23:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[7, 18]]);\n    }));\n\n    return function importCustomers() {\n      return _ref4.apply(this, arguments);\n    };\n  }(); //DELETE CUSTOMER HANDLER\n\n\n  var deleteModal = function deleteModal(e) {\n    setCustomerId(e);\n    setModalBasic(true);\n  }; // DELETE CUSTOMER API CALL\n\n\n  var deleteCustomer = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return axios.post(\"/api/customers/delete?id=\".concat(customerId));\n\n            case 3:\n              setchange(!change);\n              setModalBasic(false);\n              NotificationManager.success('Customer Deleted Successfully.', 'Success', 3000);\n              _context4.next = 11;\n              break;\n\n            case 8:\n              _context4.prev = 8;\n              _context4.t0 = _context4[\"catch\"](0);\n              NotificationManager.error('Something Went Wrong!!!', 'Error', 3000);\n\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 8]]);\n    }));\n\n    return function deleteCustomer() {\n      return _ref5.apply(this, arguments);\n    };\n  }(); // DELETE MULTIPLE CUSTOMERS\n\n\n  var deleteMultiple = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              console.log(selectedItems);\n              _context5.prev = 1;\n              _context5.next = 4;\n              return axios.post(\"/api/customers/delete\", null, {\n                params: {\n                  id: selectedItems\n                }\n              });\n\n            case 4:\n              setchange(!change);\n              setModalDelete(false);\n              NotificationManager.success('Customer(s) Deleted Successfully.', 'Success', 3000, null, null, '');\n              _context5.next = 14;\n              break;\n\n            case 9:\n              _context5.prev = 9;\n              _context5.t0 = _context5[\"catch\"](1);\n              console.log(_context5.t0);\n              setModalDelete(false);\n              NotificationManager.error('Something Went Wrong!!!', 'Error', 3000, null, null, '');\n\n            case 14:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[1, 9]]);\n    }));\n\n    return function deleteMultiple() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var onCheckItem = function onCheckItem(event, id) {\n    if (event.target.tagName === 'A' || event.target.parentElement && event.target.parentElement.tagName === 'A') {\n      return true;\n    }\n\n    if (lastChecked === null) {\n      setLastChecked(id);\n    }\n\n    var selectedList = _toConsumableArray(selectedItems);\n\n    if (selectedList.includes(id)) {\n      selectedList = selectedList.filter(function (x) {\n        return x !== id;\n      });\n    } else {\n      selectedList.push(id);\n    }\n\n    setSelectedItems(selectedList);\n\n    if (event.shiftKey) {\n      var newItems = _toConsumableArray(items);\n\n      var start = getIndex(id, newItems, 'id');\n      var end = getIndex(lastChecked, newItems, 'id');\n      newItems = newItems.slice(Math.min(start, end), Math.max(start, end) + 1);\n      selectedItems.push.apply(selectedItems, _toConsumableArray(newItems.map(function (item) {\n        return item.id;\n      })));\n      selectedList = Array.from(new Set(selectedItems));\n      setSelectedItems(selectedList);\n    }\n\n    document.activeElement.blur();\n    return false;\n  };\n\n  var handleChangeSelectAll = function handleChangeSelectAll(isToggle) {\n    if (selectedItems.length >= items.length) {\n      if (isToggle) {\n        setSelectedItems([]);\n      }\n    } else {\n      setSelectedItems(items.map(function (x) {\n        return x.id;\n      }));\n    }\n\n    document.activeElement.blur();\n    return false;\n  };\n\n  var onContextMenuClick = function onContextMenuClick(e, data) {\n    // params : (e,data,target)\n    console.log('onContextMenuClick - selected items', selectedItems);\n    console.log('onContextMenuClick - action : ', data.action);\n  };\n\n  var changePage = function changePage(i) {\n    setCurrentPage(i);\n    axios.get(\"/api/customers/\".concat(i, \"?pageSize=\").concat(selectedPageSize, \"&orderBy=\").concat(orderBy.column, \"&orderManner=\").concat(orderManner.value, \"&searchItem=\").concat(searchItem)).then(function (res) {\n      setItems(res.data.customers);\n      setTotalItemCount(res.data.count);\n      setTotalPage(Math.ceil(res.data.count / selectedPageSize));\n      setSelectedItems([]);\n      setIsLoaded(true);\n    });\n  };\n\n  var onchangePagesize = function onchangePagesize(size) {\n    setCurrentPage(1);\n    setSelectedPageSize(size);\n    axios.get(\"/api/customers/\".concat(1, \"?pageSize=\", size, \"&orderBy=\").concat(orderBy.column, \"&orderManner=\").concat(orderManner.value, \"&searchItem=\").concat(searchItem)).then(function (res) {\n      setItems(res.data.customers);\n      setTotalItemCount(res.data.count);\n      setTotalPage(Math.ceil(res.data.count / size));\n      setSelectedItems([]);\n      setIsLoaded(true);\n    });\n  };\n\n  var onContextMenu = function onContextMenu(e, data) {\n    var clickedCategoryId = data.data;\n\n    if (!selectedItems.includes(clickedCategoryId)) {\n      setSelectedItems([clickedCategoryId]);\n    }\n\n    return true;\n  };\n\n  useMousetrap(['ctrl+a', 'command+a'], function () {\n    handleChangeSelectAll(false);\n  });\n  useMousetrap(['ctrl+d', 'command+d'], function () {\n    setSelectedItems([]);\n    return false;\n  });\n  var startIndex = (currentPage - 1) * selectedPageSize;\n  var endIndex = currentPage * selectedPageSize;\n  return !isLoaded ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loading\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 5\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"disable-text-selection\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CustomersPageHeading, {\n    setModalDelete: setModalDelete,\n    heading: \"Customers\",\n    addUrl: \"/app/customers/add-customer\",\n    displayMode: displayMode,\n    changeDisplayMode: setDisplayMode,\n    handleChangeSelectAll: handleChangeSelectAll,\n    orderBy: orderBy,\n    orderManner: orderManner,\n    changeOrderBy: /*#__PURE__*/function () {\n      var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(ord) {\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                setOrderBy(ord);\n                setCurrentPage(1);\n                axios.get(\"/api/customers/\".concat(1, \"?pageSize=\", selectedPageSize, \"&searchItem=\").concat(searchItem, \"&orderBy=\").concat(ord.column, \"&orderManner=\").concat(orderManner.value)).then(function (res) {\n                  setTotalItemCount(res.data.count);\n                  setTotalPage(Math.ceil(res.data.count / selectedPageSize));\n                  setItems(res.data.customers); // setTotalItemCount(data.totalItem);\n                });\n\n              case 3:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      return function (_x) {\n        return _ref7.apply(this, arguments);\n      };\n    }(),\n    changeOrderManner: /*#__PURE__*/function () {\n      var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(mann) {\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                setOrderManner(mann);\n                setCurrentPage(1);\n                axios.get(\"/api/customers/\".concat(1, \"?pageSize=\", selectedPageSize, \"&searchItem=\").concat(searchItem, \"&orderBy=\").concat(orderBy.column, \"&orderManner=\").concat(mann.value)).then(function (res) {\n                  setTotalItemCount(res.data.count);\n                  setTotalPage(Math.ceil(res.data.count / selectedPageSize));\n                  setItems(res.data.customers); // setTotalItemCount(data.totalItem);\n                });\n\n              case 3:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      return function (_x2) {\n        return _ref8.apply(this, arguments);\n      };\n    }(),\n    onSearchKey: /*#__PURE__*/function () {\n      var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(e) {\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                console.log(e.key === 'Enter');\n\n                if (e.key === 'Enter') {\n                  setSearchItem(e.target.value);\n                  axios.get(\"/api/customers/\".concat(1, \"?pageSize=\", selectedPageSize, \"&searchItem=\").concat(e.target.value, \"&orderBy=\").concat(orderBy.column, \"&orderManner=\").concat(orderManner.value)).then(function (res) {\n                    setTotalItemCount(res.data.count);\n                    setTotalPage(Math.ceil(res.data.count / selectedPageSize));\n                    setItems(res.data.customers); // setTotalItemCount(data.totalItem);\n                  }).catch(function (err) {\n                    console.log(JSON.stringify(err, null, 4));\n                    if (err.message.slice(err.message.indexOf('status code ')) === 'status code 404') return NotificationManager.info('No Search Result Found.', 'Not Found', 3000);else NotificationManager.info('Something Went Wrong!!!');\n                  });\n                }\n\n              case 2:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      return function (_x3) {\n        return _ref9.apply(this, arguments);\n      };\n    }(),\n    onchangepagesize: onchangePagesize,\n    selectedPageSize: selectedPageSize,\n    totalItemCount: totalItemCount,\n    selectedOrderOption: selectedOrderOption,\n    match: match,\n    startIndex: startIndex,\n    endIndex: endIndex,\n    selectedItemsLength: selectedItems ? selectedItems.length : 0,\n    itemsLength: items ? items.length : 0,\n    orderOptions: orderOptions,\n    mannerOptions: mannerOptions,\n    pageSizes: pageSizes,\n    toggleModal: function toggleModal() {\n      return setModalOpen(!modalOpen);\n    },\n    setImportModal: setImportModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 11\n    }\n  }), items.length == 0 ? \"\" : /*#__PURE__*/React.createElement(CustomersListHeading, {\n    selectedItemsLength: selectedItems ? selectedItems.length : 0,\n    handleChangeSelectAll: handleChangeSelectAll,\n    itemsLength: items ? items.length : 0,\n    orderManner: orderManner,\n    orderBy: orderBy,\n    changeOrderBy: /*#__PURE__*/function () {\n      var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(ord) {\n        var ind;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                setOrderBy(ord);\n                setCurrentPage(1);\n\n                if (orderBy.column === ord.column) {\n                  ind = !mannerOptions.findIndex(function (man) {\n                    return man.value === orderManner.value;\n                  });\n                  setOrderManner(mannerOptions[ind ? 1 : 0]);\n                  axios.get(\"/api/customers/\".concat(1, \"?pagesize=\", selectedPageSize, \"&searchItem=\").concat(searchItem, \"&orderBy=\").concat(ord.column, \"&orderManner=\").concat(mannerOptions[ind ? 1 : 0].value)).then(function (res) {\n                    setTotalItemCount(res.data.count);\n                    setTotalPage(Math.ceil(res.data.count / selectedPageSize));\n                    setItems(res.data.customers); // setTotalItemCount(data.totalItem);\n                  });\n                } else {\n                  setOrderManner(mannerOptions[0]);\n                  axios.get(\"/api/customers/\".concat(1, \"?pagesize=\", selectedPageSize, \"&searchItem=\").concat(searchItem, \"&orderBy=\").concat(ord.column, \"&orderManner=\").concat(mannerOptions[0].value)).then(function (res) {\n                    setTotalItemCount(res.data.count);\n                    setTotalPage(Math.ceil(res.data.count / selectedPageSize));\n                    setItems(res.data.customers); // setTotalItemCount(data.totalItem);\n                  });\n                }\n\n              case 3:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9);\n      }));\n\n      return function (_x4) {\n        return _ref10.apply(this, arguments);\n      };\n    }(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 37\n    }\n  }), items.length == 0 ? /*#__PURE__*/React.createElement(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 32\n    }\n  }, \"No Records found\") : /*#__PURE__*/React.createElement(CustomersPageListing, {\n    items: items,\n    displayMode: displayMode,\n    selectedItems: selectedItems,\n    onCheckItem: onCheckItem,\n    currentPage: currentPage,\n    totalPage: totalPage,\n    onContextMenuClick: onContextMenuClick,\n    onContextMenu: onContextMenu,\n    onChangePage: changePage,\n    pagesize: selectedPageSize,\n    setModalBasic: setModalBasic,\n    deleteModal: deleteModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 60\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modalBasic,\n    toggle: function toggle() {\n      return setModal(!modalBasic);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"Delete\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 13\n    }\n  }, \"Are you sure you want to delete Customer?\"), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: deleteCustomer,\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 15\n    }\n  }, \"Confirm\"), ' ', /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    onClick: function onClick() {\n      return setModalBasic(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 15\n    }\n  }, \"Cancel\"))), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modalDelete,\n    toggle: function toggle() {\n      return setModal(!modalDelete);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"Delete\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 13\n    }\n  }, \"Are you sure you want to delete selected items?\"), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: deleteMultiple,\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 15\n    }\n  }, \"Confirm\"), ' ', /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    onClick: function onClick() {\n      return setModalDelete(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 15\n    }\n  }, \"Cancel\")))), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: importModal,\n    toggle: function toggle() {\n      return setImportModal(!importModal);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"Add Customers by importing CSV file.\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"Select csv File to Import\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(CustomInput, {\n    type: \"file\",\n    accept: \".csv\",\n    onChange: function onChange(event) {\n      setImportFile(event.target.files[0]);\n    },\n    id: \"exampleCustomFileBrowser3\",\n    name: \"customFile\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 mt-3 text-right\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"h6 text-primary\",\n    to: sample,\n    target: \"_blank\",\n    download: \"sample.csv\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 13\n    }\n  }, \"Sample CSV \", /*#__PURE__*/React.createElement(\"i\", {\n    className: \"iconsminds-data-download\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 108\n    }\n  })))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 11\n    }\n  }, !importing ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: importCustomers,\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 15\n    }\n  }, \"Import\"), ' ', /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    onClick: function onClick() {\n      return setImportModal(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 15\n    }\n  }, \"Cancel\")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 15\n    }\n  }, \"Importing!!!\"), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 15\n    }\n  }, \"Please Wait...\"))))));\n};\n\nexport default Customers;","map":{"version":3,"sources":["/home/browsewire/Desktop/CEI/cei/client/src/views/app/customers/customers/Customers.js"],"names":["React","useState","useEffect","Button","Modal","ModalHeader","ModalBody","ModalFooter","Label","CustomInput","axios","Link","useMousetrap","IntlMessages","CustomersListHeading","CustomersPageListing","CustomersPageHeading","sample","NotificationManager","getIndex","value","arr","prop","i","length","orderOptions","label","column","mannerOptions","pageSizes","Customers","match","isLoaded","setIsLoaded","displayMode","setDisplayMode","currentPage","setCurrentPage","selectedPageSize","setSelectedPageSize","selectedOrderOption","setSelectedOrderOption","modalBasic","setModalBasic","modalOpen","setModalOpen","totalItemCount","setTotalItemCount","totalPage","setTotalPage","selectedItems","setSelectedItems","items","setItems","lastChecked","setLastChecked","modal","setModal","change","setchange","modalDelete","setModalDelete","customerId","setCustomerId","importing","setImporting","importModal","setImportModal","importFile","setImportFile","searchItem","setSearchItem","orderBy","setOrderBy","orderManner","setOrderManner","getCustomers","get","data","console","log","customers","count","Math","ceil","success","error","importCustomers","FormData","append","config","headers","entries","pair","post","res","deleteModal","e","deleteCustomer","deleteMultiple","params","id","onCheckItem","event","target","tagName","parentElement","selectedList","includes","filter","x","push","shiftKey","newItems","start","end","slice","min","max","map","item","Array","from","Set","document","activeElement","blur","handleChangeSelectAll","isToggle","onContextMenuClick","action","changePage","then","onchangePagesize","size","onContextMenu","clickedCategoryId","startIndex","endIndex","ord","mann","key","catch","err","JSON","stringify","message","indexOf","info","ind","findIndex","man","files"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Label,\n  CustomInput,\n} from 'reactstrap';\nimport axios from 'axios'\nimport {Link} from 'react-router-dom'\nimport useMousetrap from '../../../../hooks/use-mousetrap';\nimport IntlMessages from '../../../../helpers/IntlMessages';\nimport CustomersListHeading from './CustomersListHeading';\nimport CustomersPageListing from './CustomersPageListing';\nimport CustomersPageHeading from './CustomersPageHeading';\nimport sample from '../../inventory/common/sample.csv';\nimport { NotificationManager } from '../../../../components/common/react-notifications';\n\nconst getIndex = (value, arr, prop) => {\n  for (let i = 0; i < arr.length; i += 1) {\n    if (arr[i][prop] === value) {\n      return i;\n    }\n  }\n  return -1;\n};\n\nconst orderOptions = [\n  { label : 'Id', column : 'id'},\n  { label : 'Name', column : 'firstName'},\n  { label : 'Email', column : 'email'},\n  { label : 'Orders Count', column : 'orderCount'},\n];\n\nconst mannerOptions = [\n  { label : 'Ascending', value : 'ASC'},\n  { label : 'Descending', value : 'DESC'}\n]\n\n//const pageSizes = [4, 8, 12, 20];\nconst pageSizes = [15, 50, 100, 150, 200];\n\nconst Customers = ({ match }) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [displayMode, setDisplayMode] = useState('thumblist');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [selectedPageSize, setSelectedPageSize] = useState(15);\n  const [selectedOrderOption, setSelectedOrderOption] = useState({\n    column: 'title',\n    label: 'Category Name',\n  });\n  const [modalBasic, setModalBasic] = useState(false);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [totalItemCount, setTotalItemCount] = useState(0);\n  const [totalPage, setTotalPage] = useState(1);\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [items, setItems] = useState([]);\n  const [lastChecked, setLastChecked] = useState(null);\n  const [modal, setModal] = useState(false)\n  const [change, setchange] = useState(false)\n  const [modalDelete, setModalDelete] = useState(false)\n  const [customerId, setCustomerId] = useState(0)\n  const [importing, setImporting] = useState(false)\n  const [importModal, setImportModal] = useState(false)\n  const [importFile, setImportFile] = useState(null)\n  const [searchItem, setSearchItem] = useState('')\n  const [orderBy, setOrderBy] = useState({ label : 'Id', column : 'id'});\n  const [orderManner, setOrderManner] = useState({ label : 'Ascending', value : 'ASC'});\n\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [selectedPageSize, selectedOrderOption]);\n\n  const getCustomers = async () => {\n    try {\n      const {data} = await axios.get(`/api/customers/${currentPage}?pageSize=${selectedPageSize}&orderBy=${orderBy.column}&searchItem=${searchItem}&orderManner=${orderManner.value}`)\n      console.log(data);\n      setItems(data.customers)\n      setTotalItemCount(data.count)\n      setTotalPage(Math.ceil((data.count)/ selectedPageSize))\n      setSelectedItems([]);\n      setIsLoaded(true);\n      NotificationManager.success(`Customer Details Fetched!!!`, 'Success', 3000)  \n    } catch (error) {\n      console.log(error);\n      NotificationManager.error(`Something Went Wrong!!!`, 'Error', 3000)    \n      setIsLoaded(true);  \n    }\n  }\n\n  useEffect(() => {\n    (async () => await getCustomers())()\n  }, [change]);\n  \n  // Function to call for importing Customers\n  const importCustomers = async () => {\n    if(!importFile){\n      return NotificationManager.error(\n        `Select File to Import...`,\n        'Error',\n        3000,\n        null,\n        null,\n        ''\n      );\n    }\n    const data = new FormData();\n    // Update the formData object\n    data.append(\n      \"importFile\",\n      importFile\n    );\n    const config = {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    };\n    for(let pair of data.entries()){\n      console.log(pair[0], \" : \" ,pair[1])\n    }\n    // Request made to the backend api\n    // Send formData object\n    try{\n        setImporting(true)\n        const res = await axios.post('/api/customers/import', data, config)\n        setImporting(false)\n        setchange(!change)\n        setImportModal(false)\n        NotificationManager.success(\n          res.data,\n          'Success',\n          3000,\n          null,\n          null,\n          ''\n        );\n      } catch(err) {\n        console.log(err)\n        setImporting(false)\n          NotificationManager.error(\n            `Something Wrong With CSV`,\n            'Error',\n            3000,\n            null,\n            null,\n            ''\n          );\n    }\n  }\n\n  //DELETE CUSTOMER HANDLER\n  const deleteModal = (e) => {\n    setCustomerId(e)\n    setModalBasic(true)\n  }\n\n  // DELETE CUSTOMER API CALL\n  const deleteCustomer = async () => {\n    try {\n      await axios.post(`/api/customers/delete?id=${customerId}`)\n      setchange(!change)\n      setModalBasic(false)\n      NotificationManager.success('Customer Deleted Successfully.','Success', 3000)\n    } catch (error) {\n      NotificationManager.error('Something Went Wrong!!!','Error', 3000)\n    }\n  }\n\n  // DELETE MULTIPLE CUSTOMERS\n  const deleteMultiple = async () => {\n    console.log(selectedItems);\n    try {\n      await axios.post(\"/api/customers/delete\", null, { params: { id: selectedItems } })\n      setchange(!change)\n      setModalDelete(false)\n      NotificationManager.success(\n        'Customer(s) Deleted Successfully.',\n        'Success',\n        3000,\n        null,\n        null,\n        ''\n      );\n    } catch (error) {\n      console.log(error);\n      setModalDelete(false)\n      NotificationManager.error(\n        'Something Went Wrong!!!',\n        'Error',\n        3000,\n        null,\n        null,\n        ''\n      );\n    }\n  }\n\n  const onCheckItem = (event, id) => {\n    if (\n      event.target.tagName === 'A' ||\n      (event.target.parentElement && event.target.parentElement.tagName === 'A')\n    ) {\n      return true;\n    }\n    if (lastChecked === null) {\n      setLastChecked(id);\n    }\n\n    let selectedList = [...selectedItems];\n    if (selectedList.includes(id)) {\n      selectedList = selectedList.filter((x) => x !== id);\n    } else {\n      selectedList.push(id);\n    }\n    setSelectedItems(selectedList);\n\n    if (event.shiftKey) {\n      let newItems = [...items];\n      const start = getIndex(id, newItems, 'id');\n      const end = getIndex(lastChecked, newItems, 'id');\n      newItems = newItems.slice(Math.min(start, end), Math.max(start, end) + 1);\n      selectedItems.push(\n        ...newItems.map((item) => {\n          return item.id;\n        })\n      );\n      selectedList = Array.from(new Set(selectedItems));\n      setSelectedItems(selectedList);\n    }\n    document.activeElement.blur();\n    return false;\n  };\n\n  const handleChangeSelectAll = (isToggle) => {\n    if (selectedItems.length >= items.length) {\n      if (isToggle) {\n        setSelectedItems([]);\n      }\n    } else {\n      setSelectedItems(items.map((x) => x.id));\n    }\n    document.activeElement.blur();\n    return false;\n  };\n\n  const onContextMenuClick = (e, data) => {\n    // params : (e,data,target)\n    console.log('onContextMenuClick - selected items', selectedItems);\n    console.log('onContextMenuClick - action : ', data.action);\n  };\n\n  const changePage = (i) => {\n    setCurrentPage(i)\n    axios.get(`/api/customers/${i}?pageSize=${selectedPageSize}&orderBy=${orderBy.column}&orderManner=${orderManner.value}&searchItem=${searchItem}`).then(res => {\n      setItems(res.data.customers)\n      setTotalItemCount(res.data.count)\n      setTotalPage(Math.ceil((res.data.count)/ selectedPageSize))\n      setSelectedItems([]);\n      setIsLoaded(true);\n    })\n  }\n\n  const onchangePagesize = (size) => {\n    setCurrentPage(1)\n    setSelectedPageSize(size)\n    axios.get(`/api/customers/${1}?pageSize=${size}&orderBy=${orderBy.column}&orderManner=${orderManner.value}&searchItem=${searchItem}`).then(res => {\n      setItems(res.data.customers)\n      setTotalItemCount(res.data.count)\n      setTotalPage(Math.ceil((res.data.count)/ size))\n      setSelectedItems([]);\n      setIsLoaded(true);\n    })\n  }\n\n\n  const onContextMenu = (e, data) => {\n    const clickedCategoryId = data.data;\n    if (!selectedItems.includes(clickedCategoryId)) {\n      setSelectedItems([clickedCategoryId]);\n    }\n\n    return true;\n  };\n\n  useMousetrap(['ctrl+a', 'command+a'], () => {\n    handleChangeSelectAll(false);\n  });\n\n  useMousetrap(['ctrl+d', 'command+d'], () => {\n    setSelectedItems([]);\n    return false;\n  });\n\n  const startIndex = (currentPage - 1) * selectedPageSize;\n  const endIndex = currentPage * selectedPageSize;\n\n  return !isLoaded ? (\n    <div className=\"loading\" />\n  ) : (\n      <>\n        <div className=\"disable-text-selection\">\n          <CustomersPageHeading\n          setModalDelete={setModalDelete}\n          heading=\"Customers\"\n            addUrl='/app/customers/add-customer'\n            displayMode={displayMode}\n            changeDisplayMode={setDisplayMode}\n            handleChangeSelectAll={handleChangeSelectAll}\n            orderBy = { orderBy }\n            orderManner={orderManner}\n            changeOrderBy={async (ord) => {\n              setOrderBy(ord)\n              setCurrentPage(1)\n              axios.get(`/api/customers/${1}?pageSize=${selectedPageSize}&searchItem=${searchItem}&orderBy=${ord.column}&orderManner=${orderManner.value}`)\n                .then(res => {\n                  setTotalItemCount(res.data.count)\n                  setTotalPage(Math.ceil(res.data.count / selectedPageSize));\n                  setItems(res.data.customers);\n                  // setTotalItemCount(data.totalItem);\n                })\n              }\n            }\n            changeOrderManner={async (mann) => {\n              setOrderManner(mann)\n              setCurrentPage(1)\n              axios.get(`/api/customers/${1}?pageSize=${selectedPageSize}&searchItem=${searchItem}&orderBy=${orderBy.column}&orderManner=${mann.value}`)\n                .then(res => {\n                  setTotalItemCount(res.data.count)\n                  setTotalPage(Math.ceil(res.data.count / selectedPageSize));\n                  setItems(res.data.customers);\n                  // setTotalItemCount(data.totalItem);\n                })\n              }\n            }\n            onSearchKey={ async (e) => {\n              console.log(e.key === 'Enter');\n              if (e.key === 'Enter') {\n                setSearchItem(e.target.value);\n                axios.get(`/api/customers/${1}?pageSize=${selectedPageSize}&searchItem=${e.target.value}&orderBy=${orderBy.column}&orderManner=${orderManner.value}`)\n                .then(res => {\n                    setTotalItemCount(res.data.count)\n                    setTotalPage(Math.ceil(res.data.count / selectedPageSize));\n                    setItems(res.data.customers);\n                  // setTotalItemCount(data.totalItem);\n                  })\n                  .catch ( err => {\n                    console.log(JSON.stringify(err,null,4));\n                    if(err.message.slice(err.message.indexOf('status code ')) === 'status code 404')\n                    return NotificationManager.info('No Search Result Found.','Not Found', 3000)\n                    else\n                    NotificationManager.info('Something Went Wrong!!!')\n                  })\n                }\n              }\n            }\n            onchangepagesize={onchangePagesize}\n            selectedPageSize={selectedPageSize}\n            totalItemCount={totalItemCount}\n            selectedOrderOption={selectedOrderOption}\n            match={match}\n            startIndex={startIndex}\n            endIndex={endIndex}\n            selectedItemsLength={selectedItems ? selectedItems.length : 0}\n            itemsLength={items ? items.length : 0}\n            orderOptions={orderOptions}\n            mannerOptions={mannerOptions}\n            pageSizes={pageSizes}\n            toggleModal={() => setModalOpen(!modalOpen)}\n            setImportModal = {setImportModal}\n          />\n          {items.length == 0 ? \"\" : <CustomersListHeading\n            selectedItemsLength={selectedItems ? selectedItems.length : 0}\n            handleChangeSelectAll={handleChangeSelectAll}\n            itemsLength={items ? items.length : 0}\n            orderManner={orderManner}\n            orderBy={orderBy}\n            changeOrderBy={async (ord) => {\n              setOrderBy(ord)\n              setCurrentPage(1)\n              if(orderBy.column === ord.column){\n                const ind = !(mannerOptions.findIndex(man => man.value===orderManner.value))\n                setOrderManner(mannerOptions[ind ? 1 : 0])\n                axios.get(`/api/customers/${1}?pagesize=${selectedPageSize}&searchItem=${searchItem}&orderBy=${ord.column}&orderManner=${mannerOptions[ind ? 1 : 0].value}`)\n                  .then(res => {\n                    setTotalItemCount(res.data.count)\n                    setTotalPage(Math.ceil(res.data.count / selectedPageSize));\n                    setItems(res.data.customers);\n                    // setTotalItemCount(data.totalItem);\n                  })\n                } else {\n                  setOrderManner(mannerOptions[0])\n                axios.get(`/api/customers/${1}?pagesize=${selectedPageSize}&searchItem=${searchItem}&orderBy=${ord.column}&orderManner=${mannerOptions[0].value}`)\n                .then(res => {\n                  setTotalItemCount(res.data.count)\n                    setTotalPage(Math.ceil(res.data.count / selectedPageSize));\n                    setItems(res.data.customers);\n                  // setTotalItemCount(data.totalItem);\n                })\n              }\n              }\n            }\n          />}\n\n          {items.length == 0 ? <h3>No Records found</h3> : <CustomersPageListing\n            items={items}\n            displayMode={displayMode}\n            selectedItems={selectedItems}\n            onCheckItem={onCheckItem}\n            currentPage={currentPage}\n            totalPage={totalPage}\n            onContextMenuClick={onContextMenuClick}\n            onContextMenu={onContextMenu}\n            onChangePage={changePage}\n            pagesize={selectedPageSize}\n            setModalBasic={setModalBasic}\n            deleteModal = {deleteModal}\n          />}\n\n          {/* Delete Modal */}\n          <Modal isOpen={modalBasic} toggle={() => setModal(!modalBasic)}>\n            <ModalHeader>\n              <IntlMessages id=\"Delete\" />\n            </ModalHeader>\n            <ModalBody>\n              Are you sure you want to delete Customer?\n        </ModalBody>\n            <ModalFooter>\n              <Button onClick={deleteCustomer} color=\"primary\">\n                Confirm\n          </Button>{' '}\n              <Button color=\"secondary\" onClick={() => setModalBasic(false)}>\n                Cancel\n          </Button>\n            </ModalFooter>\n          </Modal>\n          {/* Delete multiple Modal */}\n          <Modal isOpen={modalDelete} toggle={() => setModal(!modalDelete)}>\n            <ModalHeader>\n              <IntlMessages id=\"Delete\" />\n            </ModalHeader>\n            <ModalBody>\n              Are you sure you want to delete selected items?\n        </ModalBody>\n            <ModalFooter>\n              <Button onClick={deleteMultiple} color=\"primary\">\n                Confirm\n          </Button>{' '}\n              <Button color=\"secondary\" onClick={() => setModalDelete(false)}>\n                Cancel\n          </Button>\n            </ModalFooter>\n          </Modal>\n        </div>\n          {/* Customer Import Modal */}\n        <Modal isOpen={importModal} toggle={() => setImportModal(!importModal)}>\n        <ModalHeader>\n          <IntlMessages id=\"Add Customers by importing CSV file.\" />\n        </ModalHeader>\n        <ModalBody>\n          <Label>\n            <IntlMessages id=\"Select csv File to Import\" />\n          </Label>\n          <CustomInput\n            type=\"file\"\n            accept=\".csv\"\n            onChange={ event => { setImportFile(event.target.files[0]) } }\n            id=\"exampleCustomFileBrowser3\"\n            name=\"customFile\"\n          />\n          <div className=\"col-md-12 mt-3 text-right\">\n            <Link className=\"h6 text-primary\" to={sample} target=\"_blank\" download=\"sample.csv\">Sample CSV <i className=\"iconsminds-data-download\"></i></Link>\n          </div>\n        </ModalBody>\n        <ModalFooter>\n          <div>\n          {!importing ?\n            <div>\n              <Button onClick={importCustomers} color=\"primary\">\n                Import\n              </Button>{' '}\n              <Button\n                color=\"secondary\"\n                onClick={() => setImportModal(false)}\n              >\n                Cancel\n              </Button>\n            </div> : \n            <>\n              <h4>Importing!!!</h4>\n              <h4>Please Wait...</h4>\n            </>\n          }\n          </div>\n        </ModalFooter>\n      </Modal>\n      </>\n    );\n};\n\nexport default Customers;\n"]},"metadata":{},"sourceType":"module"}