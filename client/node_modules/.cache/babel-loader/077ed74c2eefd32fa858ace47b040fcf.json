{"ast":null,"code":"import _objectSpread from \"/home/browsewire/Desktop/CEIorder/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _this = this,\n    _jsxFileName = \"/home/browsewire/Desktop/CEIorder/client/src/containers/form-validations/FormikCustomWithTopLabels.js\";\n\n/* eslint-disable no-shadow */\n\n/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { Row, Card, CardBody, FormGroup, Label, Button, CardTitle } from 'reactstrap';\nimport { FormikReactSelect, FormikTagsInput, FormikDatePicker } from './FormikFields';\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { Colxx } from '../../components/common/CustomBootstrap';\nvar SignupSchema = Yup.object().shape({\n  email: Yup.string().email('Invalid email address').required('Email is required!'),\n  password: Yup.string().required('Password is required!'),\n  tags: Yup.array().min(3, 'Pick at least 3 tags').required('At least one tag is required'),\n  date: Yup.date().nullable().required('Date required'),\n  state: Yup.object().shape({\n    label: Yup.string().required(),\n    value: Yup.string().required()\n  }).nullable().required('State is required!')\n});\nvar options = [{\n  value: 'food',\n  label: 'Food'\n}, {\n  value: 'beingfabulous',\n  label: 'Being Fabulous',\n  disabled: true\n}, {\n  value: 'reasonml',\n  label: 'ReasonML'\n}, {\n  value: 'unicorns',\n  label: 'Unicorns'\n}, {\n  value: 'kittens',\n  label: 'Kittens'\n}];\n\nvar FormikCustomWithTopLabels = function FormikCustomWithTopLabels() {\n  var onSubmit = function onSubmit(values, _ref) {\n    var setSubmitting = _ref.setSubmitting;\n\n    var payload = _objectSpread(_objectSpread({}, values), {}, {\n      state: values.state.value\n    });\n\n    setTimeout(function () {\n      console.log(JSON.stringify(payload, null, 2));\n      setSubmitting(false);\n    }, 1000);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    xxs: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"forms.top-labels-over-line\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      email: 'test@test.com',\n      password: '',\n      tags: [],\n      date: null,\n      state: {\n        value: 'reasonml',\n        label: 'ReasonML'\n      }\n    },\n    validationSchema: SignupSchema,\n    onSubmit: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, function (_ref2) {\n    var handleSubmit = _ref2.handleSubmit,\n        setFieldValue = _ref2.setFieldValue,\n        setFieldTouched = _ref2.setFieldTouched,\n        handleChange = _ref2.handleChange,\n        handleBlur = _ref2.handleBlur,\n        values = _ref2.values,\n        errors = _ref2.errors,\n        touched = _ref2.touched,\n        isSubmitting = _ref2.isSubmitting;\n    return /*#__PURE__*/React.createElement(Form, {\n      className: \"av-tooltip tooltip-label-bottom\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"form-group has-float-label\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"forms.email\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Field, {\n      className: \"form-control\",\n      name: \"email\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 23\n      }\n    }), errors.email && touched.email ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback d-block\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }\n    }, errors.email) : null), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"form-group has-float-label\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"forms.password\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Field, {\n      className: \"form-control\",\n      name: \"password\",\n      type: \"password\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 23\n      }\n    }), errors.password && touched.password ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback d-block\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }\n    }, errors.password) : null), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"form-group has-float-label\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      className: \"d-block\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"form-components.tags\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(FormikTagsInput, {\n      name: \"tags\",\n      value: values.tags,\n      onChange: setFieldValue,\n      onBlur: setFieldTouched,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 23\n      }\n    }), errors.tags && touched.tags ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback d-block\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    }, errors.tags) : null), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"form-group has-float-label\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      className: \"d-block\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"form-components.date\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(FormikDatePicker, {\n      name: \"date\",\n      value: values.date,\n      onChange: setFieldValue,\n      onBlur: setFieldTouched,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 23\n      }\n    }), errors.date && touched.date ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback d-block\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 25\n      }\n    }, errors.date) : null), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"form-group has-float-label\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"forms.state\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(FormikReactSelect, {\n      name: \"state\",\n      id: \"state\",\n      value: values.state,\n      options: options,\n      onChange: setFieldValue,\n      onBlur: setFieldTouched,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 23\n      }\n    }), errors.state && touched.state ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback d-block\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 25\n      }\n    }, errors.state) : null), /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      type: \"submit\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }\n    }, \"Submit\"));\n  }))))), /*#__PURE__*/React.createElement(Row, {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    xxs: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"forms.top-labels-in-input\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      email: 'test@test.com',\n      password: '',\n      tags: [],\n      date: null,\n      state: {\n        value: 'reasonml',\n        label: 'ReasonML'\n      }\n    },\n    validationSchema: SignupSchema,\n    onSubmit: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 15\n    }\n  }, function (_ref3) {\n    var handleSubmit = _ref3.handleSubmit,\n        setFieldValue = _ref3.setFieldValue,\n        setFieldTouched = _ref3.setFieldTouched,\n        handleChange = _ref3.handleChange,\n        handleBlur = _ref3.handleBlur,\n        values = _ref3.values,\n        errors = _ref3.errors,\n        touched = _ref3.touched,\n        isSubmitting = _ref3.isSubmitting;\n    return /*#__PURE__*/React.createElement(Form, {\n      className: \"av-tooltip tooltip-label-bottom\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"form-group has-top-label\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"forms.email-u\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Field, {\n      className: \"form-control\",\n      name: \"email\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 23\n      }\n    }), errors.email && touched.email ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback d-block\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 25\n      }\n    }, errors.email) : null), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"form-group has-top-label\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"forms.password-u\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Field, {\n      className: \"form-control\",\n      name: \"password\",\n      type: \"password\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 23\n      }\n    }), errors.password && touched.password ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback d-block\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 25\n      }\n    }, errors.password) : null), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"form-group has-top-label\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      className: \"d-block\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"forms.tags-u\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(FormikTagsInput, {\n      name: \"tags\",\n      value: values.tags,\n      onChange: setFieldValue,\n      onBlur: setFieldTouched,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 23\n      }\n    }), errors.tags && touched.tags ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback d-block\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 25\n      }\n    }, errors.tags) : null), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"form-group has-top-label\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      className: \"d-block\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"forms.date-u\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(FormikDatePicker, {\n      name: \"date\",\n      value: values.date,\n      onChange: setFieldValue,\n      onBlur: setFieldTouched,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 23\n      }\n    }), errors.date && touched.date ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback d-block\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 25\n      }\n    }, errors.date) : null), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"form-group has-top-label\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"forms.state-u\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(FormikReactSelect, {\n      name: \"state\",\n      id: \"state\",\n      value: values.state,\n      options: options,\n      onChange: setFieldValue,\n      onBlur: setFieldTouched,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 23\n      }\n    }), errors.state && touched.state ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback d-block\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 25\n      }\n    }, errors.state) : null), /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      type: \"submit\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 21\n      }\n    }, \"Submit\"));\n  }))))));\n};\n\nexport default FormikCustomWithTopLabels;","map":{"version":3,"sources":["/home/browsewire/Desktop/CEIorder/client/src/containers/form-validations/FormikCustomWithTopLabels.js"],"names":["React","Formik","Form","Field","Yup","Row","Card","CardBody","FormGroup","Label","Button","CardTitle","FormikReactSelect","FormikTagsInput","FormikDatePicker","IntlMessages","Colxx","SignupSchema","object","shape","email","string","required","password","tags","array","min","date","nullable","state","label","value","options","disabled","FormikCustomWithTopLabels","onSubmit","values","setSubmitting","payload","setTimeout","console","log","JSON","stringify","handleSubmit","setFieldValue","setFieldTouched","handleChange","handleBlur","errors","touched","isSubmitting"],"mappings":"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","sourcesContent":["/* eslint-disable no-shadow */\n/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  Row,\n  Card,\n  CardBody,\n  FormGroup,\n  Label,\n  Button,\n  CardTitle,\n} from 'reactstrap';\nimport {\n  FormikReactSelect,\n  FormikTagsInput,\n  FormikDatePicker,\n} from './FormikFields';\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { Colxx } from '../../components/common/CustomBootstrap';\n\nconst SignupSchema = Yup.object().shape({\n  email: Yup.string()\n    .email('Invalid email address')\n    .required('Email is required!'),\n  password: Yup.string().required('Password is required!'),\n  tags: Yup.array()\n    .min(3, 'Pick at least 3 tags')\n    .required('At least one tag is required'),\n  date: Yup.date().nullable().required('Date required'),\n  state: Yup.object()\n    .shape({\n      label: Yup.string().required(),\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required('State is required!'),\n});\n\nconst options = [\n  { value: 'food', label: 'Food' },\n  { value: 'beingfabulous', label: 'Being Fabulous', disabled: true },\n  { value: 'reasonml', label: 'ReasonML' },\n  { value: 'unicorns', label: 'Unicorns' },\n  { value: 'kittens', label: 'Kittens' },\n];\n\nconst FormikCustomWithTopLabels = () => {\n  const onSubmit = (values, { setSubmitting }) => {\n    const payload = {\n      ...values,\n      state: values.state.value,\n    };\n    setTimeout(() => {\n      console.log(JSON.stringify(payload, null, 2));\n      setSubmitting(false);\n    }, 1000);\n  };\n\n  return (\n    <div>\n      <Row className=\"mb-4\">\n        <Colxx xxs=\"12\">\n          <Card>\n            <CardBody>\n              <CardTitle>\n                <IntlMessages id=\"forms.top-labels-over-line\" />\n              </CardTitle>\n\n              <Formik\n                initialValues={{\n                  email: 'test@test.com',\n                  password: '',\n                  tags: [],\n                  date: null,\n                  state: { value: 'reasonml', label: 'ReasonML' },\n                }}\n                validationSchema={SignupSchema}\n                onSubmit={onSubmit}\n              >\n                {({\n                  handleSubmit,\n                  setFieldValue,\n                  setFieldTouched,\n                  handleChange,\n                  handleBlur,\n                  values,\n                  errors,\n                  touched,\n                  isSubmitting,\n                }) => (\n                  <Form className=\"av-tooltip tooltip-label-bottom\">\n                    <FormGroup className=\"form-group has-float-label\">\n                      <Label>\n                        <IntlMessages id=\"forms.email\" />\n                      </Label>\n                      <Field className=\"form-control\" name=\"email\" />\n                      {errors.email && touched.email ? (\n                        <div className=\"invalid-feedback d-block\">\n                          {errors.email}\n                        </div>\n                      ) : null}\n                    </FormGroup>\n                    <FormGroup className=\"form-group has-float-label\">\n                      <Label>\n                        <IntlMessages id=\"forms.password\" />\n                      </Label>\n                      <Field\n                        className=\"form-control\"\n                        name=\"password\"\n                        type=\"password\"\n                      />\n                      {errors.password && touched.password ? (\n                        <div className=\"invalid-feedback d-block\">\n                          {errors.password}\n                        </div>\n                      ) : null}\n                    </FormGroup>\n\n                    <FormGroup className=\"form-group has-float-label\">\n                      <Label className=\"d-block\">\n                        <IntlMessages id=\"form-components.tags\" />\n                      </Label>\n                      <FormikTagsInput\n                        name=\"tags\"\n                        value={values.tags}\n                        onChange={setFieldValue}\n                        onBlur={setFieldTouched}\n                      />\n\n                      {errors.tags && touched.tags ? (\n                        <div className=\"invalid-feedback d-block\">\n                          {errors.tags}\n                        </div>\n                      ) : null}\n                    </FormGroup>\n\n                    <FormGroup className=\"form-group has-float-label\">\n                      <Label className=\"d-block\">\n                        <IntlMessages id=\"form-components.date\" />\n                      </Label>\n                      <FormikDatePicker\n                        name=\"date\"\n                        value={values.date}\n                        onChange={setFieldValue}\n                        onBlur={setFieldTouched}\n                      />\n                      {errors.date && touched.date ? (\n                        <div className=\"invalid-feedback d-block\">\n                          {errors.date}\n                        </div>\n                      ) : null}\n                    </FormGroup>\n\n                    <FormGroup className=\"form-group has-float-label\">\n                      <Label>\n                        <IntlMessages id=\"forms.state\" />\n                      </Label>\n                      <FormikReactSelect\n                        name=\"state\"\n                        id=\"state\"\n                        value={values.state}\n                        options={options}\n                        onChange={setFieldValue}\n                        onBlur={setFieldTouched}\n                      />\n                      {errors.state && touched.state ? (\n                        <div className=\"invalid-feedback d-block\">\n                          {errors.state}\n                        </div>\n                      ) : null}\n                    </FormGroup>\n\n                    <Button color=\"primary\" type=\"submit\">\n                      Submit\n                    </Button>\n                  </Form>\n                )}\n              </Formik>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n\n      <Row className=\"mb-4\">\n        <Colxx xxs=\"12\">\n          <Card>\n            <CardBody>\n              <CardTitle>\n                <IntlMessages id=\"forms.top-labels-in-input\" />\n              </CardTitle>\n\n              <Formik\n                initialValues={{\n                  email: 'test@test.com',\n                  password: '',\n                  tags: [],\n                  date: null,\n                  state: { value: 'reasonml', label: 'ReasonML' },\n                }}\n                validationSchema={SignupSchema}\n                onSubmit={onSubmit}\n              >\n                {({\n                  handleSubmit,\n                  setFieldValue,\n                  setFieldTouched,\n                  handleChange,\n                  handleBlur,\n                  values,\n                  errors,\n                  touched,\n                  isSubmitting,\n                }) => (\n                  <Form className=\"av-tooltip tooltip-label-bottom\">\n                    <FormGroup className=\"form-group has-top-label\">\n                      <Label>\n                        <IntlMessages id=\"forms.email-u\" />\n                      </Label>\n                      <Field className=\"form-control\" name=\"email\" />\n                      {errors.email && touched.email ? (\n                        <div className=\"invalid-feedback d-block\">\n                          {errors.email}\n                        </div>\n                      ) : null}\n                    </FormGroup>\n                    <FormGroup className=\"form-group has-top-label\">\n                      <Label>\n                        <IntlMessages id=\"forms.password-u\" />\n                      </Label>\n                      <Field\n                        className=\"form-control\"\n                        name=\"password\"\n                        type=\"password\"\n                      />\n                      {errors.password && touched.password ? (\n                        <div className=\"invalid-feedback d-block\">\n                          {errors.password}\n                        </div>\n                      ) : null}\n                    </FormGroup>\n\n                    <FormGroup className=\"form-group has-top-label\">\n                      <Label className=\"d-block\">\n                        <IntlMessages id=\"forms.tags-u\" />\n                      </Label>\n                      <FormikTagsInput\n                        name=\"tags\"\n                        value={values.tags}\n                        onChange={setFieldValue}\n                        onBlur={setFieldTouched}\n                      />\n\n                      {errors.tags && touched.tags ? (\n                        <div className=\"invalid-feedback d-block\">\n                          {errors.tags}\n                        </div>\n                      ) : null}\n                    </FormGroup>\n\n                    <FormGroup className=\"form-group has-top-label\">\n                      <Label className=\"d-block\">\n                        <IntlMessages id=\"forms.date-u\" />\n                      </Label>\n                      <FormikDatePicker\n                        name=\"date\"\n                        value={values.date}\n                        onChange={setFieldValue}\n                        onBlur={setFieldTouched}\n                      />\n                      {errors.date && touched.date ? (\n                        <div className=\"invalid-feedback d-block\">\n                          {errors.date}\n                        </div>\n                      ) : null}\n                    </FormGroup>\n\n                    <FormGroup className=\"form-group has-top-label\">\n                      <Label>\n                        <IntlMessages id=\"forms.state-u\" />\n                      </Label>\n                      <FormikReactSelect\n                        name=\"state\"\n                        id=\"state\"\n                        value={values.state}\n                        options={options}\n                        onChange={setFieldValue}\n                        onBlur={setFieldTouched}\n                      />\n                      {errors.state && touched.state ? (\n                        <div className=\"invalid-feedback d-block\">\n                          {errors.state}\n                        </div>\n                      ) : null}\n                    </FormGroup>\n\n                    <Button color=\"primary\" type=\"submit\">\n                      Submit\n                    </Button>\n                  </Form>\n                )}\n              </Formik>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n    </div>\n  );\n};\nexport default FormikCustomWithTopLabels;\n"]},"metadata":{},"sourceType":"module"}