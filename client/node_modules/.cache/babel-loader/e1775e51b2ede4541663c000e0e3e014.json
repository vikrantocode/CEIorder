{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/browsewire/Desktop/CEIorder/client/src/containers/form-validations/FormikBasicFieldLevel.js\";\n\nimport React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { Row, Card, CardBody, FormGroup, Label, Button } from 'reactstrap';\nimport { Colxx } from '../../components/common/CustomBootstrap';\n\nvar FormikBasicFieldLevel = function FormikBasicFieldLevel() {\n  var onSubmit = function onSubmit(values) {\n    console.log(values);\n  };\n\n  var validateEmail = function validateEmail(value) {\n    var error;\n\n    if (!value) {\n      error = 'Please enter your email address';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n      error = 'Invalid email address';\n    }\n\n    return error;\n  };\n\n  var validateName = function validateName(value) {\n    var error;\n\n    if (!value) {\n      error = 'Please enter your name';\n    } else if (value.length < 2) {\n      error = 'Value must be longer than 2 characters';\n    }\n\n    return error;\n  };\n\n  return /*#__PURE__*/React.createElement(Row, {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    xxs: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"Field Level Validation\"), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      name: '',\n      email: ''\n    },\n    onSubmit: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, function (_ref) {\n    var errors = _ref.errors,\n        touched = _ref.touched;\n    return /*#__PURE__*/React.createElement(Form, {\n      className: \"av-tooltip tooltip-label-right\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Field, {\n      className: \"form-control\",\n      name: \"name\",\n      validate: validateName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }), errors.name && touched.name && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback d-block\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 23\n      }\n    }, errors.name)), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Field, {\n      className: \"form-control\",\n      name: \"email\",\n      validate: validateEmail,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }), errors.email && touched.email && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback d-block\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 23\n      }\n    }, errors.email)), /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      type: \"submit\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }\n    }, \"Submit\"));\n  })))));\n};\n\nexport default FormikBasicFieldLevel;","map":{"version":3,"sources":["/home/browsewire/Desktop/CEIorder/client/src/containers/form-validations/FormikBasicFieldLevel.js"],"names":["React","Formik","Form","Field","Row","Card","CardBody","FormGroup","Label","Button","Colxx","FormikBasicFieldLevel","onSubmit","values","console","log","validateEmail","value","error","test","validateName","length","name","email","errors","touched"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Formik, Form, Field } from 'formik';\n\nimport { Row, Card, CardBody, FormGroup, Label, Button } from 'reactstrap';\nimport { Colxx } from '../../components/common/CustomBootstrap';\n\nconst FormikBasicFieldLevel = () => {\n  const onSubmit = (values) => {\n    console.log(values);\n  };\n\n  const validateEmail = (value) => {\n    let error;\n    if (!value) {\n      error = 'Please enter your email address';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n      error = 'Invalid email address';\n    }\n    return error;\n  };\n\n  const validateName = (value) => {\n    let error;\n    if (!value) {\n      error = 'Please enter your name';\n    } else if (value.length < 2) {\n      error = 'Value must be longer than 2 characters';\n    }\n    return error;\n  };\n\n  return (\n    <Row className=\"mb-4\">\n      <Colxx xxs=\"12\">\n        <Card>\n          <CardBody>\n            <h6 className=\"mb-4\">Field Level Validation</h6>\n            <Formik\n              initialValues={{\n                name: '',\n                email: '',\n              }}\n              onSubmit={onSubmit}\n            >\n              {({ errors, touched }) => (\n                <Form className=\"av-tooltip tooltip-label-right\">\n                  <FormGroup>\n                    <Label>Name</Label>\n                    <Field\n                      className=\"form-control\"\n                      name=\"name\"\n                      validate={validateName}\n                    />\n                    {errors.name && touched.name && (\n                      <div className=\"invalid-feedback d-block\">\n                        {errors.name}\n                      </div>\n                    )}\n                  </FormGroup>\n\n                  <FormGroup>\n                    <Label>Email</Label>\n                    <Field\n                      className=\"form-control\"\n                      name=\"email\"\n                      validate={validateEmail}\n                    />\n                    {errors.email && touched.email && (\n                      <div className=\"invalid-feedback d-block\">\n                        {errors.email}\n                      </div>\n                    )}\n                  </FormGroup>\n\n                  <Button color=\"primary\" type=\"submit\">\n                    Submit\n                  </Button>\n                </Form>\n              )}\n            </Formik>\n          </CardBody>\n        </Card>\n      </Colxx>\n    </Row>\n  );\n};\n\nexport default FormikBasicFieldLevel;\n"]},"metadata":{},"sourceType":"module"}