{"ast":null,"code":"import _objectSpread from \"/home/browsewire/Desktop/CEIorder/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"/home/browsewire/Desktop/CEIorder/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/browsewire/Desktop/CEIorder/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/browsewire/Desktop/CEIorder/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/browsewire/Desktop/CEIorder/client/src/views/app/orders/orders/AssignGroup.js\";\n\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport axios from 'axios';\nimport Select from 'react-select';\nimport { Card, CardBody, Button, Label, Col, Row, Input } from 'reactstrap';\nimport CustomSelectInput from '../../../../components/common/CustomSelectInput';\nimport IntlMessages from '../../../../helpers/IntlMessages';\nimport { NotificationManager } from '../../../../components/common/react-notifications';\n\nvar AssignGroup = function AssignGroup(_ref) {\n  var match = _ref.match;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      id = _useState4[0],\n      setId = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      change = _useState6[0],\n      setChange = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      groups = _useState8[0],\n      setGroups = _useState8[1];\n\n  var _useState9 = useState({}),\n      _useState10 = _slicedToArray(_useState9, 2),\n      formData = _useState10[0],\n      setFormData = _useState10[1];\n\n  var history = useHistory();\n  useEffect(function () {\n    setId(match.params.id);\n    setIsLoading(true);\n\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$axios$get, data, groups;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get('/api/orders/groups');\n\n            case 2:\n              _yield$axios$get = _context.sent;\n              data = _yield$axios$get.data;\n              groups = data.map(function (item) {\n                var group = {};\n                group.label = item.name;\n                group.value = item.id;\n                return group;\n              });\n              setGroups(groups);\n              setIsLoading(false);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  }, [change]);\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(action) {\n      var res, _res;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              formData.orderId = id;\n\n              if (!(action === 'create')) {\n                _context2.next = 16;\n                break;\n              }\n\n              _context2.prev = 2;\n              _context2.next = 5;\n              return axios.post(\"/api/orders/groups\", formData);\n\n            case 5:\n              res = _context2.sent;\n              NotificationManager.success('Order Group Assigned Successfully', 'Success', 3000);\n              history.push(\"/app/orders/edit-order/\".concat(id));\n              _context2.next = 14;\n              break;\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](2);\n              console.log(_context2.t0);\n              NotificationManager.error('Something went wrong', 'Error', 3000);\n\n            case 14:\n              _context2.next = 28;\n              break;\n\n            case 16:\n              _context2.prev = 16;\n              _context2.next = 19;\n              return axios.post(\"/api/orders/groups/assign\", formData);\n\n            case 19:\n              _res = _context2.sent;\n              NotificationManager.success('Order Group Assigned Successfully', 'Success', 3000);\n              history.push(\"/app/orders/edit-order/\".concat(id));\n              _context2.next = 28;\n              break;\n\n            case 24:\n              _context2.prev = 24;\n              _context2.t1 = _context2[\"catch\"](16);\n              console.log(_context2.t1);\n              NotificationManager.error('Something went wrong', 'Error', 3000);\n\n            case 28:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[2, 10], [16, 24]]);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loading\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, \"Add to Group\"), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"Choose From Existing Groups\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Select, {\n    components: {\n      Input: CustomSelectInput\n    },\n    className: \"react-select\",\n    classNamePrefix: \"react-select\",\n    name: \"form-field-name\",\n    options: groups,\n    onChange: function onChange(e) {\n      setFormData(_objectSpread(_objectSpread({}, formData), {}, {\n        orderGroupId: e.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"mt-4\",\n    onClick: function onClick() {\n      return handleSubmit('assign');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, \"Add to Group\")), /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"h4 my-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, \"Or\"), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"Add and Assign to Group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    onChange: function onChange(e) {\n      setFormData(_objectSpread(_objectSpread({}, formData), {}, {\n        name: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"mt-4\",\n    onClick: function onClick() {\n      return handleSubmit('create');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }, \"Create and Assign\")), /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default AssignGroup;","map":{"version":3,"sources":["/home/browsewire/Desktop/CEIorder/client/src/views/app/orders/orders/AssignGroup.js"],"names":["React","useEffect","useState","useHistory","axios","Select","Card","CardBody","Button","Label","Col","Row","Input","CustomSelectInput","IntlMessages","NotificationManager","AssignGroup","match","isLoading","setIsLoading","id","setId","change","setChange","groups","setGroups","formData","setFormData","history","params","get","data","map","item","group","label","name","value","handleSubmit","action","orderId","post","res","success","push","console","log","error","e","orderGroupId","target"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,MAAzB,EAAiCC,KAAjC,EAAwCC,GAAxC,EAA6CC,GAA7C,EAAkDC,KAAlD,QAA+D,YAA/D;AACA,OAAOC,iBAAP,MAA8B,iDAA9B;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,SAASC,mBAAT,QAAoC,mDAApC;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAAA,kBACCf,QAAQ,CAAC,KAAD,CADT;AAAA;AAAA,MAC1BgB,SAD0B;AAAA,MACfC,YADe;;AAAA,mBAEbjB,QAAQ,EAFK;AAAA;AAAA,MAE1BkB,EAF0B;AAAA,MAEtBC,KAFsB;;AAAA,mBAGLnB,QAAQ,CAAC,KAAD,CAHH;AAAA;AAAA,MAG1BoB,MAH0B;AAAA,MAGlBC,SAHkB;;AAAA,mBAILrB,QAAQ,CAAC,EAAD,CAJH;AAAA;AAAA,MAI1BsB,MAJ0B;AAAA,MAIlBC,SAJkB;;AAAA,mBAKDvB,QAAQ,CAAC,EAAD,CALP;AAAA;AAAA,MAK1BwB,QAL0B;AAAA,MAKhBC,WALgB;;AAOjC,MAAMC,OAAO,GAAGzB,UAAU,EAA1B;AAEAF,EAAAA,SAAS,CAAC,YAAM;AACdoB,IAAAA,KAAK,CAACJ,KAAK,CAACY,MAAN,CAAaT,EAAd,CAAL;AACAD,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,6DAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACwBf,KAAK,CAAC0B,GAAN,CAAU,oBAAV,CADxB;;AAAA;AAAA;AACSC,cAAAA,IADT,oBACSA,IADT;AAEOP,cAAAA,MAFP,GAEgBO,IAAI,CAACC,GAAL,CAAS,UAACC,IAAD,EAAU;AAChC,oBAAMC,KAAK,GAAG,EAAd;AACAA,gBAAAA,KAAK,CAACC,KAAN,GAAcF,IAAI,CAACG,IAAnB;AACAF,gBAAAA,KAAK,CAACG,KAAN,GAAcJ,IAAI,CAACb,EAAnB;AACA,uBAAOc,KAAP;AACD,eALc,CAFhB;AAQCT,cAAAA,SAAS,CAACD,MAAD,CAAT;AACAL,cAAAA,YAAY,CAAC,KAAD,CAAZ;;AATD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAWD,GAdQ,EAcN,CAACG,MAAD,CAdM,CAAT;;AAgBA,MAAMgB,YAAY;AAAA,yEAAG,kBAAOC,MAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACnBb,cAAAA,QAAQ,CAACc,OAAT,GAAmBpB,EAAnB;;AADmB,oBAEfmB,MAAM,KAAK,QAFI;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,qBAIGnC,KAAK,CAACqC,IAAN,uBAAiCf,QAAjC,CAJH;;AAAA;AAITgB,cAAAA,GAJS;AAKf3B,cAAAA,mBAAmB,CAAC4B,OAApB,CACE,mCADF,EAEE,SAFF,EAGE,IAHF;AAKAf,cAAAA,OAAO,CAACgB,IAAR,kCAAuCxB,EAAvC;AAVe;AAAA;;AAAA;AAAA;AAAA;AAYfyB,cAAAA,OAAO,CAACC,GAAR;AACA/B,cAAAA,mBAAmB,CAACgC,KAApB,CAA0B,sBAA1B,EAAkD,OAAlD,EAA2D,IAA3D;;AAbe;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,qBAiBG3C,KAAK,CAACqC,IAAN,8BAAwCf,QAAxC,CAjBH;;AAAA;AAiBTgB,cAAAA,IAjBS;AAkBf3B,cAAAA,mBAAmB,CAAC4B,OAApB,CACE,mCADF,EAEE,SAFF,EAGE,IAHF;AAKAf,cAAAA,OAAO,CAACgB,IAAR,kCAAuCxB,EAAvC;AAvBe;AAAA;;AAAA;AAAA;AAAA;AAyBfyB,cAAAA,OAAO,CAACC,GAAR;AACA/B,cAAAA,mBAAmB,CAACgC,KAApB,CAA0B,sBAA1B,EAAkD,OAAlD,EAA2D,IAA3D;;AA1Be;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZT,YAAY;AAAA;AAAA;AAAA,KAAlB;;AA+BA,SAAOpB,SAAS,gBACd;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADc,gBAGd,uDACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,EAAE,EAAC,6BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,MAAD;AACE,IAAA,UAAU,EAAE;AAAEN,MAAAA,KAAK,EAAEC;AAAT,KADd;AAEE,IAAA,SAAS,EAAC,cAFZ;AAGE,IAAA,eAAe,EAAC,cAHlB;AAIE,IAAA,IAAI,EAAC,iBAJP;AAKE,IAAA,OAAO,EAAEW,MALX;AAME,IAAA,QAAQ,EAAE,kBAACwB,CAAD,EAAO;AACfrB,MAAAA,WAAW,iCAAMD,QAAN;AAAgBuB,QAAAA,YAAY,EAAED,CAAC,CAACX;AAAhC,SAAX;AACD,KARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,eAgBE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,MAAlB;AAAyB,IAAA,OAAO,EAAE;AAAA,aAAMC,YAAY,CAAC,QAAD,CAAlB;AAAA,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CAhBF,eAqBE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBF,CAFF,eAyBE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAzBF,eA0BE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,EAAE,EAAC,yBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,KAAD;AACE,IAAA,QAAQ,EAAE,kBAACU,CAAD,EAAO;AACfrB,MAAAA,WAAW,iCAAMD,QAAN;AAAgBU,QAAAA,IAAI,EAAEY,CAAC,CAACE,MAAF,CAASb;AAA/B,SAAX;AACD,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,eAWE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,MAAlB;AAAyB,IAAA,OAAO,EAAE;AAAA,aAAMC,YAAY,CAAC,QAAD,CAAlB;AAAA,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CAXF,eAgBE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,CA1BF,CADF,CADF,CAHF;AAqDD,CA7GD;;AA+GA,eAAetB,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport axios from 'axios';\nimport Select from 'react-select';\nimport { Card, CardBody, Button, Label, Col, Row, Input } from 'reactstrap';\nimport CustomSelectInput from '../../../../components/common/CustomSelectInput';\nimport IntlMessages from '../../../../helpers/IntlMessages';\nimport { NotificationManager } from '../../../../components/common/react-notifications';\n\nconst AssignGroup = ({ match }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [id, setId] = useState();\n  const [change, setChange] = useState(false);\n  const [groups, setGroups] = useState([]);\n  const [formData, setFormData] = useState({});\n\n  const history = useHistory();\n\n  useEffect(() => {\n    setId(match.params.id);\n    setIsLoading(true);\n    (async () => {\n      const { data } = await axios.get('/api/orders/groups');\n      const groups = data.map((item) => {\n        const group = {};\n        group.label = item.name;\n        group.value = item.id;\n        return group;\n      });\n      setGroups(groups);\n      setIsLoading(false);\n    })();\n  }, [change]);\n\n  const handleSubmit = async (action) => {\n    formData.orderId = id;\n    if (action === 'create') {\n      try {\n        const res = await axios.post(`/api/orders/groups`, formData);\n        NotificationManager.success(\n          'Order Group Assigned Successfully',\n          'Success',\n          3000\n        );\n        history.push(`/app/orders/edit-order/${id}`);\n      } catch (error) {\n        console.log(error);\n        NotificationManager.error('Something went wrong', 'Error', 3000);\n      }\n    } else {\n      try {\n        const res = await axios.post(`/api/orders/groups/assign`, formData);\n        NotificationManager.success(\n          'Order Group Assigned Successfully',\n          'Success',\n          3000\n        );\n        history.push(`/app/orders/edit-order/${id}`);\n      } catch (error) {\n        console.log(error);\n        NotificationManager.error('Something went wrong', 'Error', 3000);\n      }\n    }\n  };\n\n  return isLoading ? (\n    <div className=\"loading\"></div>\n  ) : (\n    <>\n      <Card>\n        <CardBody>\n          <h1>Add to Group</h1>\n          <Row>\n            <Col>\n              <Label>\n                <IntlMessages id=\"Choose From Existing Groups\" />\n              </Label>\n              <Select\n                components={{ Input: CustomSelectInput }}\n                className=\"react-select\"\n                classNamePrefix=\"react-select\"\n                name=\"form-field-name\"\n                options={groups}\n                onChange={(e) => {\n                  setFormData({ ...formData, orderGroupId: e.value });\n                }}\n              />\n            </Col>\n            <Col>\n              <Button className=\"mt-4\" onClick={() => handleSubmit('assign')}>\n                Add to Group\n              </Button>\n            </Col>\n            <Col></Col>\n          </Row>\n          <div className=\"h4 my-2\">Or</div>\n          <Row>\n            <Col>\n              <Label>\n                <IntlMessages id=\"Add and Assign to Group\" />\n              </Label>\n              <Input\n                onChange={(e) => {\n                  setFormData({ ...formData, name: e.target.value });\n                }}\n              />\n            </Col>\n            <Col>\n              <Button className=\"mt-4\" onClick={() => handleSubmit('create')}>\n                Create and Assign\n              </Button>\n            </Col>\n            <Col></Col>\n          </Row>\n        </CardBody>\n      </Card>\n    </>\n  );\n};\n\nexport default AssignGroup;\n"]},"metadata":{},"sourceType":"module"}