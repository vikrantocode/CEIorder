{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/browsewire/Desktop/CEIorder/client/src/containers/form-validations/FormikBasicFormLevel.js\";\n\n/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { Row, Card, CardBody, FormGroup, Label, Button } from 'reactstrap';\nimport { Colxx } from '../../components/common/CustomBootstrap';\n\nvar FormikBasicFormLevel = function FormikBasicFormLevel() {\n  var onSubmit = function onSubmit(values) {\n    console.log(values);\n  };\n\n  var validate = function validate(values) {\n    var errors = {};\n\n    if (!values.email) {\n      errors.email = 'Please enter your email address';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n      errors.email = 'Invalid email address';\n    }\n\n    if (!values.name) {\n      errors.name = 'Please enter your name';\n    } else if (values.name === 'admin') {\n      errors.name = 'Value must be longer than 2 characters';\n    }\n\n    return errors;\n  };\n\n  return /*#__PURE__*/React.createElement(Row, {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    xxs: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"Form Level Validation\"), /*#__PURE__*/React.createElement(Formik, {\n    validate: validate,\n    initialValues: {\n      name: '',\n      email: ''\n    },\n    onSubmit: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, function (_ref) {\n    var errors = _ref.errors,\n        touched = _ref.touched,\n        isValidating = _ref.isValidating;\n    return /*#__PURE__*/React.createElement(Form, {\n      className: \"av-tooltip tooltip-label-right\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Field, {\n      className: \"form-control\",\n      name: \"name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }), errors.name && touched.name && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback d-block\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 23\n      }\n    }, errors.name)), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Field, {\n      className: \"form-control\",\n      name: \"email\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }), errors.email && touched.email && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback d-block\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 23\n      }\n    }, errors.email)), /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      type: \"submit\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }\n    }, \"Submit\"));\n  })))));\n};\n\nexport default FormikBasicFormLevel;","map":{"version":3,"sources":["/home/browsewire/Desktop/CEIorder/client/src/containers/form-validations/FormikBasicFormLevel.js"],"names":["React","Formik","Form","Field","Row","Card","CardBody","FormGroup","Label","Button","Colxx","FormikBasicFormLevel","onSubmit","values","console","log","validate","errors","email","test","name","touched","isValidating"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport { Formik, Form, Field } from 'formik';\n\nimport { Row, Card, CardBody, FormGroup, Label, Button } from 'reactstrap';\nimport { Colxx } from '../../components/common/CustomBootstrap';\n\nconst FormikBasicFormLevel = () => {\n  const onSubmit = (values) => {\n    console.log(values);\n  };\n\n  const validate = (values) => {\n    const errors = {};\n\n    if (!values.email) {\n      errors.email = 'Please enter your email address';\n    } else if (\n      !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\n    ) {\n      errors.email = 'Invalid email address';\n    }\n\n    if (!values.name) {\n      errors.name = 'Please enter your name';\n    } else if (values.name === 'admin') {\n      errors.name = 'Value must be longer than 2 characters';\n    }\n    return errors;\n  };\n\n  return (\n    <Row className=\"mb-4\">\n      <Colxx xxs=\"12\">\n        <Card>\n          <CardBody>\n            <h6 className=\"mb-4\">Form Level Validation</h6>\n            <Formik\n              validate={validate}\n              initialValues={{\n                name: '',\n                email: '',\n              }}\n              onSubmit={onSubmit}\n            >\n              {({ errors, touched, isValidating }) => (\n                <Form className=\"av-tooltip tooltip-label-right\">\n                  <FormGroup>\n                    <Label>Name</Label>\n                    <Field className=\"form-control\" name=\"name\" />\n                    {errors.name && touched.name && (\n                      <div className=\"invalid-feedback d-block\">\n                        {errors.name}\n                      </div>\n                    )}\n                  </FormGroup>\n\n                  <FormGroup>\n                    <Label>Email</Label>\n                    <Field className=\"form-control\" name=\"email\" />\n                    {errors.email && touched.email && (\n                      <div className=\"invalid-feedback d-block\">\n                        {errors.email}\n                      </div>\n                    )}\n                  </FormGroup>\n\n                  <Button color=\"primary\" type=\"submit\">\n                    Submit\n                  </Button>\n                </Form>\n              )}\n            </Formik>\n          </CardBody>\n        </Card>\n      </Colxx>\n    </Row>\n  );\n};\n\nexport default FormikBasicFormLevel;\n"]},"metadata":{},"sourceType":"module"}