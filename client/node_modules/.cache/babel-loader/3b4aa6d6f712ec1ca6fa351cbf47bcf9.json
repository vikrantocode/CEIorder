{"ast":null,"code":"import _slicedToArray from \"/home/browsewire/Desktop/hj/CEI/cei/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/browsewire/Desktop/hj/CEI/cei/client/src/containers/navs/Topnav.DarkSwitch.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport Switch from 'rc-switch';\nimport 'rc-switch/assets/index.css';\nimport { Tooltip } from 'reactstrap';\nimport { getCurrentColor, setCurrentColor } from '../../helpers/Utils';\n\nvar TopnavDarkSwitch = function TopnavDarkSwitch() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      switchChecked = _useState2[0],\n      setSwitchChecked = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      tooltipOpen = _useState4[0],\n      setTooltipOpen = _useState4[1];\n\n  useEffect(function () {\n    var color = getCurrentColor();\n    setSwitchChecked(color.indexOf('dark') > -1);\n  }, []);\n\n  var changeMode = function changeMode() {\n    var color = getCurrentColor();\n\n    if (color.indexOf('dark') > -1) {\n      color = color.replace('dark', 'light');\n    } else if (color.indexOf('light') > -1) {\n      color = color.replace('light', 'dark');\n    }\n\n    setCurrentColor(color);\n    setSwitchChecked(color.indexOf('dark') > -1);\n    setTimeout(function () {\n      window.location.reload();\n    }, 500);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-none d-md-inline-block align-middle mr-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    id: \"tooltip_switch\",\n    className: \"custom-switch custom-switch-primary custom-switch-small\",\n    checked: switchChecked,\n    onChange: changeMode,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    placement: \"left\",\n    isOpen: tooltipOpen,\n    target: \"tooltip_switch\",\n    toggle: function toggle() {\n      return setTooltipOpen(!tooltipOpen);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"Dark Mode\"));\n};\n\nexport default TopnavDarkSwitch;","map":{"version":3,"sources":["/home/browsewire/Desktop/hj/CEI/cei/client/src/containers/navs/Topnav.DarkSwitch.js"],"names":["React","useState","useEffect","Switch","Tooltip","getCurrentColor","setCurrentColor","TopnavDarkSwitch","switchChecked","setSwitchChecked","tooltipOpen","setTooltipOpen","color","indexOf","changeMode","replace","setTimeout","window","location","reload"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAO,4BAAP;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,eAAT,EAA0BC,eAA1B,QAAiD,qBAAjD;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAAA,kBACaN,QAAQ,CAAC,KAAD,CADrB;AAAA;AAAA,MACtBO,aADsB;AAAA,MACPC,gBADO;;AAAA,mBAESR,QAAQ,CAAC,KAAD,CAFjB;AAAA;AAAA,MAEtBS,WAFsB;AAAA,MAETC,cAFS;;AAI7BT,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMU,KAAK,GAAGP,eAAe,EAA7B;AACAI,IAAAA,gBAAgB,CAACG,KAAK,CAACC,OAAN,CAAc,MAAd,IAAwB,CAAC,CAA1B,CAAhB;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,QAAIF,KAAK,GAAGP,eAAe,EAA3B;;AAEA,QAAIO,KAAK,CAACC,OAAN,CAAc,MAAd,IAAwB,CAAC,CAA7B,EAAgC;AAC9BD,MAAAA,KAAK,GAAGA,KAAK,CAACG,OAAN,CAAc,MAAd,EAAsB,OAAtB,CAAR;AACD,KAFD,MAEO,IAAIH,KAAK,CAACC,OAAN,CAAc,OAAd,IAAyB,CAAC,CAA9B,EAAiC;AACtCD,MAAAA,KAAK,GAAGA,KAAK,CAACG,OAAN,CAAc,OAAd,EAAuB,MAAvB,CAAR;AACD;;AACDT,IAAAA,eAAe,CAACM,KAAD,CAAf;AACAH,IAAAA,gBAAgB,CAACG,KAAK,CAACC,OAAN,CAAc,MAAd,IAAwB,CAAC,CAA1B,CAAhB;AACAG,IAAAA,UAAU,CAAC,YAAM;AACfC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,KAFS,EAEP,GAFO,CAAV;AAGD,GAbD;;AAeA,sBACE;AAAK,IAAA,SAAS,EAAC,4CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,EAAE,EAAC,gBADL;AAEE,IAAA,SAAS,EAAC,yDAFZ;AAGE,IAAA,OAAO,EAAEX,aAHX;AAIE,IAAA,QAAQ,EAAEM,UAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE,oBAAC,OAAD;AACE,IAAA,SAAS,EAAC,MADZ;AAEE,IAAA,MAAM,EAAEJ,WAFV;AAGE,IAAA,MAAM,EAAC,gBAHT;AAIE,IAAA,MAAM,EAAE;AAAA,aAAMC,cAAc,CAAC,CAACD,WAAF,CAApB;AAAA,KAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPF,CADF;AAkBD,CA1CD;;AA2CA,eAAeH,gBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Switch from 'rc-switch';\nimport 'rc-switch/assets/index.css';\nimport { Tooltip } from 'reactstrap';\nimport { getCurrentColor, setCurrentColor } from '../../helpers/Utils';\n\nconst TopnavDarkSwitch = () => {\n  const [switchChecked, setSwitchChecked] = useState(false);\n  const [tooltipOpen, setTooltipOpen] = useState(false);\n\n  useEffect(() => {\n    const color = getCurrentColor();\n    setSwitchChecked(color.indexOf('dark') > -1);\n  }, []);\n\n  const changeMode = () => {\n    let color = getCurrentColor();\n\n    if (color.indexOf('dark') > -1) {\n      color = color.replace('dark', 'light');\n    } else if (color.indexOf('light') > -1) {\n      color = color.replace('light', 'dark');\n    }\n    setCurrentColor(color);\n    setSwitchChecked(color.indexOf('dark') > -1);\n    setTimeout(() => {\n      window.location.reload();\n    }, 500);\n  };\n\n  return (\n    <div className=\"d-none d-md-inline-block align-middle mr-3\">\n      <Switch\n        id=\"tooltip_switch\"\n        className=\"custom-switch custom-switch-primary custom-switch-small\"\n        checked={switchChecked}\n        onChange={changeMode}\n      />\n      <Tooltip\n        placement=\"left\"\n        isOpen={tooltipOpen}\n        target=\"tooltip_switch\"\n        toggle={() => setTooltipOpen(!tooltipOpen)}\n      >\n        Dark Mode\n      </Tooltip>\n    </div>\n  );\n};\nexport default TopnavDarkSwitch;\n"]},"metadata":{},"sourceType":"module"}