{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nexport var ReactIntlErrorCode;\n\n(function (ReactIntlErrorCode) {\n  ReactIntlErrorCode[\"FORMAT_ERROR\"] = \"FORMAT_ERROR\";\n  ReactIntlErrorCode[\"UNSUPPORTED_FORMATTER\"] = \"UNSUPPORTED_FORMATTER\";\n  ReactIntlErrorCode[\"INVALID_CONFIG\"] = \"INVALID_CONFIG\";\n  ReactIntlErrorCode[\"MISSING_DATA\"] = \"MISSING_DATA\";\n  ReactIntlErrorCode[\"MISSING_TRANSLATION\"] = \"MISSING_TRANSLATION\";\n})(ReactIntlErrorCode || (ReactIntlErrorCode = {}));\n\nvar ReactIntlError =\n/** @class */\nfunction (_super) {\n  __extends(ReactIntlError, _super);\n\n  function ReactIntlError(code, message, exception) {\n    var _this = _super.call(this, \"[React Intl Error \" + code + \"] \" + message + \" \\n\" + (exception ? \"\\n\" + exception.stack : '')) || this;\n\n    _this.code = code;\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(_this, ReactIntlError);\n    }\n\n    return _this;\n  }\n\n  return ReactIntlError;\n}(Error);\n\nexport { ReactIntlError };\n\nvar UnsupportedFormatterError =\n/** @class */\nfunction (_super) {\n  __extends(UnsupportedFormatterError, _super);\n\n  function UnsupportedFormatterError(message, exception) {\n    return _super.call(this, \"UNSUPPORTED_FORMATTER\"\n    /* UNSUPPORTED_FORMATTER */\n    , message, exception) || this;\n  }\n\n  return UnsupportedFormatterError;\n}(ReactIntlError);\n\nexport { UnsupportedFormatterError };\n\nvar InvalidConfigError =\n/** @class */\nfunction (_super) {\n  __extends(InvalidConfigError, _super);\n\n  function InvalidConfigError(message, exception) {\n    return _super.call(this, \"INVALID_CONFIG\"\n    /* INVALID_CONFIG */\n    , message, exception) || this;\n  }\n\n  return InvalidConfigError;\n}(ReactIntlError);\n\nexport { InvalidConfigError };\n\nvar MissingDataError =\n/** @class */\nfunction (_super) {\n  __extends(MissingDataError, _super);\n\n  function MissingDataError(message, exception) {\n    return _super.call(this, \"MISSING_DATA\"\n    /* MISSING_DATA */\n    , message, exception) || this;\n  }\n\n  return MissingDataError;\n}(ReactIntlError);\n\nexport { MissingDataError };\n\nvar MessageFormatError =\n/** @class */\nfunction (_super) {\n  __extends(MessageFormatError, _super);\n\n  function MessageFormatError(message, locale, descriptor, exception) {\n    var _this = _super.call(this, \"FORMAT_ERROR\"\n    /* FORMAT_ERROR */\n    , message + \" \\nLocale: \" + locale + \"\\nMessageID: \" + (descriptor === null || descriptor === void 0 ? void 0 : descriptor.id) + \"\\nDefault Message: \" + (descriptor === null || descriptor === void 0 ? void 0 : descriptor.defaultMessage) + \"\\nDescription: \" + (descriptor === null || descriptor === void 0 ? void 0 : descriptor.description) + \" \\n\", exception) || this;\n\n    _this.descriptor = descriptor;\n    return _this;\n  }\n\n  return MessageFormatError;\n}(ReactIntlError);\n\nexport { MessageFormatError };\n\nvar MissingTranslationError =\n/** @class */\nfunction (_super) {\n  __extends(MissingTranslationError, _super);\n\n  function MissingTranslationError(descriptor, locale) {\n    var _this = _super.call(this, \"MISSING_TRANSLATION\"\n    /* MISSING_TRANSLATION */\n    , \"Missing message: \\\"\" + descriptor.id + \"\\\" for locale \\\"\" + locale + \"\\\", using \" + (descriptor.defaultMessage ? 'default message' : 'id') + \" as fallback.\") || this;\n\n    _this.descriptor = descriptor;\n    return _this;\n  }\n\n  return MissingTranslationError;\n}(ReactIntlError);\n\nexport { MissingTranslationError };","map":null,"metadata":{},"sourceType":"module"}