{"ast":null,"code":"import _objectSpread from \"/home/browsewire/Desktop/CEI/cei/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { LOGIN_USER, LOGIN_USER_SUCCESS, LOGIN_USER_ERROR, REGISTER_USER, REGISTER_USER_SUCCESS, REGISTER_USER_ERROR, LOGOUT_USER, FORGOT_PASSWORD, FORGOT_PASSWORD_SUCCESS, FORGOT_PASSWORD_ERROR, RESET_PASSWORD, RESET_PASSWORD_SUCCESS, RESET_PASSWORD_ERROR } from '../actions';\nimport { getCurrentUser } from '../../helpers/Utils';\nimport { isAuthGuardActive, currentUser } from '../../constants/defaultValues';\nvar INIT_STATE = {\n  currentUser: isAuthGuardActive ? currentUser : getCurrentUser(),\n  forgotUserMail: '',\n  newPassword: '',\n  resetPasswordCode: '',\n  loading: false,\n  error: ''\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOGIN_USER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true,\n        error: ''\n      });\n\n    case LOGIN_USER_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        currentUser: action.payload,\n        error: ''\n      });\n\n    case LOGIN_USER_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        currentUser: null,\n        error: action.payload.message\n      });\n\n    case FORGOT_PASSWORD:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true,\n        error: ''\n      });\n\n    case FORGOT_PASSWORD_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        forgotUserMail: action.payload,\n        error: ''\n      });\n\n    case FORGOT_PASSWORD_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        forgotUserMail: '',\n        error: action.payload.message\n      });\n\n    case RESET_PASSWORD:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true,\n        error: ''\n      });\n\n    case RESET_PASSWORD_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        newPassword: action.payload,\n        resetPasswordCode: '',\n        error: ''\n      });\n\n    case RESET_PASSWORD_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        newPassword: '',\n        resetPasswordCode: '',\n        error: action.payload.message\n      });\n\n    case REGISTER_USER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true,\n        error: ''\n      });\n\n    case REGISTER_USER_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        currentUser: action.payload,\n        error: ''\n      });\n\n    case REGISTER_USER_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        currentUser: null,\n        error: action.payload.message\n      });\n\n    case LOGOUT_USER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        currentUser: null,\n        error: ''\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n});","map":{"version":3,"sources":["/home/browsewire/Desktop/CEI/cei/client/src/redux/auth/reducer.js"],"names":["LOGIN_USER","LOGIN_USER_SUCCESS","LOGIN_USER_ERROR","REGISTER_USER","REGISTER_USER_SUCCESS","REGISTER_USER_ERROR","LOGOUT_USER","FORGOT_PASSWORD","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_ERROR","RESET_PASSWORD","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_ERROR","getCurrentUser","isAuthGuardActive","currentUser","INIT_STATE","forgotUserMail","newPassword","resetPasswordCode","loading","error","state","action","type","payload","message"],"mappings":"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","sourcesContent":["import {\n  LOGIN_USER,\n  LOGIN_USER_SUCCESS,\n  LOGIN_USER_ERROR,\n  REGISTER_USER,\n  REGISTER_USER_SUCCESS,\n  REGISTER_USER_ERROR,\n  LOGOUT_USER,\n  FORGOT_PASSWORD,\n  FORGOT_PASSWORD_SUCCESS,\n  FORGOT_PASSWORD_ERROR,\n  RESET_PASSWORD,\n  RESET_PASSWORD_SUCCESS,\n  RESET_PASSWORD_ERROR,\n} from '../actions';\nimport { getCurrentUser } from '../../helpers/Utils';\nimport { isAuthGuardActive, currentUser } from '../../constants/defaultValues';\n\n\nconst INIT_STATE = {\n  currentUser: isAuthGuardActive ? currentUser : getCurrentUser(),\n  forgotUserMail: '',\n  newPassword: '',\n  resetPasswordCode: '',\n  loading: false,\n  error: '',\n};\n\nexport default (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case LOGIN_USER:\n      return { ...state, loading: true, error: '' };\n    case LOGIN_USER_SUCCESS:\n      return { ...state, loading: false, currentUser: action.payload, error: '' };\n    case LOGIN_USER_ERROR:\n      return {\n        ...state,\n        loading: false,\n        currentUser: null,\n        error: action.payload.message,\n      };\n    case FORGOT_PASSWORD:\n      return { ...state, loading: true, error: '' };\n    case FORGOT_PASSWORD_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        forgotUserMail: action.payload,\n        error: '',\n      };\n    case FORGOT_PASSWORD_ERROR:\n      return {\n        ...state,\n        loading: false,\n        forgotUserMail: '',\n        error: action.payload.message,\n      };\n    case RESET_PASSWORD:\n      return { ...state, loading: true, error: '' };\n    case RESET_PASSWORD_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        newPassword: action.payload,\n        resetPasswordCode: '',\n        error: '',\n      };\n    case RESET_PASSWORD_ERROR:\n      return {\n        ...state,\n        loading: false,\n        newPassword: '',\n        resetPasswordCode: '',\n        error: action.payload.message,\n      };\n    case REGISTER_USER:\n      return { ...state, loading: true, error: '' };\n    case REGISTER_USER_SUCCESS:\n      return { ...state, loading: false, currentUser: action.payload, error: '' };\n    case REGISTER_USER_ERROR:\n      return {\n        ...state,\n        loading: false,\n        currentUser: null,\n        error: action.payload.message,\n      };\n    case LOGOUT_USER:\n      return { ...state, currentUser: null, error: '' };\n    default:\n      return { ...state };\n  }\n};\n"]},"metadata":{},"sourceType":"module"}