{"ast":null,"code":"import _objectSpread from \"/home/browsewire/Desktop/hj/CEI/cei/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"/home/browsewire/Desktop/hj/CEI/cei/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _createForOfIteratorHelper from \"/home/browsewire/Desktop/hj/CEI/cei/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _slicedToArray from \"/home/browsewire/Desktop/hj/CEI/cei/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/browsewire/Desktop/hj/CEI/cei/client/src/views/app/inventory/Variants/add-new-variant.js\";\n\nimport React, { useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input, Label, Row, Col } from 'reactstrap';\nimport Select from 'react-select';\nimport CustomSelectInput from '../../../../components/common/CustomSelectInput';\nimport IntlMessages from '../../../../helpers/IntlMessages';\nimport axios from 'axios';\nimport { NotificationManager } from '../../../../components/common/react-notifications';\nvar statusOptions = [{\n  label: 'Active',\n  value: 'Active',\n  key: 0\n}, {\n  label: 'Inactive',\n  value: 'Inactive',\n  key: 1\n}];\n\nvar AddNewVariantModal = function AddNewVariantModal(_ref) {\n  var modalOpen = _ref.modalOpen,\n      toggleModal = _ref.toggleModal,\n      categories = _ref.categories,\n      change = _ref.change,\n      setchange = _ref.setchange;\n\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      formData = _React$useState2[0],\n      setformData = _React$useState2[1];\n\n  var _useState = useState([\"\"]),\n      _useState2 = _slicedToArray(_useState, 2),\n      variants = _useState2[0],\n      setVariants = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedOptions = _useState4[0],\n      setSelectedOptions = _useState4[1]; // Create new Variant axios call\n\n\n  var CreateNewVariant = function CreateNewVariant(e) {\n    e.preventDefault();\n    var selectedCategories = [];\n\n    var _iterator = _createForOfIteratorHelper(selectedOptions),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var i = _step.value;\n        selectedCategories.push(i.label);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    if (!formData.name || !formData.status || variants.length == 0 || selectedCategories.length == 0) {\n      NotificationManager.error(\"Please check the details\", 'Error', 3000, null, null, '');\n    } else {\n      var data = {\n        variant: formData.name.toLowerCase(),\n        status: formData.status,\n        attributes: variants,\n        categories: selectedCategories\n      };\n      axios.post(\"/api/inventory/new-variant\", data).then(function (res) {\n        if (res.data.success) {\n          toggleModal();\n          setchange(!change);\n          NotificationManager.success(res.data.success, 'Success', 3000, null, null, '');\n        }\n      });\n    }\n  }; // handle click event of the Remove button\n\n\n  var handleRemoveClick = function handleRemoveClick(index) {\n    console.log(index);\n\n    var list = _toConsumableArray(variants);\n\n    list.splice(index, 1);\n    console.log(list);\n    setVariants(list);\n  }; // handle click event of the Add button\n\n\n  var handleAddClick = function handleAddClick() {\n    setVariants([].concat(_toConsumableArray(variants), [{\n      value: \"\"\n    }]));\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modalOpen,\n    toggle: toggleModal,\n    wrapClassName: \"modal-right\",\n    backdrop: \"static\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggleModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"Add New Variation\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"Variant Name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    onChange: function onChange(e) {\n      setformData(_objectSpread(_objectSpread({}, formData), {}, {\n        name: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  })), variants.map(function (variant, i) {\n    return /*#__PURE__*/React.createElement(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      className: \"mt-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"Variant Value\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Input, {\n      value: variant.value,\n      onChange: function onChange(e) {\n        var values = _toConsumableArray(variants);\n\n        values[i] = e.target.value;\n        setVariants(values);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-5\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }, variants.length !== 1 && /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      outline: true,\n      onClick: function onClick() {\n        return handleRemoveClick(i);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 41\n      }\n    }, \"Remove\")));\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-right\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"mt-3\",\n    color: \"primary\",\n    onClick: handleAddClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"Add More Value\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"Select Category\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Select, {\n    components: {\n      Input: CustomSelectInput\n    },\n    className: \"react-select\",\n    classNamePrefix: \"react-select\",\n    isMulti: true,\n    name: \"form-field-name\",\n    value: selectedOptions,\n    onChange: setSelectedOptions,\n    options: categories,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"Status\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Select, {\n    components: {\n      Input: CustomSelectInput\n    },\n    className: \"react-select\",\n    classNamePrefix: \"react-select\",\n    name: \"form-field-name\",\n    options: statusOptions,\n    onChange: function onChange(e) {\n      setformData(_objectSpread(_objectSpread({}, formData), {}, {\n        status: e.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    outline: true,\n    onClick: toggleModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"pages.cancel\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    onClick: CreateNewVariant,\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"Create Variant\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default AddNewVariantModal;","map":{"version":3,"sources":["/home/browsewire/Desktop/hj/CEI/cei/client/src/views/app/inventory/Variants/add-new-variant.js"],"names":["React","useState","Button","Modal","ModalHeader","ModalBody","ModalFooter","Input","Label","Row","Col","Select","CustomSelectInput","IntlMessages","axios","NotificationManager","statusOptions","label","value","key","AddNewVariantModal","modalOpen","toggleModal","categories","change","setchange","formData","setformData","variants","setVariants","selectedOptions","setSelectedOptions","CreateNewVariant","e","preventDefault","selectedCategories","i","push","name","status","length","error","data","variant","toLowerCase","attributes","post","then","res","success","handleRemoveClick","index","console","log","list","splice","handleAddClick","target","map","values"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Input,\n  Label,\n  Row,\n  Col\n} from 'reactstrap';\nimport Select from 'react-select';\nimport CustomSelectInput from '../../../../components/common/CustomSelectInput';\nimport IntlMessages from '../../../../helpers/IntlMessages';\nimport axios from 'axios'\nimport { NotificationManager } from '../../../../components/common/react-notifications';\n\n\nconst statusOptions = [\n  { label: 'Active', value: 'Active', key: 0 },\n  { label: 'Inactive', value: 'Inactive', key: 1 }\n];\nconst AddNewVariantModal = ({ modalOpen, toggleModal, categories,change,setchange }) => {\n  const [formData,setformData]= React.useState({})\n  const [variants, setVariants] = useState([ \"\" ]);\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  // Create new Variant axios call\n  const CreateNewVariant=(e)=>{\n    e.preventDefault()\n    var selectedCategories =[]\n    for(var i of selectedOptions){\n      selectedCategories.push(i.label)\n    }\n    if(!formData.name || !formData.status || variants.length==0 || selectedCategories.length==0){\n      NotificationManager.error(\n        \"Please check the details\",\n        'Error',\n        3000,\n        null,\n        null,\n        ''\n      );\n    }\n    else{\n      const data = {\n        variant:formData.name.toLowerCase(),\n        status:formData.status,\n        attributes:variants,\n        categories:selectedCategories\n      }\n  \n      axios.post(\"/api/inventory/new-variant\",data).then(res=>{\n        if(res.data.success){\n          toggleModal()\n          setchange(!change)\n          NotificationManager.success(\n            res.data.success,\n            'Success',\n            3000,\n            null,\n            null,\n            ''\n          );\n        }\n      })\n    }\n  }\n  // handle click event of the Remove button\n  const handleRemoveClick = index => {\n    console.log(index)\n  const list = [...variants];\n  list.splice(index, 1);\n  console.log(list)\n  setVariants(list);\n  };\n  // handle click event of the Add button\n  const handleAddClick = () => {\n  setVariants([...variants, { value: \"\" }]);\n  };\n\n  return (\n    <Modal\n      isOpen={modalOpen}\n      toggle={toggleModal}\n      wrapClassName=\"modal-right\"\n      backdrop=\"static\"\n    >\n      <ModalHeader toggle={toggleModal}>\n        <IntlMessages id=\"Add New Variation\" />\n      </ModalHeader>\n      <ModalBody>\n        <div className=\"mt-3\">\n          <Label>\n              <IntlMessages id=\"Variant Name\" />\n          </Label>\n          <Input onChange={(e) => {\n              setformData({ ...formData, name: e.target.value })\n              }} />\n      </div>      \n      {variants.map((variant, i) => {\n      return (\n        <Row>\n          <Col>\n            <Label className=\"mt-4\">\n                <IntlMessages id=\"Variant Value\" />\n            </Label>\n            <Input value={variant.value} onChange={(e) => {\n                let values = [...variants];\n                values[i] = e.target.value;\n                setVariants(values)\n                }} />\n          </Col>\n          <div className='mt-5'>\n              {variants.length !== 1 && <Button\n              color=\"secondary\" outline \n              onClick={() => handleRemoveClick(i)}>Remove</Button>}\n          </div>\n          </Row>\n          );\n      })}\n      <div className=\"text-right\">\n      <Button className='mt-3' color=\"primary\" onClick={handleAddClick}>\n          <IntlMessages id=\"Add More Value\" />\n      </Button> \n      </div>           \n      <div className=\"\">\n          <label>\n              <IntlMessages id=\"Select Category\" />\n          </label>\n          <Select\n          components={{ Input: CustomSelectInput }}\n          className=\"react-select\"\n          classNamePrefix=\"react-select\"\n          isMulti\n          name=\"form-field-name\"\n          value={selectedOptions}\n          onChange={setSelectedOptions}\n          options={categories}\n        />\n      </div>\n      <div className=\"mt-3\">\n          <Label>\n              <IntlMessages id=\"Status\" />\n          </Label>\n          \n          <Select\n          components={{ Input: CustomSelectInput }}\n          className=\"react-select\"\n          classNamePrefix=\"react-select\"\n          name=\"form-field-name\"\n          options={statusOptions}\n          onChange={(e) => {\n                  setformData({ ...formData, status: e.value })\n                  \n              }}\n          />\n      </div>        \n      </ModalBody>\n      <ModalFooter>\n        <Button color=\"secondary\" outline onClick={toggleModal}>\n          <IntlMessages id=\"pages.cancel\" />\n        </Button>\n        <Button onClick={CreateNewVariant} color=\"primary\">\n          <IntlMessages id=\"Create Variant\" />\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default AddNewVariantModal;\n\n"]},"metadata":{},"sourceType":"module"}