{"ast":null,"code":"import _createForOfIteratorHelper from \"/home/browsewire/Desktop/hj/CEI/cei/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _toConsumableArray from \"/home/browsewire/Desktop/hj/CEI/cei/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/home/browsewire/Desktop/hj/CEI/cei/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/browsewire/Desktop/hj/CEI/cei/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/browsewire/Desktop/hj/CEI/cei/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/browsewire/Desktop/hj/CEI/cei/client/src/views/app/orders/orders/ImportBulkOrder.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { servicePath } from '../../../../constants/defaultValues';\nimport useMousetrap from '../../../../hooks/use-mousetrap';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { NotificationManager } from '../../../../components/common/react-notifications';\nimport IntlMessages from '../../../../helpers/IntlMessages';\nimport OrdersListHeading from './BulkOrdersListHeading';\nimport OrdersPageListing from './BulkOrdersPageListing';\nimport OrdersPageHeading from './BulkOrderPageHeading';\n\nvar ImportBulkOrder = function ImportBulkOrder(_ref) {\n  var match = _ref.match;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoaded = _useState2[0],\n      setIsLoaded = _useState2[1];\n\n  var _useState3 = useState('thumblist'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      displayMode = _useState4[0],\n      setDisplayMode = _useState4[1];\n\n  var _useState5 = useState(1),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentPage = _useState6[0],\n      setCurrentPage = _useState6[1];\n\n  var _useState7 = useState(15),\n      _useState8 = _slicedToArray(_useState7, 2),\n      selectedPageSize = _useState8[0],\n      setSelectedPageSize = _useState8[1];\n\n  var _useState9 = useState({\n    column: 'title',\n    label: 'Category Name'\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      selectedOrderOption = _useState10[0],\n      setSelectedOrderOption = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      modalBasic = _useState12[0],\n      setModalBasic = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      modalOpen = _useState14[0],\n      setModalOpen = _useState14[1];\n\n  var _useState15 = useState(0),\n      _useState16 = _slicedToArray(_useState15, 2),\n      totalItemCount = _useState16[0],\n      setTotalItemCount = _useState16[1];\n\n  var _useState17 = useState(1),\n      _useState18 = _slicedToArray(_useState17, 2),\n      totalPage = _useState18[0],\n      setTotalPage = _useState18[1];\n\n  var _useState19 = useState([]),\n      _useState20 = _slicedToArray(_useState19, 2),\n      selectedItems = _useState20[0],\n      setSelectedItems = _useState20[1];\n\n  var _useState21 = useState([]),\n      _useState22 = _slicedToArray(_useState21, 2),\n      items = _useState22[0],\n      setItems = _useState22[1];\n\n  var _useState23 = useState(null),\n      _useState24 = _slicedToArray(_useState23, 2),\n      lastChecked = _useState24[0],\n      setLastChecked = _useState24[1];\n\n  var _useState25 = useState(false),\n      _useState26 = _slicedToArray(_useState25, 2),\n      modal = _useState26[0],\n      setModal = _useState26[1];\n\n  var _useState27 = useState(false),\n      _useState28 = _slicedToArray(_useState27, 2),\n      change = _useState28[0],\n      setchange = _useState28[1];\n\n  var _useState29 = useState(false),\n      _useState30 = _slicedToArray(_useState29, 2),\n      modalDelete = _useState30[0],\n      setModalDelete = _useState30[1];\n\n  var _useState31 = useState(''),\n      _useState32 = _slicedToArray(_useState31, 2),\n      orderId = _useState32[0],\n      setOrderId = _useState32[1];\n\n  var _useState33 = useState(null),\n      _useState34 = _slicedToArray(_useState33, 2),\n      importFile = _useState34[0],\n      setImportFile = _useState34[1];\n\n  var _useState35 = useState(false),\n      _useState36 = _slicedToArray(_useState35, 2),\n      importModal = _useState36[0],\n      setImportModal = _useState36[1];\n\n  var _useState37 = useState(false),\n      _useState38 = _slicedToArray(_useState37, 2),\n      importing = _useState38[0],\n      setImporting = _useState38[1];\n\n  var styles = {\n    profileImg: {\n      height: '3rem',\n      width: '3rem',\n      borderRadius: '50%'\n    }\n  };\n\n  var deleteModal = function deleteModal(e) {\n    setOrderId(e);\n    setModalBasic(true);\n  };\n\n  useEffect(function () {\n    setCurrentPage(1);\n  }, [selectedPageSize, selectedOrderOption]);\n  useEffect(function () {\n    axios.get(\"/api/orders/\".concat(currentPage)).then(function (_ref2) {\n      var data = _ref2.data;\n      console.log(data);\n      setItems(data.orders);\n      setTotalItemCount(data.count);\n      setTotalPage(Math.ceil(data.count / selectedPageSize));\n      setSelectedItems([]);\n      setIsLoaded(true);\n    });\n  }, [change]);\n\n  var getIndex = function getIndex(value, arr, prop) {\n    for (var i = 0; i < arr.length; i += 1) {\n      if (arr[i][prop] === value) {\n        return i;\n      }\n    }\n\n    return -1;\n  };\n\n  var statusOptions = [{\n    label: 'Active',\n    value: 'Active',\n    key: 0\n  }, {\n    label: 'Inactive',\n    value: 'Inactive',\n    key: 1\n  }];\n  var apiUrl = \"\".concat(servicePath, \"/cakes/paging\");\n  var orderOptions = [{\n    column: 'category',\n    label: 'Category Name'\n  }, {\n    column: 'status',\n    label: 'Status'\n  }]; // const pageSizes = [4, 8, 12, 20];\n\n  var pageSizes = [15, 50, 100, 150, 200]; // GET THE Category DETAILS AND OPEN THE EDIT MODAL\n\n  var openModal = function openModal(e) {};\n\n  var deleteOrder = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              axios.post('/api/orders/delete', null, {\n                params: {\n                  id: orderId\n                }\n              }).then(function (res) {\n                setchange(!change);\n                setModalBasic(false);\n                NotificationManager.success(res.data.success, 'Success', 3000, null, null, '');\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function deleteOrder(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }(); // EDIT CATEGORY\n\n\n  var edit = function edit() {}; // DELETE MULTIPLE Orders\n\n\n  var deleteSelectedOrders = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              axios.post('/api/orders/delete', null, {\n                params: {\n                  id: selectedItems\n                }\n              }).then(function (res) {\n                setchange(!change);\n                setModalDelete(false);\n                NotificationManager.success(res.data.success, 'Success', 3000, null, null, '');\n              });\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function deleteSelectedOrders(_x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var onCheckItem = function onCheckItem(event, id) {\n    if (event.target.tagName === 'A' || event.target.parentElement && event.target.parentElement.tagName === 'A') {\n      return true;\n    }\n\n    if (lastChecked === null) {\n      setLastChecked(id);\n    }\n\n    var selectedList = _toConsumableArray(selectedItems);\n\n    if (selectedList.includes(id)) {\n      selectedList = selectedList.filter(function (x) {\n        return x !== id;\n      });\n    } else {\n      selectedList.push(id);\n    }\n\n    setSelectedItems(selectedList);\n\n    if (event.shiftKey) {\n      var newItems = _toConsumableArray(items);\n\n      var start = getIndex(id, newItems, 'id');\n      var end = getIndex(lastChecked, newItems, 'id');\n      newItems = newItems.slice(Math.min(start, end), Math.max(start, end) + 1);\n      selectedItems.push.apply(selectedItems, _toConsumableArray(newItems.map(function (item) {\n        return item.id;\n      })));\n      selectedList = Array.from(new Set(selectedItems));\n      setSelectedItems(selectedList);\n    }\n\n    document.activeElement.blur();\n    return false;\n  };\n\n  var handleChangeSelectAll = function handleChangeSelectAll(isToggle) {\n    if (selectedItems.length >= items.length) {\n      if (isToggle) {\n        setSelectedItems([]);\n      }\n    } else {\n      setSelectedItems(items.map(function (x) {\n        return x.id;\n      }));\n    }\n\n    document.activeElement.blur();\n    return false;\n  };\n\n  var onContextMenuClick = function onContextMenuClick(e, data) {\n    // params : (e,data,target)\n    console.log('onContextMenuClick - selected items', selectedItems);\n    console.log('onContextMenuClick - action : ', data.action);\n  };\n\n  var changePage = function changePage(i, size) {\n    setCurrentPage(i);\n    setSelectedPageSize(size);\n  };\n\n  var onchangePagesize = function onchangePagesize(size) {\n    setCurrentPage(1);\n    setSelectedPageSize(size);\n  };\n\n  var importOrders = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var data, config, _iterator, _step, pair, res;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!importFile) {\n                _context3.next = 22;\n                break;\n              }\n\n              // Update the formData object\n              data = new FormData();\n              data.append('importFile', importFile);\n              config = {\n                headers: {\n                  'content-type': 'multipart/form-data'\n                }\n              }; // Details of the uploaded file\n\n              _iterator = _createForOfIteratorHelper(data.entries());\n\n              try {\n                for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                  pair = _step.value;\n                  console.log(pair[0], ' : ', pair[1], \"-------------pair-----------------------\");\n                } // Request made to the backend api\n                // Send formData object \n\n              } catch (err) {\n                _iterator.e(err);\n              } finally {\n                _iterator.f();\n              }\n\n              _context3.prev = 6;\n              setImporting(true);\n              _context3.next = 10;\n              return axios.post('/api/orders/import', data, config);\n\n            case 10:\n              res = _context3.sent;\n\n              if (res.status === 201) {\n                setImporting(false);\n                setchange(!change);\n                setImportModal(false);\n                NotificationManager.success(res.data.success, 'Success', 3000, null, null, '');\n              } else {\n                setImporting(false);\n                NotificationManager.error(res.data.error, 'Error', 3000, null, null, '');\n              }\n\n              console.log(res);\n              _context3.next = 20;\n              break;\n\n            case 15:\n              _context3.prev = 15;\n              _context3.t0 = _context3[\"catch\"](6);\n              console.log(_context3.t0);\n              setImporting(false);\n              NotificationManager.error(\"Something Wrong With CSV\", 'Error', 3000, null, null, '');\n\n            case 20:\n              _context3.next = 23;\n              break;\n\n            case 22:\n              NotificationManager.error(\"Select File to Import...\", 'Error', 3000, null, null, '');\n\n            case 23:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[6, 15]]);\n    }));\n\n    return function importOrders() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var onContextMenu = function onContextMenu(e, data) {\n    var clickedCategoryId = data.data;\n\n    if (!selectedItems.includes(clickedCategoryId)) {\n      setSelectedItems([clickedCategoryId]);\n    }\n\n    return true;\n  };\n\n  useMousetrap(['ctrl+a', 'command+a'], function () {\n    handleChangeSelectAll(false);\n  });\n  useMousetrap(['ctrl+d', 'command+d'], function () {\n    setSelectedItems([]);\n    return false;\n  });\n  var startIndex = (currentPage - 1) * selectedPageSize;\n  var endIndex = currentPage * selectedPageSize;\n  return !isLoaded ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loading\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 5\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"disable-text-selection\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(OrdersPageHeading, {\n    setModalDelete: setModalDelete,\n    heading: \"Orders\",\n    addUrl: \"/app/orders/add-order\",\n    displayMode: displayMode,\n    changeDisplayMode: setDisplayMode,\n    handleChangeSelectAll: handleChangeSelectAll,\n    changeOrderBy: function changeOrderBy(column) {\n      setSelectedOrderOption(orderOptions.find(function (x) {\n        return x.column === column;\n      }));\n    },\n    onchangepagesize: onchangePagesize,\n    changePageSize: setSelectedPageSize,\n    selectedPageSize: selectedPageSize,\n    totalItemCount: totalItemCount,\n    selectedOrderOption: selectedOrderOption,\n    match: match,\n    startIndex: startIndex,\n    endIndex: endIndex,\n    selectedItemsLength: selectedItems ? selectedItems.length : 0,\n    itemsLength: items ? items.length : 0,\n    orderOptions: orderOptions,\n    pageSizes: pageSizes,\n    toggleModal: function toggleModal() {\n      return setModalOpen(!modalOpen);\n    },\n    activate: activate,\n    deactivate: deactivate,\n    setImportFile: setImportFile,\n    importModal: importModal,\n    setImportModal: setImportModal,\n    importOrders: importOrders,\n    importing: importing,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 9\n    }\n  }), items.length == 0 ? '' : /*#__PURE__*/React.createElement(OrdersListHeading, {\n    selectedItemsLength: selectedItems ? selectedItems.length : 0,\n    handleChangeSelectAll: handleChangeSelectAll,\n    itemsLength: items ? items.length : 0,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 11\n    }\n  }), items.length == 0 ? /*#__PURE__*/React.createElement(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 11\n    }\n  }, \"No Records found\") : /*#__PURE__*/React.createElement(OrdersPageListing, {\n    items: items,\n    deleteModal: deleteModal,\n    openModal: openModal,\n    displayMode: displayMode,\n    selectedItems: selectedItems,\n    onCheckItem: onCheckItem,\n    currentPage: currentPage,\n    totalPage: totalPage,\n    onContextMenuClick: onContextMenuClick,\n    onContextMenu: onContextMenu,\n    onChangePage: changePage,\n    setOrderId: setOrderId,\n    pagesize: selectedPageSize,\n    setModalBasic: setModalBasic,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modalBasic,\n    toggle: function toggle() {\n      return setModal(!modalBasic);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"Delete\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 11\n    }\n  }, \"Are you sure you want to delete Order?\"), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: deleteOrder,\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 13\n    }\n  }, \"Confirm\"), ' ', /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    onClick: function onClick() {\n      return setModalBasic(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 13\n    }\n  }, \"Cancel\")))));\n};\n\nexport default ImportBulkOrder;","map":{"version":3,"sources":["/home/browsewire/Desktop/hj/CEI/cei/client/src/views/app/orders/orders/ImportBulkOrder.js"],"names":["React","useState","useEffect","axios","servicePath","useMousetrap","Button","Modal","ModalHeader","ModalBody","ModalFooter","NotificationManager","IntlMessages","OrdersListHeading","OrdersPageListing","OrdersPageHeading","ImportBulkOrder","match","isLoaded","setIsLoaded","displayMode","setDisplayMode","currentPage","setCurrentPage","selectedPageSize","setSelectedPageSize","column","label","selectedOrderOption","setSelectedOrderOption","modalBasic","setModalBasic","modalOpen","setModalOpen","totalItemCount","setTotalItemCount","totalPage","setTotalPage","selectedItems","setSelectedItems","items","setItems","lastChecked","setLastChecked","modal","setModal","change","setchange","modalDelete","setModalDelete","orderId","setOrderId","importFile","setImportFile","importModal","setImportModal","importing","setImporting","styles","profileImg","height","width","borderRadius","deleteModal","e","get","then","data","console","log","orders","count","Math","ceil","getIndex","value","arr","prop","i","length","statusOptions","key","apiUrl","orderOptions","pageSizes","openModal","deleteOrder","post","params","id","res","success","edit","deleteSelectedOrders","onCheckItem","event","target","tagName","parentElement","selectedList","includes","filter","x","push","shiftKey","newItems","start","end","slice","min","max","map","item","Array","from","Set","document","activeElement","blur","handleChangeSelectAll","isToggle","onContextMenuClick","action","changePage","size","onchangePagesize","importOrders","FormData","append","config","headers","entries","pair","status","error","onContextMenu","clickedCategoryId","startIndex","endIndex","find","activate","deactivate"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { servicePath } from '../../../../constants/defaultValues';\nimport useMousetrap from '../../../../hooks/use-mousetrap';\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n} from 'reactstrap';\nimport { NotificationManager } from '../../../../components/common/react-notifications';\nimport IntlMessages from '../../../../helpers/IntlMessages';\nimport OrdersListHeading from './BulkOrdersListHeading';\nimport OrdersPageListing from './BulkOrdersPageListing';\nimport OrdersPageHeading from './BulkOrderPageHeading';\n\nconst ImportBulkOrder = ({ match }) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [displayMode, setDisplayMode] = useState('thumblist');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [selectedPageSize, setSelectedPageSize] = useState(15);\n  const [selectedOrderOption, setSelectedOrderOption] = useState({\n    column: 'title',\n    label: 'Category Name',\n  });\n  const [modalBasic, setModalBasic] = useState(false);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [totalItemCount, setTotalItemCount] = useState(0);\n  const [totalPage, setTotalPage] = useState(1);\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [items, setItems] = useState([]);\n  const [lastChecked, setLastChecked] = useState(null);\n  const [modal, setModal] = useState(false);\n  const [change, setchange] = useState(false);\n  const [modalDelete, setModalDelete] = useState(false);\n  const [orderId, setOrderId] = useState('');\n  const [importFile, setImportFile] = useState(null);\n  const [importModal, setImportModal] = useState(false);\n  const [importing, setImporting] = useState(false);\n\n  const styles = {\n    profileImg: {\n      height: '3rem',\n      width: '3rem',\n      borderRadius: '50%',\n    },\n  };\n\n  const deleteModal = (e) => {\n    setOrderId(e);\n    setModalBasic(true);\n  };\n\n\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [selectedPageSize, selectedOrderOption]);\n\n  useEffect(() => {\n    axios.get(`/api/orders/${currentPage}`).then(({ data }) => {\n      console.log(data);\n      setItems(data.orders);\n      setTotalItemCount(data.count);\n      setTotalPage(Math.ceil(data.count / selectedPageSize));\n      setSelectedItems([]);\n      setIsLoaded(true);\n    });\n  }, [change]);\n\n  const getIndex = (value, arr, prop) => {\n    for (let i = 0; i < arr.length; i += 1) {\n      if (arr[i][prop] === value) {\n        return i;\n      }\n    }\n    return -1;\n  };\n  const statusOptions = [\n    { label: 'Active', value: 'Active', key: 0 },\n    { label: 'Inactive', value: 'Inactive', key: 1 },\n  ];\n  const apiUrl = `${servicePath}/cakes/paging`;\n\n  const orderOptions = [\n    { column: 'category', label: 'Category Name' },\n    { column: 'status', label: 'Status' },\n  ];\n  // const pageSizes = [4, 8, 12, 20];\n  const pageSizes = [15, 50, 100, 150, 200];\n\n  // GET THE Category DETAILS AND OPEN THE EDIT MODAL\n  const openModal = (e) => {};\n\n  const deleteOrder = async (e) => {\n    axios\n      .post('/api/orders/delete', null, { params: { id: orderId } })\n      .then((res) => {\n        setchange(!change);\n        setModalBasic(false);\n        NotificationManager.success(\n          res.data.success,\n          'Success',\n          3000,\n          null,\n          null,\n          ''\n        );\n      });\n  };\n\n  \n  \n  // EDIT CATEGORY\n  const edit = () => {};\n  // DELETE MULTIPLE Orders\n  const deleteSelectedOrders = async (e) => {\n    axios\n      .post('/api/orders/delete', null, { params: { id: selectedItems } })\n      .then((res) => {\n        setchange(!change);\n        setModalDelete(false);\n        NotificationManager.success(\n          res.data.success,\n          'Success',\n          3000,\n          null,\n          null,\n          ''\n        );\n      });\n  };\n\n  const onCheckItem = (event, id) => {\n    if (\n      event.target.tagName === 'A' ||\n      (event.target.parentElement && event.target.parentElement.tagName === 'A')\n    ) {\n      return true;\n    }\n    if (lastChecked === null) {\n      setLastChecked(id);\n    }\n\n    let selectedList = [...selectedItems];\n    if (selectedList.includes(id)) {\n      selectedList = selectedList.filter((x) => x !== id);\n    } else {\n      selectedList.push(id);\n    }\n    setSelectedItems(selectedList);\n\n    if (event.shiftKey) {\n      let newItems = [...items];\n      const start = getIndex(id, newItems, 'id');\n      const end = getIndex(lastChecked, newItems, 'id');\n      newItems = newItems.slice(Math.min(start, end), Math.max(start, end) + 1);\n      selectedItems.push(\n        ...newItems.map((item) => {\n          return item.id;\n        })\n      );\n      selectedList = Array.from(new Set(selectedItems));\n      setSelectedItems(selectedList);\n    }\n    document.activeElement.blur();\n    return false;\n  };\n  const handleChangeSelectAll = (isToggle) => {\n    if (selectedItems.length >= items.length) {\n      if (isToggle) {\n        setSelectedItems([]);\n      }\n    } else {\n      setSelectedItems(items.map((x) => x.id));\n    }\n    document.activeElement.blur();\n    return false;\n  };\n\n  const onContextMenuClick = (e, data) => {\n    // params : (e,data,target)\n    console.log('onContextMenuClick - selected items', selectedItems);\n    console.log('onContextMenuClick - action : ', data.action);\n  };\n\n  const changePage = (i, size) => {\n    setCurrentPage(i);\n    setSelectedPageSize(size);\n  };\n  const onchangePagesize = (size) => {\n    setCurrentPage(1);\n    setSelectedPageSize(size);\n  };\n\n  const importOrders = async () => {\n    if (importFile) {\n      // Update the formData object\n      const data = new FormData();\n      data.append('importFile', importFile);\n      const config = {\n          headers: {\n            'content-type': 'multipart/form-data',\n          },\n        };\n        // Details of the uploaded file\n      for (let pair of data.entries()) {\n        console.log(pair[0], ' : ', pair[1], \"-------------pair-----------------------\");\n      }\n      // Request made to the backend api\n      // Send formData object \n      try {\n        setImporting(true);\n        const res = await axios.post(\n          '/api/orders/import',\n          data,\n          config\n        );\n        if (res.status === 201) {\n          setImporting(false);\n          setchange(!change);\n          setImportModal(false);\n          NotificationManager.success(\n            res.data.success,\n            'Success',\n            3000,\n            null,\n            null,\n            ''\n          );\n        } else {\n          setImporting(false);\n          NotificationManager.error(\n            res.data.error,\n            'Error',\n            3000,\n            null,\n            null,\n            ''\n          );\n        }\n        console.log(res);\n      } catch (err) {\n        console.log(err);\n        setImporting(false);\n        NotificationManager.error(\n          `Something Wrong With CSV`,\n          'Error',\n          3000,\n          null,\n          null,\n          ''\n        );\n      }\n    } else {\n      NotificationManager.error(\n        `Select File to Import...`,\n        'Error',\n        3000,\n        null,\n        null,\n        ''\n      );\n    }\n  };\n\n  const onContextMenu = (e, data) => {\n    const clickedCategoryId = data.data;\n    if (!selectedItems.includes(clickedCategoryId)) {\n      setSelectedItems([clickedCategoryId]);\n    }\n\n    return true;\n  };\n\n  useMousetrap(['ctrl+a', 'command+a'], () => {\n    handleChangeSelectAll(false);\n  });\n\n  useMousetrap(['ctrl+d', 'command+d'], () => {\n    setSelectedItems([]);\n    return false;\n  });\n\n  const startIndex = (currentPage - 1) * selectedPageSize;\n  const endIndex = currentPage * selectedPageSize;\n\n  return !isLoaded ? (\n    <div className=\"loading\" />\n  ) : (\n    <>\n      <div className=\"disable-text-selection\">\n        <OrdersPageHeading\n          setModalDelete={setModalDelete}\n          heading=\"Orders\"\n          addUrl=\"/app/orders/add-order\"\n          displayMode={displayMode}\n          changeDisplayMode={setDisplayMode}\n          handleChangeSelectAll={handleChangeSelectAll}\n          changeOrderBy={(column) => {\n            setSelectedOrderOption(\n              orderOptions.find((x) => x.column === column)\n            );\n          }}\n          onchangepagesize={onchangePagesize}\n          changePageSize={setSelectedPageSize}\n          selectedPageSize={selectedPageSize}\n          totalItemCount={totalItemCount}\n          selectedOrderOption={selectedOrderOption}\n          match={match}\n          startIndex={startIndex}\n          endIndex={endIndex}\n          selectedItemsLength={selectedItems ? selectedItems.length : 0}\n          itemsLength={items ? items.length : 0}\n          orderOptions={orderOptions}\n          pageSizes={pageSizes}\n          toggleModal={() => setModalOpen(!modalOpen)}\n          activate={activate}\n          deactivate={deactivate}\n          setImportFile={setImportFile}\n          importModal={importModal}\n          setImportModal={setImportModal}\n          importOrders={importOrders}\n          importing={importing}\n        />\n        {items.length == 0 ? (\n          ''\n        ) : (\n          <OrdersListHeading\n            selectedItemsLength={selectedItems ? selectedItems.length : 0}\n            handleChangeSelectAll={handleChangeSelectAll}\n            itemsLength={items ? items.length : 0}\n          />\n        )}\n\n        {items.length == 0 ? (\n          <h3>No Records found</h3>\n        ) : (\n          <OrdersPageListing\n            items={items}\n            deleteModal={deleteModal}\n            openModal={openModal}\n            displayMode={displayMode}\n            selectedItems={selectedItems}\n            onCheckItem={onCheckItem}\n            currentPage={currentPage}\n            totalPage={totalPage}\n            onContextMenuClick={onContextMenuClick}\n            onContextMenu={onContextMenu}\n            onChangePage={changePage}\n            setOrderId={setOrderId}\n            pagesize={selectedPageSize}\n            setModalBasic={setModalBasic}\n          />\n        )}\n\n        {/* Edit Modal */}\n      \n        {/* Delete Modal */}\n        <Modal isOpen={modalBasic} toggle={() => setModal(!modalBasic)}>\n          <ModalHeader>\n            <IntlMessages id=\"Delete\" />\n          </ModalHeader>\n          <ModalBody>Are you sure you want to delete Order?</ModalBody>\n          <ModalFooter>\n            <Button onClick={deleteOrder} color=\"primary\">\n              Confirm\n            </Button>{' '}\n            <Button color=\"secondary\" onClick={() => setModalBasic(false)}>\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    </>\n  );\n};\n\nexport default ImportBulkOrder;\n"]},"metadata":{},"sourceType":"module"}