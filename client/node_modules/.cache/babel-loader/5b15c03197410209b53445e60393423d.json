{"ast":null,"code":"import _createForOfIteratorHelper from \"/home/browsewire/Desktop/hj/CEI/cei/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _regeneratorRuntime from \"/home/browsewire/Desktop/hj/CEI/cei/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/browsewire/Desktop/hj/CEI/cei/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/browsewire/Desktop/hj/CEI/cei/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/browsewire/Desktop/hj/CEI/cei/client/src/views/app/orders/orders/ImportBulkOrder.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport useMousetrap from '../../../../hooks/use-mousetrap';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { NotificationManager } from '../../../../components/common/react-notifications';\nimport IntlMessages from '../../../../helpers/IntlMessages';\nimport OrdersListHeading from './BulkOrdersListHeading';\nimport OrdersPageListing from './BulkOrdersPageListing';\nimport OrdersPageHeading from './BulkOrderPageHeading';\n\nvar ImportBulkOrder = function ImportBulkOrder(_ref) {\n  var match = _ref.match;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoaded = _useState2[0],\n      setIsLoaded = _useState2[1];\n\n  var _useState3 = useState('thumblist'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      displayMode = _useState4[0],\n      setDisplayMode = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      modalBasic = _useState6[0],\n      setModalBasic = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      modalOpen = _useState8[0],\n      setModalOpen = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      selectedItems = _useState10[0],\n      setSelectedItems = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      items = _useState12[0],\n      setItems = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      change = _useState14[0],\n      setchange = _useState14[1];\n\n  var _useState15 = useState(''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      fileName = _useState16[0],\n      setFileName = _useState16[1];\n\n  var _useState17 = useState(null),\n      _useState18 = _slicedToArray(_useState17, 2),\n      importFile = _useState18[0],\n      setImportFile = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      importModal = _useState20[0],\n      setImportModal = _useState20[1];\n\n  var _useState21 = useState(false),\n      _useState22 = _slicedToArray(_useState21, 2),\n      importing = _useState22[0],\n      setImporting = _useState22[1];\n\n  var deleteModal = function deleteModal(e) {\n    setFileName(e);\n    setModalBasic(true);\n  };\n\n  useEffect(function () {\n    axios.get(\"/ordersync/filename\").then(function (_ref2) {\n      var data = _ref2.data;\n      console.log(data.files);\n      setItems(data.files);\n      setIsLoaded(true);\n    });\n  }, [change]);\n\n  var deleteOrder = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(fileName, \"--------------------------------called \");\n              axios.post('/ordersync/delete', null, {\n                params: {\n                  name: fileName\n                }\n              }).then(function (res) {\n                setchange(!change);\n                setModalBasic(false);\n                NotificationManager.success(res.data.success, 'Success', 3000, null, null, '');\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function deleteOrder(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var importOrder = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!importFile) {\n                _context2.next = 15;\n                break;\n              }\n\n              _context2.prev = 1;\n              setImporting(true);\n              _context2.next = 5;\n              return axios.post('/ordersync/import');\n\n            case 5:\n              res = _context2.sent;\n\n              if (res.status === 201) {\n                setImporting(false);\n                setchange(!change);\n                setImportModal(false);\n                NotificationManager.success(res.data.success, 'Success', 3000, null, null, '');\n              } else {\n                setImporting(false);\n                NotificationManager.error(res.data.error, 'Error', 3000, null, null, '');\n              }\n\n              console.log(res);\n              _context2.next = 15;\n              break;\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.log(_context2.t0);\n              setImporting(false);\n              NotificationManager.error(\"Something Wrong With CSV\", 'Error', 3000, null, null, '');\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 10]]);\n    }));\n\n    return function importOrder() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var importOrders = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var data, config, _iterator, _step, pair, res;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!importFile) {\n                _context3.next = 22;\n                break;\n              }\n\n              // Update the formData object\n              data = new FormData();\n              data.append('importFile', importFile);\n              config = {\n                headers: {\n                  'content-type': 'multipart/form-data'\n                }\n              }; // Details of the uploaded file\n\n              _iterator = _createForOfIteratorHelper(data.entries());\n\n              try {\n                for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                  pair = _step.value;\n                  console.log(pair[0], ' : ', pair[1], \"-------------pair-----------------------\");\n                } // Request made to the backend api\n                // Send formData object \n\n              } catch (err) {\n                _iterator.e(err);\n              } finally {\n                _iterator.f();\n              }\n\n              _context3.prev = 6;\n              setImporting(true);\n              _context3.next = 10;\n              return axios.post('/ordersync/import', data, config);\n\n            case 10:\n              res = _context3.sent;\n\n              if (res.status === 201) {\n                setImporting(false);\n                setchange(!change);\n                setImportModal(false);\n                NotificationManager.success(res.data.success, 'Success', 3000, null, null, '');\n              } else {\n                setImporting(false);\n                NotificationManager.error(res.data.error, 'Error', 3000, null, null, '');\n              }\n\n              console.log(res);\n              _context3.next = 20;\n              break;\n\n            case 15:\n              _context3.prev = 15;\n              _context3.t0 = _context3[\"catch\"](6);\n              console.log(_context3.t0);\n              setImporting(false);\n              NotificationManager.error(\"Something Wrong With CSV\", 'Error', 3000, null, null, '');\n\n            case 20:\n              _context3.next = 23;\n              break;\n\n            case 22:\n              NotificationManager.error(\"Select File to Import...\", 'Error', 3000, null, null, '');\n\n            case 23:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[6, 15]]);\n    }));\n\n    return function importOrders() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var onContextMenu = function onContextMenu(e, data) {\n    var clickedCategoryId = data.data;\n\n    if (!selectedItems.includes(clickedCategoryId)) {\n      setSelectedItems([clickedCategoryId]);\n    }\n\n    return true;\n  };\n\n  useMousetrap(['ctrl+d', 'command+d'], function () {\n    setSelectedItems([]);\n    return false;\n  });\n  return !isLoaded ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loading\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 5\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"disable-text-selection\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(OrdersPageHeading, {\n    heading: \"Orders\",\n    addUrl: \"/app/orders/add-order\",\n    displayMode: displayMode,\n    changeDisplayMode: setDisplayMode,\n    match: match,\n    selectedItemsLength: selectedItems ? selectedItems.length : 0,\n    itemsLength: items ? items.length : 0,\n    toggleModal: function toggleModal() {\n      return setModalOpen(!modalOpen);\n    },\n    setImportFile: setImportFile,\n    importModal: importModal,\n    setImportModal: setImportModal,\n    importOrders: importOrders,\n    importing: importing,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }\n  }), items.length == 0 ? '' : /*#__PURE__*/React.createElement(OrdersListHeading, {\n    selectedItemsLength: selectedItems ? selectedItems.length : 0,\n    itemsLength: items ? items.length : 0,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }\n  }), items.length == 0 ? /*#__PURE__*/React.createElement(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 11\n    }\n  }, \"No Records found\") : /*#__PURE__*/React.createElement(OrdersPageListing, {\n    items: items,\n    itemsLength: items ? items.length : 0,\n    deleteModal: deleteModal,\n    displayMode: displayMode,\n    selectedItems: selectedItems,\n    onContextMenu: onContextMenu,\n    setFileName: setFileName,\n    setModalBasic: setModalBasic,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modalBasic,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"Delete\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 11\n    }\n  }, \"Are you sure you want to Delete \".concat(fileName)), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: deleteOrder,\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }\n  }, \"Confirm\"), ' ', /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    onClick: function onClick() {\n      return setModalBasic(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }\n  }, \"Cancel\"))), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modalDelete,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"Delete\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 11\n    }\n  }, \"Are you sure you want to delete selected items?\"), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: deleteSelectedOrders,\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }\n  }, \"Confirm\"), ' ', /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    onClick: function onClick() {\n      return setModalDelete(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }\n  }, \"Cancel\")))));\n};\n\nexport default ImportBulkOrder;","map":{"version":3,"sources":["/home/browsewire/Desktop/hj/CEI/cei/client/src/views/app/orders/orders/ImportBulkOrder.js"],"names":["React","useState","useEffect","axios","useMousetrap","Button","Modal","ModalHeader","ModalBody","ModalFooter","NotificationManager","IntlMessages","OrdersListHeading","OrdersPageListing","OrdersPageHeading","ImportBulkOrder","match","isLoaded","setIsLoaded","displayMode","setDisplayMode","modalBasic","setModalBasic","modalOpen","setModalOpen","selectedItems","setSelectedItems","items","setItems","change","setchange","fileName","setFileName","importFile","setImportFile","importModal","setImportModal","importing","setImporting","deleteModal","e","get","then","data","console","log","files","deleteOrder","post","params","name","res","success","importOrder","status","error","importOrders","FormData","append","config","headers","entries","pair","onContextMenu","clickedCategoryId","includes","length","modalDelete","deleteSelectedOrders","setModalDelete"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport useMousetrap from '../../../../hooks/use-mousetrap';\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n} from 'reactstrap';\nimport { NotificationManager } from '../../../../components/common/react-notifications';\nimport IntlMessages from '../../../../helpers/IntlMessages';\nimport OrdersListHeading from './BulkOrdersListHeading';\nimport OrdersPageListing from './BulkOrdersPageListing';\nimport OrdersPageHeading from './BulkOrderPageHeading';\n\nconst ImportBulkOrder = ({ match }) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [displayMode, setDisplayMode] = useState('thumblist');\n  const [modalBasic, setModalBasic] = useState(false);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [items, setItems] = useState([]);\n\n\n  const [change, setchange] = useState(false);\n\n  const [fileName, setFileName] = useState('');\n  const [importFile, setImportFile] = useState(null);\n  const [importModal, setImportModal] = useState(false);\n  const [importing, setImporting] = useState(false);\n\n\n\n  const deleteModal = (e) => {\n    setFileName(e);\n    setModalBasic(true);\n  };\n\n  useEffect(() => {\n    axios.get(`/ordersync/filename`).then(({ data }) => {\n      console.log(data.files);\n      setItems(data.files);\n      setIsLoaded(true);\n    });\n  }, [change]);\n\n  const deleteOrder = async (e) => {\n      console.log(fileName, \"--------------------------------called \")\n    axios\n      .post('/ordersync/delete', null, { params: { name: fileName } })\n      .then((res) => {\n        setchange(!change);\n        setModalBasic(false);\n        NotificationManager.success(\n          res.data.success,\n          'Success',\n          3000,\n          null,\n          null,\n          ''\n        );\n      });\n  };\n  const importOrder = async () => {\n    if (importFile) {\n      // Update the formData object\n      \n      try {\n        setImporting(true);\n        const res = await axios.post(\n          '/ordersync/import'\n        );\n        if (res.status === 201) {\n          setImporting(false);\n          setchange(!change);\n          setImportModal(false);\n          NotificationManager.success(\n            res.data.success,\n            'Success',\n            3000,\n            null,\n            null,\n            ''\n          );\n        } else {\n          setImporting(false);\n          NotificationManager.error(\n            res.data.error,\n            'Error',\n            3000,\n            null,\n            null,\n            ''\n          );\n        }\n        console.log(res);\n      } catch (err) {\n        console.log(err);\n        setImporting(false);\n        NotificationManager.error(\n          `Something Wrong With CSV`,\n          'Error',\n          3000,\n          null,\n          null,\n          ''\n        );\n      }\n    } \n  };\n\n  const importOrders = async () => {\n    if (importFile) {\n      // Update the formData object\n      const data = new FormData();\n      data.append('importFile', importFile);\n      const config = {\n          headers: {\n            'content-type': 'multipart/form-data',\n          },\n        };\n        // Details of the uploaded file\n      for (let pair of data.entries()) {\n        console.log(pair[0], ' : ', pair[1], \"-------------pair-----------------------\");\n      }\n      // Request made to the backend api\n      // Send formData object \n      try {\n        setImporting(true);\n        const res = await axios.post(\n          '/ordersync/import',\n          data,\n          config\n        );\n        if (res.status === 201) {\n          setImporting(false);\n          setchange(!change);\n          setImportModal(false);\n          NotificationManager.success(\n            res.data.success,\n            'Success',\n            3000,\n            null,\n            null,\n            ''\n          );\n        } else {\n          setImporting(false);\n          NotificationManager.error(\n            res.data.error,\n            'Error',\n            3000,\n            null,\n            null,\n            ''\n          );\n        }\n        console.log(res);\n      } catch (err) {\n        console.log(err);\n        setImporting(false);\n        NotificationManager.error(\n          `Something Wrong With CSV`,\n          'Error',\n          3000,\n          null,\n          null,\n          ''\n        );\n      }\n    } else {\n      NotificationManager.error(\n        `Select File to Import...`,\n        'Error',\n        3000,\n        null,\n        null,\n        ''\n      );\n    }\n  };\n\n\n  const onContextMenu = (e, data) => {\n    const clickedCategoryId = data.data;\n    if (!selectedItems.includes(clickedCategoryId)) {\n      setSelectedItems([clickedCategoryId]);\n    }\n\n    return true;\n  };\n\n  useMousetrap(['ctrl+d', 'command+d'], () => {\n    setSelectedItems([]);\n    return false;\n  });\n\n  return !isLoaded ? (\n    <div className=\"loading\" />\n  ) : (\n    <>\n      <div className=\"disable-text-selection\">\n        <OrdersPageHeading\n          heading=\"Orders\"\n          addUrl=\"/app/orders/add-order\"\n          displayMode={displayMode}\n          changeDisplayMode={setDisplayMode}\n          match={match}\n          selectedItemsLength={selectedItems ? selectedItems.length : 0}\n          itemsLength={items ? items.length : 0}\n          toggleModal={() => setModalOpen(!modalOpen)}\n          setImportFile={setImportFile}\n          importModal={importModal}\n          setImportModal={setImportModal}\n          importOrders={importOrders}\n          importing={importing}\n        />\n        {items.length == 0 ? (\n          ''\n        ) : (\n          <OrdersListHeading\n            selectedItemsLength={selectedItems ? selectedItems.length : 0}\n            itemsLength={items ? items.length : 0}\n          />\n        )}\n\n        {items.length == 0 ? (\n          <h3>No Records found</h3>\n        ) : (\n          <OrdersPageListing\n            items={items}\n            itemsLength={items ? items.length : 0}\n            deleteModal={deleteModal}\n            displayMode={displayMode}\n            selectedItems={selectedItems}\n            onContextMenu={onContextMenu}\n            setFileName={setFileName}\n            setModalBasic={setModalBasic}\n          />\n        )}      \n        {/* Delete Modal */}\n        <Modal isOpen={modalBasic}>\n          <ModalHeader>\n            <IntlMessages id=\"Delete\" />\n          </ModalHeader>\n          <ModalBody>{`Are you sure you want to Delete ${fileName}`}</ModalBody>\n          <ModalFooter>\n            <Button onClick={deleteOrder} color=\"primary\">\n              Confirm\n            </Button>{' '}\n            <Button color=\"secondary\" onClick={() => setModalBasic(false)}>\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Modal>\n                {/* Delete Modal */}\n        <Modal isOpen={modalDelete}>\n          <ModalHeader>\n            <IntlMessages id=\"Delete\" />\n          </ModalHeader>\n          <ModalBody>Are you sure you want to delete selected items?</ModalBody>\n          <ModalFooter>\n            <Button onClick={deleteSelectedOrders} color=\"primary\">\n              Confirm\n            </Button>{' '}\n            <Button color=\"secondary\" onClick={() => setModalDelete(false)}>\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    </>\n  );\n};\n\nexport default ImportBulkOrder;\n"]},"metadata":{},"sourceType":"module"}