{"ast":null,"code":"import _toConsumableArray from \"/home/browsewire/Desktop/CEIorder/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/browsewire/Desktop/CEIorder/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/browsewire/Desktop/CEIorder/client/src/containers/wizard/Validation.js\";\n\n/* eslint-disable no-param-reassign */\nimport React, { createRef, useState } from 'react';\nimport { Card, CardBody, FormGroup, Label, Spinner } from 'reactstrap';\nimport { Wizard, Steps, Step } from 'react-albus';\nimport { injectIntl } from 'react-intl';\nimport { Formik, Form, Field } from 'formik';\nimport IntlMessages from '../../helpers/IntlMessages';\nimport BottomNavigation from '../../components/wizard/BottomNavigation';\nimport TopNavigation from '../../components/wizard/TopNavigation';\n\nvar validateEmail = function validateEmail(value) {\n  var error;\n\n  if (!value) {\n    error = 'Please enter your email address';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n    error = 'Invalid email address';\n  }\n\n  return error;\n};\n\nvar validateName = function validateName(value) {\n  var error;\n\n  if (!value) {\n    error = 'Please enter your name';\n  } else if (value.length < 2) {\n    error = 'Value must be longer than 2 characters';\n  }\n\n  return error;\n};\n\nvar validatePassword = function validatePassword(value) {\n  var error;\n\n  if (!value) {\n    error = 'Please enter your password';\n  } else if (value.length < 6) {\n    error = 'Password must be longer than 6 characters';\n  }\n\n  return error;\n};\n\nvar Validation = function Validation(_ref) {\n  var intl = _ref.intl;\n  var forms = [createRef(null), createRef(null), createRef(null)];\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      bottomNavHidden = _useState2[0],\n      setBottomNavHidden = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState([{\n    valid: false,\n    name: 'name',\n    value: ''\n  }, {\n    valid: false,\n    name: 'email',\n    value: ''\n  }, {\n    valid: false,\n    name: 'password',\n    value: ''\n  }]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      fields = _useState6[0],\n      setFields = _useState6[1];\n\n  var asyncLoading = function asyncLoading() {\n    setLoading(true);\n    setTimeout(function () {\n      setLoading(false);\n    }, 3000);\n  };\n\n  var onClickNext = function onClickNext(goToNext, steps, step) {\n    if (steps.length - 1 <= steps.indexOf(step)) {\n      return;\n    }\n\n    var formIndex = steps.indexOf(step);\n    var form = forms[formIndex].current;\n    var name = fields[formIndex].name;\n    form.submitForm().then(function () {\n      var newFields = _toConsumableArray(fields);\n\n      newFields[formIndex].value = form.values[name];\n      newFields[formIndex].valid = !form.errors[name];\n      setFields(newFields);\n\n      if (!form.errors[name] && form.touched[name]) {\n        goToNext();\n        step.isDone = true;\n\n        if (steps.length - 2 <= steps.indexOf(step)) {\n          setBottomNavHidden(true);\n          asyncLoading();\n        }\n      }\n    });\n  };\n\n  var onClickPrev = function onClickPrev(goToPrev, steps, step) {\n    if (steps.indexOf(step) <= 0) {\n      return;\n    }\n\n    goToPrev();\n  };\n\n  var messages = intl.messages;\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    className: \"wizard wizard-default\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Wizard, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TopNavigation, {\n    className: \"justify-content-center\",\n    disableNav: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Steps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Step, {\n    id: \"step1\",\n    name: messages['wizard.step-name-1'],\n    desc: messages['wizard.step-desc-1'],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wizard-basic-step\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    innerRef: forms[0],\n    initialValues: {\n      name: fields[0].value\n    },\n    onSubmit: function onSubmit() {},\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, function (_ref2) {\n    var errors = _ref2.errors,\n        touched = _ref2.touched;\n    return /*#__PURE__*/React.createElement(Form, {\n      className: \"av-tooltip tooltip-label-right\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 25\n      }\n    }, messages['forms.name']), /*#__PURE__*/React.createElement(Field, {\n      className: \"form-control\",\n      name: \"name\",\n      validate: validateName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }\n    }), errors.name && touched.name && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback d-block\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 27\n      }\n    }, errors.name)));\n  }))), /*#__PURE__*/React.createElement(Step, {\n    id: \"step2\",\n    name: messages['wizard.step-name-2'],\n    desc: messages['wizard.step-desc-2'],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wizard-basic-step\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    innerRef: forms[1],\n    initialValues: {\n      email: fields[1].value\n    },\n    onSubmit: function onSubmit() {},\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }, function (_ref3) {\n    var errors = _ref3.errors,\n        touched = _ref3.touched;\n    return /*#__PURE__*/React.createElement(Form, {\n      className: \"av-tooltip tooltip-label-right\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 25\n      }\n    }, messages['forms.email']), /*#__PURE__*/React.createElement(Field, {\n      className: \"form-control\",\n      name: \"email\",\n      validate: validateEmail,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 25\n      }\n    }), errors.email && touched.email && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback d-block\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 27\n      }\n    }, errors.email)));\n  }))), /*#__PURE__*/React.createElement(Step, {\n    id: \"step3\",\n    name: messages['wizard.step-name-3'],\n    desc: messages['wizard.step-desc-3'],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wizard-basic-step\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    innerRef: forms[2],\n    initialValues: {\n      password: fields[2].value\n    },\n    onSubmit: function onSubmit() {},\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  }, function (_ref4) {\n    var errors = _ref4.errors,\n        touched = _ref4.touched;\n    return /*#__PURE__*/React.createElement(Form, {\n      className: \"av-tooltip tooltip-label-right error-l-75\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 25\n      }\n    }, messages['forms.password']), /*#__PURE__*/React.createElement(Field, {\n      className: \"form-control\",\n      name: \"password\",\n      type: \"password\",\n      validate: validatePassword,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 25\n      }\n    }), errors.password && touched.password && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback d-block\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 27\n      }\n    }, errors.password)));\n  }))), /*#__PURE__*/React.createElement(Step, {\n    id: \"step4\",\n    hideTopNav: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wizard-basic-step text-center pt-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 15\n    }\n  }, loading ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    color: \"primary\",\n    className: \"mb-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"wizard.async\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 23\n    }\n  }))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"mb-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"wizard.content-thanks\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"wizard.registered\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 23\n    }\n  })))))), /*#__PURE__*/React.createElement(BottomNavigation, {\n    onClickNext: onClickNext,\n    onClickPrev: onClickPrev,\n    className: \"justify-content-center \".concat(bottomNavHidden && 'invisible'),\n    prevLabel: messages['wizard.prev'],\n    nextLabel: messages['wizard.next'],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default injectIntl(Validation);","map":{"version":3,"sources":["/home/browsewire/Desktop/CEIorder/client/src/containers/wizard/Validation.js"],"names":["React","createRef","useState","Card","CardBody","FormGroup","Label","Spinner","Wizard","Steps","Step","injectIntl","Formik","Form","Field","IntlMessages","BottomNavigation","TopNavigation","validateEmail","value","error","test","validateName","length","validatePassword","Validation","intl","forms","bottomNavHidden","setBottomNavHidden","loading","setLoading","valid","name","fields","setFields","asyncLoading","setTimeout","onClickNext","goToNext","steps","step","indexOf","formIndex","form","current","submitForm","then","newFields","values","errors","touched","isDone","onClickPrev","goToPrev","messages","email","password"],"mappings":"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","sourcesContent":["/* eslint-disable no-param-reassign */\nimport React, { createRef, useState } from 'react';\nimport { Card, CardBody, FormGroup, Label, Spinner } from 'reactstrap';\nimport { Wizard, Steps, Step } from 'react-albus';\nimport { injectIntl } from 'react-intl';\nimport { Formik, Form, Field } from 'formik';\nimport IntlMessages from '../../helpers/IntlMessages';\nimport BottomNavigation from '../../components/wizard/BottomNavigation';\nimport TopNavigation from '../../components/wizard/TopNavigation';\n\nconst validateEmail = (value) => {\n  let error;\n  if (!value) {\n    error = 'Please enter your email address';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n    error = 'Invalid email address';\n  }\n  return error;\n};\n\nconst validateName = (value) => {\n  let error;\n  if (!value) {\n    error = 'Please enter your name';\n  } else if (value.length < 2) {\n    error = 'Value must be longer than 2 characters';\n  }\n  return error;\n};\n\nconst validatePassword = (value) => {\n  let error;\n  if (!value) {\n    error = 'Please enter your password';\n  } else if (value.length < 6) {\n    error = 'Password must be longer than 6 characters';\n  }\n  return error;\n};\n\nconst Validation = ({ intl }) => {\n  const forms = [createRef(null), createRef(null), createRef(null)];\n  const [bottomNavHidden, setBottomNavHidden] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [fields, setFields] = useState([\n    {\n      valid: false,\n      name: 'name',\n      value: '',\n    },\n    {\n      valid: false,\n      name: 'email',\n      value: '',\n    },\n    {\n      valid: false,\n      name: 'password',\n      value: '',\n    },\n  ]);\n\n  const asyncLoading = () => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 3000);\n  };\n\n  const onClickNext = (goToNext, steps, step) => {\n    if (steps.length - 1 <= steps.indexOf(step)) {\n      return;\n    }\n    const formIndex = steps.indexOf(step);\n    const form = forms[formIndex].current;\n    const { name } = fields[formIndex];\n    form.submitForm().then(() => {\n      const newFields = [...fields];\n\n      newFields[formIndex].value = form.values[name];\n      newFields[formIndex].valid = !form.errors[name];\n      setFields(newFields);\n\n      if (!form.errors[name] && form.touched[name]) {\n        goToNext();\n        step.isDone = true;\n        if (steps.length - 2 <= steps.indexOf(step)) {\n          setBottomNavHidden(true);\n          asyncLoading();\n        }\n      }\n    });\n  };\n\n  const onClickPrev = (goToPrev, steps, step) => {\n    if (steps.indexOf(step) <= 0) {\n      return;\n    }\n    goToPrev();\n  };\n\n  const { messages } = intl;\n  return (\n    <Card>\n      <CardBody className=\"wizard wizard-default\">\n        <Wizard>\n          <TopNavigation className=\"justify-content-center\" disableNav />\n          <Steps>\n            <Step\n              id=\"step1\"\n              name={messages['wizard.step-name-1']}\n              desc={messages['wizard.step-desc-1']}\n            >\n              <div className=\"wizard-basic-step\">\n                <Formik\n                  innerRef={forms[0]}\n                  initialValues={{\n                    name: fields[0].value,\n                  }}\n                  onSubmit={() => {}}\n                >\n                  {({ errors, touched }) => (\n                    <Form className=\"av-tooltip tooltip-label-right\">\n                      <FormGroup>\n                        <Label>{messages['forms.name']}</Label>\n                        <Field\n                          className=\"form-control\"\n                          name=\"name\"\n                          validate={validateName}\n                        />\n                        {errors.name && touched.name && (\n                          <div className=\"invalid-feedback d-block\">\n                            {errors.name}\n                          </div>\n                        )}\n                      </FormGroup>\n                    </Form>\n                  )}\n                </Formik>\n              </div>\n            </Step>\n            <Step\n              id=\"step2\"\n              name={messages['wizard.step-name-2']}\n              desc={messages['wizard.step-desc-2']}\n            >\n              <div className=\"wizard-basic-step\">\n                <Formik\n                  innerRef={forms[1]}\n                  initialValues={{\n                    email: fields[1].value,\n                  }}\n                  onSubmit={() => {}}\n                >\n                  {({ errors, touched }) => (\n                    <Form className=\"av-tooltip tooltip-label-right\">\n                      <FormGroup>\n                        <Label>{messages['forms.email']}</Label>\n                        <Field\n                          className=\"form-control\"\n                          name=\"email\"\n                          validate={validateEmail}\n                        />\n                        {errors.email && touched.email && (\n                          <div className=\"invalid-feedback d-block\">\n                            {errors.email}\n                          </div>\n                        )}\n                      </FormGroup>\n                    </Form>\n                  )}\n                </Formik>\n              </div>\n            </Step>\n            <Step\n              id=\"step3\"\n              name={messages['wizard.step-name-3']}\n              desc={messages['wizard.step-desc-3']}\n            >\n              <div className=\"wizard-basic-step\">\n                <Formik\n                  innerRef={forms[2]}\n                  initialValues={{\n                    password: fields[2].value,\n                  }}\n                  onSubmit={() => {}}\n                >\n                  {({ errors, touched }) => (\n                    <Form className=\"av-tooltip tooltip-label-right error-l-75\">\n                      <FormGroup>\n                        <Label>{messages['forms.password']}</Label>\n                        <Field\n                          className=\"form-control\"\n                          name=\"password\"\n                          type=\"password\"\n                          validate={validatePassword}\n                        />\n                        {errors.password && touched.password && (\n                          <div className=\"invalid-feedback d-block\">\n                            {errors.password}\n                          </div>\n                        )}\n                      </FormGroup>\n                    </Form>\n                  )}\n                </Formik>\n              </div>\n            </Step>\n            <Step id=\"step4\" hideTopNav>\n              <div className=\"wizard-basic-step text-center pt-3\">\n                {loading ? (\n                  <div>\n                    <Spinner color=\"primary\" className=\"mb-1\" />\n                    <p>\n                      <IntlMessages id=\"wizard.async\" />\n                    </p>\n                  </div>\n                ) : (\n                  <div>\n                    <h2 className=\"mb-2\">\n                      <IntlMessages id=\"wizard.content-thanks\" />\n                    </h2>\n                    <p>\n                      <IntlMessages id=\"wizard.registered\" />\n                    </p>\n                  </div>\n                )}\n              </div>\n            </Step>\n          </Steps>\n          <BottomNavigation\n            onClickNext={onClickNext}\n            onClickPrev={onClickPrev}\n            className={`justify-content-center ${\n              bottomNavHidden && 'invisible'\n            }`}\n            prevLabel={messages['wizard.prev']}\n            nextLabel={messages['wizard.next']}\n          />\n        </Wizard>\n      </CardBody>\n    </Card>\n  );\n};\nexport default injectIntl(Validation);\n"]},"metadata":{},"sourceType":"module"}