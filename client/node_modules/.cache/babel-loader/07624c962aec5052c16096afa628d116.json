{"ast":null,"code":"import _objectSpread from \"/home/browsewire/Desktop/hj/CEI/cei/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/browsewire/Desktop/hj/CEI/cei/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/browsewire/Desktop/hj/CEI/cei/client/src/views/app/EditProfile.js\";\n\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { Colxx, Separator } from '../../components/common/CustomBootstrap';\nimport Breadcrumb from '../../containers/navs/Breadcrumb';\nimport React, { useState, useContext } from 'react';\nimport axios from 'axios';\nimport { NotificationManager } from '../../components/common/react-notifications';\nimport { UserContext } from '../../Context/UserContext';\nimport { Row, Card, CardBody, Input, FormGroup, Label, Button, Form } from 'reactstrap'; // import { injectIntl } from 'react-intl';\n\nvar EditProfile = function EditProfile(_ref) {\n  var match = _ref.match;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      formData = _useState2[0],\n      setformData = _useState2[1];\n\n  var _useContext = useContext(UserContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      user = _useContext2[0],\n      setUser = _useContext2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      picture = _useState4[0],\n      setPicture = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      imgData = _useState6[0],\n      setImgData = _useState6[1];\n\n  var baseUrl = 'https://cdn.linqusacorp.com';\n  var styles = {\n    active: {\n      color: 'green'\n    },\n    inactive: {\n      color: 'red'\n    },\n    profileImg: {\n      height: '6rem',\n      width: '6rem',\n      borderRadius: '50%'\n    },\n    editprofileImage: {\n      height: '5rem',\n      width: '5rem',\n      borderRadius: '50%'\n    }\n  };\n\n  var onChangePicture = function onChangePicture(e) {\n    if (e.target.files[0]) {\n      console.log('picture: ', e.target.files);\n      setPicture(e.target.files[0]);\n      console.log(picture);\n      var reader = new FileReader();\n      reader.addEventListener('load', function () {\n        setImgData(reader.result);\n      });\n      reader.readAsDataURL(e.target.files[0]);\n    }\n  }; // FORM   SUBMIT HANDLER\n\n\n  var submit = function submit(e) {\n    e.preventDefault();\n    var data = new FormData();\n\n    if (formData.password) {\n      if (!/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/.test(formData.password)) return NotificationManager.warning('Password Must Contain 1 digit, 1 Uppercase, 1 Lowercase, 1 Special Charcter, and 8 Character Long!!!', 'Error', 3000, null, null, '');\n      if (!formData.confirmPassword) return NotificationManager.warning(\"Confirm Password Can't Be Empty\", 'Error', 3000, null, null, '');else if (formData.password !== formData.confirmPassword) return NotificationManager.warning(\"Password & Confirm Password didn't match!!!\", 'Error', 3000, null, null, '');\n      data.append('password', formData.password);\n    }\n\n    if (formData.firstName) {\n      data.append('firstName', formData.firstName);\n    }\n\n    if (formData.lastName) {\n      data.append('lastName', formData.lastName);\n    }\n\n    if (formData.email) {\n      data.append('email', formData.email);\n    }\n\n    if (formData.phone) {\n      data.append('phone', formData.phone);\n    }\n\n    if (formData.role) {\n      data.append('role', formData.role);\n    }\n\n    if (formData.address) {\n      data.append('address', formData.address);\n    }\n\n    if (formData.company) {\n      data.append('company', formData.company);\n    }\n\n    if (formData.city) {\n      data.append('city', formData.city);\n    }\n\n    if (formData.state) {\n      data.append('state', formData.state);\n    }\n\n    if (formData.country) {\n      data.append('country', formData.country);\n    }\n\n    if (formData.zip) {\n      data.append('zip', formData.zip);\n    }\n\n    if (picture) {\n      data.append('profileImage', picture);\n    }\n\n    axios.post('/api/edit-profile', data, {\n      params: {\n        id: user.id\n      }\n    }).then(function (res) {\n      console.log(res.data);\n      setUser(res.data.data);\n      NotificationManager.success('Profile Updated Successfully', 'Success', 3000, null, null, '');\n    }).catch(function (err) {\n      console.log(err);\n      NotificationManager.success('Profile Updated Successfully', 'Success', 3000, null, null, '');\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    xxs: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    heading: \"Edit Profile\",\n    match: match,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Separator, {\n    className: \"mb-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex flex-column\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    xxs: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"justify-content-center d-flex flex-column align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 19\n    }\n  }, imgData ? /*#__PURE__*/React.createElement(\"img\", {\n    style: styles.profileImg,\n    src: imgData,\n    alt: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 23\n    }\n  }) : /*#__PURE__*/React.createElement(\"img\", {\n    style: styles.profileImg,\n    src: user.profileImage ? 'http://d3o5w1w6u67fah.cloudfront.net/' + user.profileImage : 'http://d3o5w1w6u67fah.cloudfront.net/userImages/user.png',\n    alt: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    className: \"font-weight-bold edit-profile\",\n    for: \"profile\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"Change Profile Picture\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    onChange: onChangePicture,\n    style: {\n      display: 'none'\n    },\n    type: \"file\",\n    id: \"profile\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    row: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    sm: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"exampleEmailGrid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"First Name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    defaultValue: user.firstName,\n    name: \"exampleEmailGrid\",\n    id: \"exampleEmailGrid\",\n    placeholder: \"First Name\",\n    onChange: function onChange(e) {\n      setformData(_objectSpread(_objectSpread({}, formData), {}, {\n        firstName: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Colxx, {\n    sm: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"examplePasswordGrid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"Last Name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    defaultValue: user.lastName // name=\"examplePasswordGrid\"\n    // id=\"examplePasswordGrid\"\n    ,\n    placeholder: \"Last Name\",\n    onChange: function onChange(e) {\n      setformData(_objectSpread(_objectSpread({}, formData), {}, {\n        lastName: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Colxx, {\n    sm: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"exampleEmailGrid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"forms.email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    defaultValue: user.email,\n    type: \"email\",\n    name: \"exampleEmailGrid\",\n    id: \"exampleEmailGrid\",\n    placeholder: \"Email\",\n    onChange: function onChange(e) {\n      setformData(_objectSpread(_objectSpread({}, formData), {}, {\n        email: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Colxx, {\n    sm: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"examplePasswordGrid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"Phone\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    defaultValue: user.phone,\n    type: \"text\",\n    name: \"examplePasswordGrid\",\n    id: \"examplePasswordGrid\",\n    placeholder: \"Phone\",\n    onChange: function onChange(e) {\n      setformData(_objectSpread(_objectSpread({}, formData), {}, {\n        phone: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Colxx, {\n    sm: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"exampleAddressGrid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"Company Name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    defaultValue: user.company,\n    type: \"text\",\n    name: \"exampleAddressGrid\",\n    id: \"exampleAddressGrid\",\n    placeholder: \"Company Name\",\n    onChange: function onChange(e) {\n      setformData(_objectSpread(_objectSpread({}, formData), {}, {\n        company: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Colxx, {\n    sm: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"exampleAddressGrid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"forms.address\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    defaultValue: user.address,\n    type: \"text\",\n    name: \"exampleAddressGrid\",\n    id: \"exampleAddressGrid\",\n    placeholder: \"Address\",\n    onChange: function onChange(e) {\n      setformData(_objectSpread(_objectSpread({}, formData), {}, {\n        address: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Colxx, {\n    sm: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"exampleAddress2Grid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"City\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    defaultValue: user.city,\n    type: \"text\",\n    name: \"exampleAddress2Grid\",\n    id: \"exampleAddress2Grid\",\n    placeholder: \"City\",\n    onChange: function onChange(e) {\n      setformData(_objectSpread(_objectSpread({}, formData), {}, {\n        city: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Colxx, {\n    sm: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"exampleAddress2Grid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"State\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    defaultValue: user.state,\n    type: \"text\",\n    name: \"exampleAddress2Grid\",\n    id: \"exampleAddress2Grid\",\n    placeholder: \"State\",\n    onChange: function onChange(e) {\n      setformData(_objectSpread(_objectSpread({}, formData), {}, {\n        state: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Colxx, {\n    sm: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"Country\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    defaultValue: user.country,\n    type: \"text\",\n    name: \"exampleAddress2Grid\",\n    id: \"exampleAddress2Grid\",\n    placeholder: \"State\",\n    onChange: function onChange(e) {\n      setformData(_objectSpread(_objectSpread({}, formData), {}, {\n        state: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Colxx, {\n    sm: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"exampleZipGrid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"forms.zip\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    defaultValue: user.zipcode,\n    type: \"text\",\n    name: \"exampleZipGrid\",\n    id: \"exampleZipGrid\",\n    placeholder: \"Zip\",\n    onChange: function onChange(e) {\n      setformData(_objectSpread(_objectSpread({}, formData), {}, {\n        zipcode: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Colxx, {\n    sm: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"exampleZipGrid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"NewPassword\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    defaultValue: \"\",\n    type: \"password\",\n    name: \"exampleZipGrid\",\n    id: \"exampleZipGrid\",\n    placeholder: \"New Password\",\n    onChange: function onChange(e) {\n      setformData(_objectSpread(_objectSpread({}, formData), {}, {\n        password: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Colxx, {\n    sm: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"exampleZipGrid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"Confirm Password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    defaultValue: \"\",\n    type: \"password\",\n    name: \"exampleZipGrid\",\n    id: \"exampleZipGrid\",\n    placeholder: \"Confirm Password\",\n    onChange: function onChange(e) {\n      setformData(_objectSpread(_objectSpread({}, formData), {}, {\n        confirmPassword: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(Button, {\n    onClick: submit,\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"Save Changes\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 21\n    }\n  })))))))));\n};\n\nexport default EditProfile;","map":{"version":3,"sources":["/home/browsewire/Desktop/hj/CEI/cei/client/src/views/app/EditProfile.js"],"names":["IntlMessages","Colxx","Separator","Breadcrumb","React","useState","useContext","axios","NotificationManager","UserContext","Row","Card","CardBody","Input","FormGroup","Label","Button","Form","EditProfile","match","formData","setformData","user","setUser","picture","setPicture","imgData","setImgData","baseUrl","styles","active","color","inactive","profileImg","height","width","borderRadius","editprofileImage","onChangePicture","e","target","files","console","log","reader","FileReader","addEventListener","result","readAsDataURL","submit","preventDefault","data","FormData","password","test","warning","confirmPassword","append","firstName","lastName","email","phone","role","address","company","city","state","country","zip","post","params","id","then","res","success","catch","err","profileImage","display","value","zipcode"],"mappings":"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","sourcesContent":["import IntlMessages from '../../helpers/IntlMessages';\nimport { Colxx, Separator } from '../../components/common/CustomBootstrap';\nimport Breadcrumb from '../../containers/navs/Breadcrumb';\nimport React, { useState, useContext } from 'react';\nimport axios from 'axios';\nimport { NotificationManager } from '../../components/common/react-notifications';\nimport { UserContext } from '../../Context/UserContext';\nimport {\n  Row,\n  Card,\n  CardBody,\n  Input,\n  FormGroup,\n  Label,\n  Button,\n  Form,\n} from 'reactstrap';\n// import { injectIntl } from 'react-intl';\n\nconst EditProfile = ({ match }) => {\n  const [formData, setformData] = useState({});\n  const [user, setUser] = useContext(UserContext);\n  const [picture, setPicture] = useState(null);\n  const [imgData, setImgData] = useState(null);\n  const baseUrl = 'https://cdn.linqusacorp.com';\n\n  const styles = {\n    active: {\n      color: 'green',\n    },\n    inactive: {\n      color: 'red',\n    },\n    profileImg: {\n      height: '6rem',\n      width: '6rem',\n      borderRadius: '50%',\n    },\n    editprofileImage: {\n      height: '5rem',\n      width: '5rem',\n      borderRadius: '50%',\n    },\n  };\n\n  const onChangePicture = (e) => {\n    if (e.target.files[0]) {\n      console.log('picture: ', e.target.files);\n      setPicture(e.target.files[0]);\n      console.log(picture);\n      const reader = new FileReader();\n      reader.addEventListener('load', () => {\n        setImgData(reader.result);\n      });\n      reader.readAsDataURL(e.target.files[0]);\n    }\n  };\n\n  // FORM   SUBMIT HANDLER\n  const submit = (e) => {\n    e.preventDefault();\n    const data = new FormData();\n    if (formData.password) {\n      if (\n        !/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/.test(\n          formData.password\n        )\n      )\n        return NotificationManager.warning(\n          'Password Must Contain 1 digit, 1 Uppercase, 1 Lowercase, 1 Special Charcter, and 8 Character Long!!!',\n          'Error',\n          3000,\n          null,\n          null,\n          ''\n        );\n      if (!formData.confirmPassword)\n        return NotificationManager.warning(\n          \"Confirm Password Can't Be Empty\",\n          'Error',\n          3000,\n          null,\n          null,\n          ''\n        );\n      else if (formData.password !== formData.confirmPassword)\n        return NotificationManager.warning(\n          \"Password & Confirm Password didn't match!!!\",\n          'Error',\n          3000,\n          null,\n          null,\n          ''\n        );\n      data.append('password', formData.password);\n    }\n    if (formData.firstName) {\n      data.append('firstName', formData.firstName);\n    }\n    if (formData.lastName) {\n      data.append('lastName', formData.lastName);\n    }\n    if (formData.email) {\n      data.append('email', formData.email);\n    }\n    if (formData.phone) {\n      data.append('phone', formData.phone);\n    }\n    if (formData.role) {\n      data.append('role', formData.role);\n    }\n    if (formData.address) {\n      data.append('address', formData.address);\n    }\n    if (formData.company) {\n      data.append('company', formData.company);\n    }\n    if (formData.city) {\n      data.append('city', formData.city);\n    }\n    if (formData.state) {\n      data.append('state', formData.state);\n    }\n    if (formData.country) {\n      data.append('country', formData.country);\n    }\n    if (formData.zip) {\n      data.append('zip', formData.zip);\n    }\n    if (picture) {\n      data.append('profileImage', picture);\n    }\n    axios\n      .post('/api/edit-profile', data, { params: { id: user.id } })\n      .then((res) => {\n        console.log(res.data);\n        setUser(res.data.data);\n        NotificationManager.success(\n          'Profile Updated Successfully',\n          'Success',\n          3000,\n          null,\n          null,\n          ''\n        );\n      })\n      .catch((err) => {\n        console.log(err);\n        NotificationManager.success(\n          'Profile Updated Successfully',\n          'Success',\n          3000,\n          null,\n          null,\n          ''\n        );\n      });\n  };\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n          <Breadcrumb heading=\"Edit Profile\" match={match} />\n          <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <div className=\"d-flex flex-column\">\n        <Row className=\"mb-4\">\n          <Colxx xxs=\"12\">\n            <Card>\n              <CardBody>\n                {/* <CardTitle>\n                <IntlMessages id=\"Edit\" />\n              </CardTitle> */}\n                <Form>\n                  <FormGroup className=\"justify-content-center d-flex flex-column align-items-center\">\n                    {imgData ? (\n                      <img style={styles.profileImg} src={imgData} alt=\"\" />\n                    ) : (\n                      <img\n                        style={styles.profileImg}\n                        src={\n                          user.profileImage\n                            ? 'http://d3o5w1w6u67fah.cloudfront.net/' +\n                              user.profileImage\n                            : 'http://d3o5w1w6u67fah.cloudfront.net/userImages/user.png'\n                        }\n                        alt=\"\"\n                      />\n                    )}\n                    <Label\n                      className=\"font-weight-bold edit-profile\"\n                      for=\"profile\"\n                    >\n                      <IntlMessages id=\"Change Profile Picture\" />\n                    </Label>\n                    <Input\n                      onChange={onChangePicture}\n                      style={{ display: 'none' }}\n                      type=\"file\"\n                      id=\"profile\"\n                    />\n                  </FormGroup>\n                  <FormGroup row>\n                    <Colxx sm={6}>\n                      <FormGroup>\n                        <Label for=\"exampleEmailGrid\">\n                          <IntlMessages id=\"First Name\" />\n                        </Label>\n                        <Input\n                          type=\"text\"\n                          defaultValue={user.firstName}\n                          name=\"exampleEmailGrid\"\n                          id=\"exampleEmailGrid\"\n                          placeholder=\"First Name\"\n                          onChange={(e) => {\n                            setformData({\n                              ...formData,\n                              firstName: e.target.value,\n                            });\n                          }}\n                        />\n                      </FormGroup>\n                    </Colxx>\n\n                    <Colxx sm={6}>\n                      <FormGroup>\n                        <Label for=\"examplePasswordGrid\">\n                          <IntlMessages id=\"Last Name\" />\n                        </Label>\n                        <Input\n                          type=\"text\"\n                          defaultValue={user.lastName}\n                          // name=\"examplePasswordGrid\"\n                          // id=\"examplePasswordGrid\"\n                          placeholder=\"Last Name\"\n                          onChange={(e) => {\n                            setformData({\n                              ...formData,\n                              lastName: e.target.value,\n                            });\n                          }}\n                        />\n                      </FormGroup>\n                    </Colxx>\n                    <Colxx sm={6}>\n                      <FormGroup>\n                        <Label for=\"exampleEmailGrid\">\n                          <IntlMessages id=\"forms.email\" />\n                        </Label>\n                        <Input\n                          defaultValue={user.email}\n                          type=\"email\"\n                          name=\"exampleEmailGrid\"\n                          id=\"exampleEmailGrid\"\n                          placeholder=\"Email\"\n                          onChange={(e) => {\n                            setformData({ ...formData, email: e.target.value });\n                          }}\n                        />\n                      </FormGroup>\n                    </Colxx>\n\n                    <Colxx sm={6}>\n                      <FormGroup>\n                        <Label for=\"examplePasswordGrid\">\n                          <IntlMessages id=\"Phone\" />\n                        </Label>\n                        <Input\n                          defaultValue={user.phone}\n                          type=\"text\"\n                          name=\"examplePasswordGrid\"\n                          id=\"examplePasswordGrid\"\n                          placeholder=\"Phone\"\n                          onChange={(e) => {\n                            setformData({ ...formData, phone: e.target.value });\n                          }}\n                        />\n                      </FormGroup>\n                    </Colxx>\n                    <Colxx sm={12}>\n                      <FormGroup>\n                        <Label for=\"exampleAddressGrid\">\n                          <IntlMessages id=\"Company Name\" />\n                        </Label>\n                        <Input\n                          defaultValue={user.company}\n                          type=\"text\"\n                          name=\"exampleAddressGrid\"\n                          id=\"exampleAddressGrid\"\n                          placeholder=\"Company Name\"\n                          onChange={(e) => {\n                            setformData({\n                              ...formData,\n                              company: e.target.value,\n                            });\n                          }}\n                        />\n                      </FormGroup>\n                    </Colxx>\n\n                    <Colxx sm={12}>\n                      <FormGroup>\n                        <Label for=\"exampleAddressGrid\">\n                          <IntlMessages id=\"forms.address\" />\n                        </Label>\n                        <Input\n                          defaultValue={user.address}\n                          type=\"text\"\n                          name=\"exampleAddressGrid\"\n                          id=\"exampleAddressGrid\"\n                          placeholder=\"Address\"\n                          onChange={(e) => {\n                            setformData({\n                              ...formData,\n                              address: e.target.value,\n                            });\n                          }}\n                        />\n                      </FormGroup>\n                    </Colxx>\n\n                    <Colxx sm={4}>\n                      <FormGroup>\n                        <Label for=\"exampleAddress2Grid\">\n                          <IntlMessages id=\"City\" />\n                        </Label>\n                        <Input\n                          defaultValue={user.city}\n                          type=\"text\"\n                          name=\"exampleAddress2Grid\"\n                          id=\"exampleAddress2Grid\"\n                          placeholder=\"City\"\n                          onChange={(e) => {\n                            setformData({ ...formData, city: e.target.value });\n                          }}\n                        />\n                      </FormGroup>\n                    </Colxx>\n                    <Colxx sm={3}>\n                      <FormGroup>\n                        <Label for=\"exampleAddress2Grid\">\n                          <IntlMessages id=\"State\" />\n                        </Label>\n                        <Input\n                          defaultValue={user.state}\n                          type=\"text\"\n                          name=\"exampleAddress2Grid\"\n                          id=\"exampleAddress2Grid\"\n                          placeholder=\"State\"\n                          onChange={(e) => {\n                            setformData({ ...formData, state: e.target.value });\n                          }}\n                        />\n                      </FormGroup>\n                    </Colxx>\n                    <Colxx sm={3}>\n                      <FormGroup>\n                        <Label>\n                          <IntlMessages id=\"Country\" />\n                        </Label>\n                        {/* <Input defaultValue={user.country} type=\"select\" onChange={(e) => {\n                                                    setformData({ ...formData, country: e.target.value });\n                                                }}>\n\n                                                    <option>Select</option>\n                                                    {countries.map(item => {\n                                                        return (<option>{item}</option>)\n                                                    })}\n\n                                                </Input> */}\n                        {/* <select value={user.country} onChange={(e) => {\n                                                    setformData({ ...formData, country: e.target.value })\n                                                }}>\n                                                <option>Select</option>\n                                                    {countries.map(item => {\n                                                        return (<option>{item}</option>)\n                                                    })}\n                                                </select> */}\n                        <Input\n                          defaultValue={user.country}\n                          type=\"text\"\n                          name=\"exampleAddress2Grid\"\n                          id=\"exampleAddress2Grid\"\n                          placeholder=\"State\"\n                          onChange={(e) => {\n                            setformData({ ...formData, state: e.target.value });\n                          }}\n                        />\n                      </FormGroup>\n                    </Colxx>\n                    <Colxx sm={2}>\n                      <FormGroup>\n                        <Label for=\"exampleZipGrid\">\n                          <IntlMessages id=\"forms.zip\" />\n                        </Label>\n                        <Input\n                          defaultValue={user.zipcode}\n                          type=\"text\"\n                          name=\"exampleZipGrid\"\n                          id=\"exampleZipGrid\"\n                          placeholder=\"Zip\"\n                          onChange={(e) => {\n                            setformData({\n                              ...formData,\n                              zipcode: e.target.value,\n                            });\n                          }}\n                        />\n                      </FormGroup>\n                    </Colxx>\n\n                    <Colxx sm={6}>\n                      <FormGroup>\n                        <Label for=\"exampleZipGrid\">\n                          <IntlMessages id=\"NewPassword\" />\n                        </Label>\n                        <Input\n                          defaultValue=\"\"\n                          type=\"password\"\n                          name=\"exampleZipGrid\"\n                          id=\"exampleZipGrid\"\n                          placeholder=\"New Password\"\n                          onChange={(e) => {\n                            setformData({\n                              ...formData,\n                              password: e.target.value,\n                            });\n                          }}\n                        />\n                      </FormGroup>\n                    </Colxx>\n                    <Colxx sm={6}>\n                      <FormGroup>\n                        <Label for=\"exampleZipGrid\">\n                          <IntlMessages id=\"Confirm Password\" />\n                        </Label>\n                        <Input\n                          defaultValue=\"\"\n                          type=\"password\"\n                          name=\"exampleZipGrid\"\n                          id=\"exampleZipGrid\"\n                          placeholder=\"Confirm Password\"\n                          onChange={(e) => {\n                            setformData({\n                              ...formData,\n                              confirmPassword: e.target.value,\n                            });\n                          }}\n                        />\n                      </FormGroup>\n                    </Colxx>\n                  </FormGroup>\n\n                  <Button onClick={submit} color=\"primary\">\n                    <IntlMessages id=\"Save Changes\" />\n                  </Button>\n                </Form>\n              </CardBody>\n            </Card>\n          </Colxx>\n        </Row>\n      </div>\n    </>\n  );\n};\n\nexport default EditProfile;\n"]},"metadata":{},"sourceType":"module"}