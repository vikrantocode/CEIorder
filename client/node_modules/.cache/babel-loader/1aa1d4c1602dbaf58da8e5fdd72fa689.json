{"ast":null,"code":"import _objectSpread from \"/home/browsewire/Desktop/CEIorder/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/browsewire/Desktop/CEIorder/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/browsewire/Desktop/CEIorder/client/src/views/user/forgot-password.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport { Row, Card, CardTitle, Label, FormGroup, Button } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport { Formik, Form, Field } from 'formik';\nimport { connect } from 'react-redux';\nimport { Colxx } from '../../components/common/CustomBootstrap';\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { forgotPassword } from '../../redux/actions';\nimport { NotificationManager } from '../../components/common/react-notifications';\nimport axios from \"axios\";\nimport { reset } from 'mousetrap';\n\nvar validateEmail = function validateEmail(value) {\n  var error;\n\n  if (!value) {\n    error = 'Please enter your email address';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n    error = 'Invalid email address';\n  }\n\n  return error;\n};\n\nvar ForgotPassword = function ForgotPassword(_ref) {\n  var history = _ref.history,\n      forgotUserMail = _ref.forgotUserMail,\n      loading = _ref.loading,\n      error = _ref.error,\n      forgotPasswordAction = _ref.forgotPasswordAction;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      response = _useState2[0],\n      setResponse = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      formData = _useState4[0],\n      setformData = _useState4[1];\n\n  var styles = {\n    border: {\n      border: \"2px solid green\"\n    }\n  }; // SEND THE OTP\n\n  var SendOtp = function SendOtp() {\n    console.log(formData);\n    axios.post(\"/api/send-OTP\", formData).then(function (res) {\n      console.log(res.data);\n\n      if (res.data.success) {\n        setResponse({\n          email: res.data.email,\n          otp: res.data.otp,\n          expiration: res.data.expiration\n        });\n        NotificationManager.success(res.data.success, 'Password Error', 3000, null, null, '');\n      } else if (res.data.error) {\n        NotificationManager.warning(res.data.error, 'Password Error', 3000, null, null, '');\n      }\n    });\n  };\n\n  var Reset = function Reset(e) {\n    e.preventDefault();\n\n    if (!response.verified) {\n      localStorage.setItem(\"userEmail\", response.email);\n      window.location.href = \"/user/reset-password\";\n    } else {\n      NotificationManager.warning(\"OTP not verified\", 'OTP error', 3000, null, null, '');\n    }\n  }; // console.log(timenow);\n  // if (response.expiration) {\n  //   const exp = new Date(response.expiration)\n  //   console.log(exp);\n  //   if (exp.getTime() < timenow.getTime()) {\n  //     console.log(true);\n  //   }\n  //   console.log(false);\n  // }\n  // RESEND THE PASSWORD\n\n\n  var resend = function resend(e) {\n    var timenow = new Date();\n    console.log(timenow);\n    var exp = new Date(response.expiration); // IF EXPIRY TIME HAS NOT CROSSED, THEN ERROR\n\n    if (exp.getTime() > timenow.getTime()) {\n      NotificationManager.warning(\"OTP is still valid \", 'OTP error', 3000, null, null, '');\n      console.log(formData);\n    } else {\n      // ELSE, RESEND INITIATED\n      console.log(formData);\n      axios.post(\"/send-OTP\", formData).then(function (res) {\n        console.log(res.data);\n\n        if (res.data.success) {\n          setResponse({\n            email: res.data.email,\n            otp: res.data.otp,\n            expiration: res.data.expiration\n          });\n          NotificationManager.warning(res.data.success, 'Success', 3000, null, null, '');\n        } else if (res.data.error) {\n          NotificationManager.warning(res.data.error, 'Error', 3000, null, null, '');\n        }\n      });\n    }\n  }; // useEffect(() => {\n  //   if (error) {\n  //     NotificationManager.warning(\n  //       error,\n  //       'Forgot Password Error',\n  //       3000,\n  //       null,\n  //       null,\n  //       ''\n  //     );\n  //   } else if (!loading && forgotUserMail === 'success')\n  //     NotificationManager.success(\n  //       'Please check your email.',\n  //       'Forgot Password Success',\n  //       3000,\n  //       null,\n  //       null,\n  //       ''\n  //     );\n  // }, [error, forgotUserMail, loading]);\n\n\n  return /*#__PURE__*/React.createElement(Row, {\n    className: \"h-100\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    xxs: \"12\",\n    md: \"10\",\n    className: \"mx-auto my-auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"auth-card\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"position-relative image-side \",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-white h2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, \"MAGIC IS IN THE DETAILS\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"white mb-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, \"Please use your e-mail to reset your password. \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 62\n    }\n  }), \"If you are not a member, please\", ' ', /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/user/register\",\n    className: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  }, \"register\"), \".\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-side\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/\",\n    className: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"logo-single\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(CardTitle, {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"user.forgot-password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Formik, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, function (_ref2) {\n    var errors = _ref2.errors,\n        touched = _ref2.touched;\n    return /*#__PURE__*/React.createElement(Form, {\n      className: \"av-tooltip tooltip-label-bottom\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"form-group has-float-label\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"user.email\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(Field, {\n      className: \"form-control\",\n      name: \"email\",\n      validate: validateEmail,\n      onChange: function onChange(e) {\n        setformData({\n          email: e.target.value\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }\n    })), response.otp ? /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"form-group has-float-label\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"OTP\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(Field, {\n      className: \"form-control\",\n      name: \"Otp\",\n      validate: validateEmail,\n      onChange: function onChange(e) {\n        if (e.target.value == response.otp) {\n          setResponse(_objectSpread(_objectSpread({}, response), {}, {\n            verified: false\n          }));\n          NotificationManager.success(\"OTP verified\", 'Success', 3000, null, null, '');\n        } else if (e.target.value.length == 4 && e.target.value != response.otp) {\n          setResponse(_objectSpread(_objectSpread({}, response), {}, {\n            verified: true\n          }));\n          NotificationManager.warning(\"Incorrect OTP\", 'Error', 3000, null, null, '');\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }\n    })) : \"\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between align-items-center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 19\n      }\n    }, response.otp ? /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        cursor: 'pointer'\n      },\n      onClick: resend,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 37\n      }\n    }, \"Resend\") : \"\", response.otp ? /*#__PURE__*/React.createElement(Button, {\n      onClick: Reset,\n      color: \"primary\",\n      className: \"btn-shadow btn-multiple-state \".concat(loading ? 'show-spinner' : ''),\n      size: \"lg\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"spinner d-inline-block\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"bounce1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"bounce2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"bounce3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"label\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 23\n      }\n    }, \"Reset\")) : /*#__PURE__*/React.createElement(Button, {\n      onClick: SendOtp,\n      color: \"primary\",\n      className: \"btn-shadow btn-multiple-state \".concat(loading ? 'show-spinner' : ''),\n      size: \"lg\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"spinner d-inline-block\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"bounce1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"bounce2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"bounce3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"label\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 25\n      }\n    }, \"Send OTP\"))));\n  })))));\n};\n\nvar mapStateToProps = function mapStateToProps(_ref3) {\n  var authUser = _ref3.authUser;\n  var forgotUserMail = authUser.forgotUserMail,\n      loading = authUser.loading,\n      error = authUser.error;\n  return {\n    forgotUserMail: forgotUserMail,\n    loading: loading,\n    error: error\n  };\n};\n\nexport default connect(mapStateToProps, {\n  forgotPasswordAction: forgotPassword\n})(ForgotPassword);","map":{"version":3,"sources":["/home/browsewire/Desktop/CEIorder/client/src/views/user/forgot-password.js"],"names":["React","useState","useEffect","Row","Card","CardTitle","Label","FormGroup","Button","NavLink","Formik","Form","Field","connect","Colxx","IntlMessages","forgotPassword","NotificationManager","axios","reset","validateEmail","value","error","test","ForgotPassword","history","forgotUserMail","loading","forgotPasswordAction","response","setResponse","formData","setformData","styles","border","SendOtp","console","log","post","then","res","data","success","email","otp","expiration","warning","Reset","e","preventDefault","verified","localStorage","setItem","window","location","href","resend","timenow","Date","exp","getTime","errors","touched","target","length","cursor","mapStateToProps","authUser"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Row, Card, CardTitle, Label, FormGroup, Button } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport { Formik, Form, Field } from 'formik';\nimport { connect } from 'react-redux';\nimport { Colxx } from '../../components/common/CustomBootstrap';\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { forgotPassword } from '../../redux/actions';\nimport { NotificationManager } from '../../components/common/react-notifications';\nimport axios from \"axios\"\nimport { reset } from 'mousetrap';\n\nconst validateEmail = (value) => {\n  let error;\n  if (!value) {\n    error = 'Please enter your email address';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n    error = 'Invalid email address';\n  }\n  return error;\n};\n\nconst ForgotPassword = ({\n  history,\n  forgotUserMail,\n  loading,\n  error,\n  forgotPasswordAction,\n}) => {\n  const [response, setResponse] = useState({})\n  const [formData, setformData] = useState({})\nconst styles = {\n  border:{\n    border:\"2px solid green\"\n  }\n}\n\n  // SEND THE OTP\n  const SendOtp = () => {\n    console.log(formData);\n    axios.post(\"/api/send-OTP\", formData).then(res => {\n      console.log(res.data);\n      if (res.data.success) {\n        setResponse({ email: res.data.email, otp: res.data.otp, expiration: res.data.expiration })\n        NotificationManager.success(res.data.success, 'Password Error', 3000, null, null, '');\n      }\n      else if (res.data.error) {\n        NotificationManager.warning(res.data.error, 'Password Error', 3000, null, null, '');\n      }\n\n    })\n  }\nconst Reset =(e)=>{\n  e.preventDefault()\n  if(!response.verified){\n    localStorage.setItem(\"userEmail\", response.email);\n  window.location.href =\"/user/reset-password\"\n  }\n  else{\n    NotificationManager.warning(\"OTP not verified\", 'OTP error', 3000, null, null, '');\n  }\n}\n\n// console.log(timenow);\n// if (response.expiration) {\n//   const exp = new Date(response.expiration)\n//   console.log(exp);\n//   if (exp.getTime() < timenow.getTime()) {\n//     console.log(true);\n//   }\n//   console.log(false);\n// }\n// RESEND THE PASSWORD\nconst resend = (e) => {\n  const timenow = new Date()\n  console.log(timenow);\n  const exp = new Date(response.expiration)\n  // IF EXPIRY TIME HAS NOT CROSSED, THEN ERROR\n  if (exp.getTime() > timenow.getTime()) {\n    NotificationManager.warning(\n      \"OTP is still valid \",\n      'OTP error',\n      3000,\n      null,\n      null,\n      ''\n    );\n    console.log(formData);\n  } else {\n    // ELSE, RESEND INITIATED\n    console.log(formData);\n    axios.post(\"/send-OTP\", formData).then(res => {\n      console.log(res.data);\n      if (res.data.success) {\n        setResponse({ email: res.data.email, otp: res.data.otp, expiration: res.data.expiration })\n        NotificationManager.warning(\n          res.data.success,\n          'Success',\n          3000,\n          null,\n          null,\n          ''\n        );\n      }\n      else if (res.data.error) {\n        NotificationManager.warning(\n          res.data.error,\n          'Error',\n          3000,\n          null,\n          null,\n          ''\n        );\n      }\n\n    })\n  }\n}\n\n\n\n\n  // useEffect(() => {\n  //   if (error) {\n  //     NotificationManager.warning(\n  //       error,\n  //       'Forgot Password Error',\n  //       3000,\n  //       null,\n  //       null,\n  //       ''\n  //     );\n  //   } else if (!loading && forgotUserMail === 'success')\n  //     NotificationManager.success(\n  //       'Please check your email.',\n  //       'Forgot Password Success',\n  //       3000,\n  //       null,\n  //       null,\n  //       ''\n  //     );\n  // }, [error, forgotUserMail, loading]);\n\n\n  return (\n    <Row className=\"h-100\">\n      <Colxx xxs=\"12\" md=\"10\" className=\"mx-auto my-auto\">\n        <Card className=\"auth-card\">\n          <div className=\"position-relative image-side \">\n            <p className=\"text-white h2\">MAGIC IS IN THE DETAILS</p>\n            <p className=\"white mb-0\">\n              Please use your e-mail to reset your password. <br />\n              If you are not a member, please{' '}\n              <NavLink to=\"/user/register\" className=\"white\">\n                register\n              </NavLink>\n              .\n            </p>\n          </div>\n          <div className=\"form-side\">\n            <NavLink to=\"/\" className=\"white\">\n              <span className=\"logo-single\" />\n            </NavLink>\n            <CardTitle className=\"mb-4\">\n              <IntlMessages id=\"user.forgot-password\" />\n            </CardTitle>\n\n            <Formik>\n              {({ errors, touched }) => (\n                <Form className=\"av-tooltip tooltip-label-bottom\">\n                  <FormGroup className=\"form-group has-float-label\">\n                    <Label>\n                      <IntlMessages id=\"user.email\" />\n                    </Label>\n                    <Field\n                      className=\"form-control\"\n                      name=\"email\"\n                      validate={validateEmail}\n                      onChange={(e) => {\n                        setformData({ email: e.target.value })\n                      }}\n                    />\n\n                  </FormGroup>\n                  {response.otp ? <FormGroup className=\"form-group has-float-label\">\n                    <Label>\n                      <IntlMessages id=\"OTP\" />\n                    </Label>\n                    <Field\n                      className=\"form-control\"\n                      name=\"Otp\"\n                      validate={validateEmail}\n                      onChange={(e) => {\n                        if (e.target.value == response.otp) {\n                          setResponse({ ...response, verified: false })\n                          NotificationManager.success(\"OTP verified\", 'Success', 3000, null, null, '');\n                        }\n                        else if (e.target.value.length == 4 && e.target.value != response.otp) {\n                          setResponse({ ...response, verified: true })\n                          NotificationManager.warning(\"Incorrect OTP\", 'Error', 3000, null, null, '');\n\n                        }\n                      }}\n                    />\n\n                  </FormGroup> : \"\"}\n\n                  <div className=\"d-flex justify-content-between align-items-center\">\n                    {response.otp ? <div style={{cursor:'pointer'}} onClick={resend}>Resend</div> : \"\"}\n                    {response.otp ? <Button\n                      onClick={Reset}\n                      color=\"primary\"\n                      className={`btn-shadow btn-multiple-state ${loading ? 'show-spinner' : ''\n                        }`}\n                      size=\"lg\"\n                    >\n                      <span className=\"spinner d-inline-block\">\n                        <span className=\"bounce1\" />\n                        <span className=\"bounce2\" />\n                        <span className=\"bounce3\" />\n                      </span>\n                      <span className=\"label\">\n                        Reset\n                      </span>\n                    </Button> : <Button\n                      onClick={SendOtp}\n                      color=\"primary\"\n                      className={`btn-shadow btn-multiple-state ${loading ? 'show-spinner' : ''\n                        }`}\n                      size=\"lg\"\n                    >\n                        <span className=\"spinner d-inline-block\">\n                          <span className=\"bounce1\" />\n                          <span className=\"bounce2\" />\n                          <span className=\"bounce3\" />\n                        </span>\n                        <span className=\"label\">\n                          Send OTP\n                      </span>\n                      </Button>}\n                  </div>\n                </Form>\n              )}\n            </Formik>\n          </div>\n        </Card>\n      </Colxx>\n    </Row>\n  );\n};\n\nconst mapStateToProps = ({ authUser }) => {\n  const { forgotUserMail, loading, error } = authUser;\n  return { forgotUserMail, loading, error };\n};\n\nexport default connect(mapStateToProps, {\n  forgotPasswordAction: forgotPassword,\n})(ForgotPassword);\n\n\n"]},"metadata":{},"sourceType":"module"}