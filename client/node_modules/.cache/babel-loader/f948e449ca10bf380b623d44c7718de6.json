{"ast":null,"code":"import _slicedToArray from \"/home/browsewire/Desktop/CEI/cei/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/browsewire/Desktop/CEI/cei/client/src/components/common/TooltipItem.js\";\n\nimport React, { useState } from 'react';\nimport { Button, Tooltip } from 'reactstrap';\n\nvar TooltipItem = function TooltipItem(_ref) {\n  var id = _ref.id,\n      item = _ref.item;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      tooltipOpen = _useState2[0],\n      setTooltipOpen = _useState2[1];\n\n  return /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"mr-1 mb-2\",\n    color: \"secondary\",\n    id: \"tooltip_\".concat(id),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, item.text), /*#__PURE__*/React.createElement(Tooltip, {\n    placement: item.placement,\n    isOpen: tooltipOpen,\n    target: \"tooltip_\".concat(id),\n    toggle: function toggle() {\n      return setTooltipOpen(!tooltipOpen);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, item.body));\n};\n\nexport default TooltipItem;","map":{"version":3,"sources":["/home/browsewire/Desktop/CEI/cei/client/src/components/common/TooltipItem.js"],"names":["React","useState","Button","Tooltip","TooltipItem","id","item","tooltipOpen","setTooltipOpen","text","placement","body"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,YAAhC;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAkB;AAAA,MAAfC,EAAe,QAAfA,EAAe;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,kBACEL,QAAQ,CAAC,KAAD,CADV;AAAA;AAAA,MAC7BM,WAD6B;AAAA,MAChBC,cADgB;;AAGpC,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,WAAlB;AAA8B,IAAA,KAAK,EAAC,WAApC;AAAgD,IAAA,EAAE,oBAAaH,EAAb,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,IAAI,CAACG,IADR,CADF,eAIE,oBAAC,OAAD;AACE,IAAA,SAAS,EAAEH,IAAI,CAACI,SADlB;AAEE,IAAA,MAAM,EAAEH,WAFV;AAGE,IAAA,MAAM,oBAAaF,EAAb,CAHR;AAIE,IAAA,MAAM,EAAE;AAAA,aAAMG,cAAc,CAAC,CAACD,WAAF,CAApB;AAAA,KAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGD,IAAI,CAACK,IANR,CAJF,CADF;AAeD,CAlBD;;AAmBA,eAAeP,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Button, Tooltip } from 'reactstrap';\n\nconst TooltipItem = ({ id, item }) => {\n  const [tooltipOpen, setTooltipOpen] = useState(false);\n\n  return (\n    <span>\n      <Button className=\"mr-1 mb-2\" color=\"secondary\" id={`tooltip_${id}`}>\n        {item.text}\n      </Button>\n      <Tooltip\n        placement={item.placement}\n        isOpen={tooltipOpen}\n        target={`tooltip_${id}`}\n        toggle={() => setTooltipOpen(!tooltipOpen)}\n      >\n        {item.body}\n      </Tooltip>\n    </span>\n  );\n};\nexport default TooltipItem;\n"]},"metadata":{},"sourceType":"module"}