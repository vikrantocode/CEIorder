{"ast":null,"code":"import _objectSpread from \"/home/browsewire/Desktop/CEIorder/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { CHAT_GET_CONTACTS, CHAT_GET_CONTACTS_SUCCESS, CHAT_GET_CONTACTS_ERROR, CHAT_GET_CONVERSATIONS, CHAT_GET_CONVERSATIONS_SUCCESS, CHAT_GET_CONVERSATIONS_ERROR, CHAT_ADD_MESSAGE_TO_CONVERSATION, CHAT_CREATE_CONVERSATION, CHAT_SEARCH_CONTACT, CHAT_CHANGE_CONVERSATION } from '../actions';\nvar INIT_STATE = {\n  allContacts: null,\n  contacts: null,\n  conversations: null,\n  error: '',\n  searchKeyword: '',\n  loadingContacts: false,\n  loadingConversations: false,\n  currentUser: null,\n  selectedUser: null,\n  selectedUserId: null\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CHAT_GET_CONTACTS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loadingContacts: false\n      });\n\n    case CHAT_GET_CONTACTS_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loadingContacts: true,\n        allContacts: action.payload.contacts,\n        contacts: action.payload.contacts,\n        currentUser: action.payload.currentUser\n      });\n\n    case CHAT_GET_CONTACTS_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loadingContacts: false,\n        error: action.payload\n      });\n\n    case CHAT_GET_CONVERSATIONS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loadingConversations: false\n      });\n\n    case CHAT_GET_CONVERSATIONS_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loadingConversations: true,\n        conversations: action.payload.conversations,\n        selectedUserId: action.payload.selectedUser\n      });\n\n    case CHAT_GET_CONVERSATIONS_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loadingConversations: false,\n        error: action.payload\n      });\n\n    case CHAT_CHANGE_CONVERSATION:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        selectedUser: state.allContacts.find(function (x) {\n          return x.id === action.payload;\n        })\n      });\n\n    case CHAT_ADD_MESSAGE_TO_CONVERSATION:\n      return _objectSpread({}, state);\n\n    case CHAT_CREATE_CONVERSATION:\n      return _objectSpread({}, state);\n\n    case CHAT_SEARCH_CONTACT:\n      if (action.payload === '') {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          contacts: state.allContacts\n        });\n      }\n\n      var keyword = action.payload.toLowerCase();\n      var searchedContacts = state.allContacts.filter(function (item) {\n        return item.name.toLowerCase().indexOf(keyword) > -1;\n      });\n      return _objectSpread(_objectSpread({}, state), {}, {\n        contacts: searchedContacts\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n});","map":{"version":3,"sources":["/home/browsewire/Desktop/CEIorder/client/src/redux/chat/reducer.js"],"names":["CHAT_GET_CONTACTS","CHAT_GET_CONTACTS_SUCCESS","CHAT_GET_CONTACTS_ERROR","CHAT_GET_CONVERSATIONS","CHAT_GET_CONVERSATIONS_SUCCESS","CHAT_GET_CONVERSATIONS_ERROR","CHAT_ADD_MESSAGE_TO_CONVERSATION","CHAT_CREATE_CONVERSATION","CHAT_SEARCH_CONTACT","CHAT_CHANGE_CONVERSATION","INIT_STATE","allContacts","contacts","conversations","error","searchKeyword","loadingContacts","loadingConversations","currentUser","selectedUser","selectedUserId","state","action","type","payload","find","x","id","keyword","toLowerCase","searchedContacts","filter","item","name","indexOf"],"mappings":";AAAA,SACEA,iBADF,EAEEC,yBAFF,EAGEC,uBAHF,EAIEC,sBAJF,EAKEC,8BALF,EAMEC,4BANF,EAOEC,gCAPF,EAQEC,wBARF,EASEC,mBATF,EAUEC,wBAVF,QAWO,YAXP;AAaA,IAAMC,UAAU,GAAG;AACjBC,EAAAA,WAAW,EAAE,IADI;AAEjBC,EAAAA,QAAQ,EAAE,IAFO;AAGjBC,EAAAA,aAAa,EAAE,IAHE;AAIjBC,EAAAA,KAAK,EAAE,EAJU;AAKjBC,EAAAA,aAAa,EAAE,EALE;AAMjBC,EAAAA,eAAe,EAAE,KANA;AAOjBC,EAAAA,oBAAoB,EAAE,KAPL;AAQjBC,EAAAA,WAAW,EAAE,IARI;AASjBC,EAAAA,YAAY,EAAE,IATG;AAUjBC,EAAAA,cAAc,EAAE;AAVC,CAAnB;AAaA,gBAAe,YAAgC;AAAA,MAA/BC,KAA+B,uEAAvBX,UAAuB;AAAA,MAAXY,MAAW;;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKvB,iBAAL;AACE,6CAAYqB,KAAZ;AAAmBL,QAAAA,eAAe,EAAE;AAApC;;AAEF,SAAKf,yBAAL;AACE,6CACKoB,KADL;AAEEL,QAAAA,eAAe,EAAE,IAFnB;AAGEL,QAAAA,WAAW,EAAEW,MAAM,CAACE,OAAP,CAAeZ,QAH9B;AAIEA,QAAAA,QAAQ,EAAEU,MAAM,CAACE,OAAP,CAAeZ,QAJ3B;AAKEM,QAAAA,WAAW,EAAEI,MAAM,CAACE,OAAP,CAAeN;AAL9B;;AAQF,SAAKhB,uBAAL;AACE,6CAAYmB,KAAZ;AAAmBL,QAAAA,eAAe,EAAE,KAApC;AAA2CF,QAAAA,KAAK,EAAEQ,MAAM,CAACE;AAAzD;;AAEF,SAAKrB,sBAAL;AACE,6CAAYkB,KAAZ;AAAmBJ,QAAAA,oBAAoB,EAAE;AAAzC;;AAEF,SAAKb,8BAAL;AACE,6CACKiB,KADL;AAEEJ,QAAAA,oBAAoB,EAAE,IAFxB;AAGEJ,QAAAA,aAAa,EAAES,MAAM,CAACE,OAAP,CAAeX,aAHhC;AAIEO,QAAAA,cAAc,EAAEE,MAAM,CAACE,OAAP,CAAeL;AAJjC;;AAOF,SAAKd,4BAAL;AACE,6CAAYgB,KAAZ;AAAmBJ,QAAAA,oBAAoB,EAAE,KAAzC;AAAgDH,QAAAA,KAAK,EAAEQ,MAAM,CAACE;AAA9D;;AAEF,SAAKf,wBAAL;AACE,6CACKY,KADL;AAEEF,QAAAA,YAAY,EAAEE,KAAK,CAACV,WAAN,CAAkBc,IAAlB,CAAuB,UAACC,CAAD;AAAA,iBAAOA,CAAC,CAACC,EAAF,KAASL,MAAM,CAACE,OAAvB;AAAA,SAAvB;AAFhB;;AAKF,SAAKlB,gCAAL;AACE,+BAAYe,KAAZ;;AAEF,SAAKd,wBAAL;AACE,+BAAYc,KAAZ;;AAEF,SAAKb,mBAAL;AACE,UAAIc,MAAM,CAACE,OAAP,KAAmB,EAAvB,EAA2B;AACzB,+CAAYH,KAAZ;AAAmBT,UAAAA,QAAQ,EAAES,KAAK,CAACV;AAAnC;AACD;;AACD,UAAMiB,OAAO,GAAGN,MAAM,CAACE,OAAP,CAAeK,WAAf,EAAhB;AACA,UAAMC,gBAAgB,GAAGT,KAAK,CAACV,WAAN,CAAkBoB,MAAlB,CACvB,UAACC,IAAD;AAAA,eAAUA,IAAI,CAACC,IAAL,CAAUJ,WAAV,GAAwBK,OAAxB,CAAgCN,OAAhC,IAA2C,CAAC,CAAtD;AAAA,OADuB,CAAzB;AAGA,6CAAYP,KAAZ;AAAmBT,QAAAA,QAAQ,EAAEkB;AAA7B;;AAEF;AACE,+BAAYT,KAAZ;AArDJ;AAuDD,CAxDD","sourcesContent":["import {\n  CHAT_GET_CONTACTS,\n  CHAT_GET_CONTACTS_SUCCESS,\n  CHAT_GET_CONTACTS_ERROR,\n  CHAT_GET_CONVERSATIONS,\n  CHAT_GET_CONVERSATIONS_SUCCESS,\n  CHAT_GET_CONVERSATIONS_ERROR,\n  CHAT_ADD_MESSAGE_TO_CONVERSATION,\n  CHAT_CREATE_CONVERSATION,\n  CHAT_SEARCH_CONTACT,\n  CHAT_CHANGE_CONVERSATION,\n} from '../actions';\n\nconst INIT_STATE = {\n  allContacts: null,\n  contacts: null,\n  conversations: null,\n  error: '',\n  searchKeyword: '',\n  loadingContacts: false,\n  loadingConversations: false,\n  currentUser: null,\n  selectedUser: null,\n  selectedUserId: null,\n};\n\nexport default (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case CHAT_GET_CONTACTS:\n      return { ...state, loadingContacts: false };\n\n    case CHAT_GET_CONTACTS_SUCCESS:\n      return {\n        ...state,\n        loadingContacts: true,\n        allContacts: action.payload.contacts,\n        contacts: action.payload.contacts,\n        currentUser: action.payload.currentUser,\n      };\n\n    case CHAT_GET_CONTACTS_ERROR:\n      return { ...state, loadingContacts: false, error: action.payload };\n\n    case CHAT_GET_CONVERSATIONS:\n      return { ...state, loadingConversations: false };\n\n    case CHAT_GET_CONVERSATIONS_SUCCESS:\n      return {\n        ...state,\n        loadingConversations: true,\n        conversations: action.payload.conversations,\n        selectedUserId: action.payload.selectedUser,\n      };\n\n    case CHAT_GET_CONVERSATIONS_ERROR:\n      return { ...state, loadingConversations: false, error: action.payload };\n\n    case CHAT_CHANGE_CONVERSATION:\n      return {\n        ...state,\n        selectedUser: state.allContacts.find((x) => x.id === action.payload),\n      };\n\n    case CHAT_ADD_MESSAGE_TO_CONVERSATION:\n      return { ...state };\n\n    case CHAT_CREATE_CONVERSATION:\n      return { ...state };\n\n    case CHAT_SEARCH_CONTACT:\n      if (action.payload === '') {\n        return { ...state, contacts: state.allContacts };\n      }\n      const keyword = action.payload.toLowerCase();\n      const searchedContacts = state.allContacts.filter(\n        (item) => item.name.toLowerCase().indexOf(keyword) > -1\n      );\n      return { ...state, contacts: searchedContacts };\n\n    default:\n      return { ...state };\n  }\n};\n"]},"metadata":{},"sourceType":"module"}