{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/browsewire/Desktop/CEI/cei/client/src/containers/form-validations/AvailityCustom.js\";\n\nimport React from 'react';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport { Button, Label, Card, CardBody } from 'reactstrap';\n\nvar AvailityCustom = function AvailityCustom() {\n  var _onSubmit = function onSubmit(event, errors, values) {\n    console.log(errors);\n    console.log(values);\n\n    if (errors.length === 0) {// submit\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: \"mb-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, \"Custom Rules\"), /*#__PURE__*/React.createElement(AvForm, {\n    className: \"av-tooltip tooltip-label-right\",\n    onSubmit: function onSubmit(event, errors, values) {\n      return _onSubmit(event, errors, values);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AvGroup, {\n    className: \"error-t-negative\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(AvField, {\n    name: \"nameCustomMessage\",\n    type: \"text\",\n    validate: {\n      required: {\n        value: true,\n        errorMessage: 'Please enter your name'\n      },\n      pattern: {\n        value: '^[A-Za-z]+$',\n        errorMessage: 'Your name must be composed only with letters'\n      },\n      minLength: {\n        value: 2,\n        errorMessage: 'Your name must be between 2 and 16 characters'\n      },\n      maxLength: {\n        value: 16,\n        errorMessage: 'Your name must be between 2 and 16 characters'\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(AvGroup, {\n    className: \"error-t-negative\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(AvField, {\n    name: \"emailCustomMessage\",\n    type: \"email\",\n    validate: {\n      required: {\n        value: true,\n        errorMessage: 'Please enter your email address'\n      },\n      email: {\n        value: true,\n        errorMessage: 'Please enter a valid email address'\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(AvGroup, {\n    className: \"error-l-100 error-t-negative\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"Email Again\"), /*#__PURE__*/React.createElement(AvField, {\n    name: \"confirmationEmail\",\n    type: \"email\",\n    validate: {\n      match: {\n        value: 'emailCustomMessage',\n        errorMessage: 'Your inputs does not match'\n      },\n      required: {\n        value: true,\n        errorMessage: 'Please enter your email address'\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(AvGroup, {\n    className: \"error-l-100 error-t-negative\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"Number\"), /*#__PURE__*/React.createElement(AvField, {\n    name: \"numberProp\",\n    type: \"text\",\n    validate: {\n      number: {\n        value: true,\n        errorMessage: 'Value must be a number'\n      },\n      required: {\n        value: true,\n        errorMessage: 'Please enter a number'\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(AvGroup, {\n    className: \"error-t-negative\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, \"Max\"), /*#__PURE__*/React.createElement(AvField, {\n    name: \"maxPropNumberProp\",\n    type: \"text\",\n    validate: {\n      max: {\n        value: 5,\n        errorMessage: 'Maximum 5'\n      },\n      required: {\n        value: true,\n        errorMessage: 'Please enter a number'\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(AvGroup, {\n    className: \"error-t-negative\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, \"Min\"), /*#__PURE__*/React.createElement(AvField, {\n    name: \"minPropNumberProp\",\n    type: \"text\",\n    validate: {\n      min: {\n        value: 5,\n        errorMessage: 'Minimum 5'\n      },\n      required: {\n        value: true,\n        errorMessage: 'Please enter a number'\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(AvGroup, {\n    className: \"error-l-125 error-t-negative\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, \"Regex (^[A-Z]*$)\"), /*#__PURE__*/React.createElement(AvField, {\n    name: \"patternPropRegex\",\n    type: \"text\",\n    validate: {\n      pattern: {\n        value: /^[A-Z]*$/,\n        errorMessage: 'Only uppercase characters'\n      },\n      required: {\n        value: true,\n        errorMessage: 'Please enter uppercase characters'\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n};\n\nexport default AvailityCustom;","map":{"version":3,"sources":["/home/browsewire/Desktop/CEI/cei/client/src/containers/form-validations/AvailityCustom.js"],"names":["React","AvForm","AvField","AvGroup","Button","Label","Card","CardBody","AvailityCustom","onSubmit","event","errors","values","console","log","length","required","value","errorMessage","pattern","minLength","maxLength","email","match","number","max","min"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport { Button, Label, Card, CardBody } from 'reactstrap';\n\nconst AvailityCustom = () => {\n  const onSubmit = (event, errors, values) => {\n    console.log(errors);\n    console.log(values);\n    if (errors.length === 0) {\n      // submit\n    }\n  };\n\n  return (\n    <Card className=\"mb-5\">\n      <CardBody>\n        <h6 className=\"mb-4\">Custom Rules</h6>\n        <AvForm\n          className=\"av-tooltip tooltip-label-right\"\n          onSubmit={(event, errors, values) => onSubmit(event, errors, values)}\n        >\n          <AvGroup className=\"error-t-negative\">\n            <Label>Name</Label>\n            <AvField\n              name=\"nameCustomMessage\"\n              type=\"text\"\n              validate={{\n                required: {\n                  value: true,\n                  errorMessage: 'Please enter your name',\n                },\n                pattern: {\n                  value: '^[A-Za-z]+$',\n                  errorMessage: 'Your name must be composed only with letters',\n                },\n                minLength: {\n                  value: 2,\n                  errorMessage: 'Your name must be between 2 and 16 characters',\n                },\n                maxLength: {\n                  value: 16,\n                  errorMessage: 'Your name must be between 2 and 16 characters',\n                },\n              }}\n            />\n          </AvGroup>\n\n          <AvGroup className=\"error-t-negative\">\n            <Label>Email</Label>\n            <AvField\n              name=\"emailCustomMessage\"\n              type=\"email\"\n              validate={{\n                required: {\n                  value: true,\n                  errorMessage: 'Please enter your email address',\n                },\n                email: {\n                  value: true,\n                  errorMessage: 'Please enter a valid email address',\n                },\n              }}\n            />\n          </AvGroup>\n\n          <AvGroup className=\"error-l-100 error-t-negative\">\n            <Label>Email Again</Label>\n            <AvField\n              name=\"confirmationEmail\"\n              type=\"email\"\n              validate={{\n                match: {\n                  value: 'emailCustomMessage',\n                  errorMessage: 'Your inputs does not match',\n                },\n                required: {\n                  value: true,\n                  errorMessage: 'Please enter your email address',\n                },\n              }}\n            />\n          </AvGroup>\n\n          <AvGroup className=\"error-l-100 error-t-negative\">\n            <Label>Number</Label>\n            <AvField\n              name=\"numberProp\"\n              type=\"text\"\n              validate={{\n                number: {\n                  value: true,\n                  errorMessage: 'Value must be a number',\n                },\n                required: {\n                  value: true,\n                  errorMessage: 'Please enter a number',\n                },\n              }}\n            />\n          </AvGroup>\n\n          <AvGroup className=\"error-t-negative\">\n            <Label>Max</Label>\n            <AvField\n              name=\"maxPropNumberProp\"\n              type=\"text\"\n              validate={{\n                max: { value: 5, errorMessage: 'Maximum 5' },\n                required: {\n                  value: true,\n                  errorMessage: 'Please enter a number',\n                },\n              }}\n            />\n          </AvGroup>\n\n          <AvGroup className=\"error-t-negative\">\n            <Label>Min</Label>\n            <AvField\n              name=\"minPropNumberProp\"\n              type=\"text\"\n              validate={{\n                min: { value: 5, errorMessage: 'Minimum 5' },\n                required: {\n                  value: true,\n                  errorMessage: 'Please enter a number',\n                },\n              }}\n            />\n          </AvGroup>\n\n          <AvGroup className=\"error-l-125 error-t-negative\">\n            <Label>Regex (^[A-Z]*$)</Label>\n            <AvField\n              name=\"patternPropRegex\"\n              type=\"text\"\n              validate={{\n                pattern: {\n                  value: /^[A-Z]*$/,\n                  errorMessage: 'Only uppercase characters',\n                },\n                required: {\n                  value: true,\n                  errorMessage: 'Please enter uppercase characters',\n                },\n              }}\n            />\n          </AvGroup>\n\n          <Button color=\"primary\">Submit</Button>\n        </AvForm>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default AvailityCustom;\n"]},"metadata":{},"sourceType":"module"}