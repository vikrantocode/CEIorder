{"ast":null,"code":"import _slicedToArray from \"/home/browsewire/Desktop/CEI/cei/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/browsewire/Desktop/CEI/cei/client/src/components/StateButton.js\";\n\nimport React, { useState } from 'react';\nimport { Button, Popover, PopoverBody } from 'reactstrap';\nimport classnames from 'classnames';\n\nvar StateButton = function StateButton(_ref) {\n  var id = _ref.id,\n      className = _ref.className,\n      color = _ref.color,\n      children = _ref.children,\n      onClick = _ref.onClick;\n\n  var _useState = useState('default'),\n      _useState2 = _slicedToArray(_useState, 2),\n      status = _useState2[0],\n      setStatus = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      message = _useState4[0],\n      setMessage = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      messageShow = _useState6[0],\n      setMessageShow = _useState6[1];\n\n  var handleOnClick = function handleOnClick() {\n    setStatus('processing');\n    onClick().then(function (res) {\n      setMessage(res);\n      setStatus('success');\n    }).catch(function (err) {\n      setMessage(err);\n      setStatus('fail');\n    }).finally(function () {\n      setMessageShow(true);\n      setTimeout(function () {\n        setStatus('default');\n        setMessageShow(false);\n      }, 3000);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    id: id,\n    className: \"btn-multiple-state  \".concat(className, \"  \").concat(classnames({\n      'show-spinner': status === 'processing',\n      'show-success': status === 'success',\n      'show-fail': status === 'fail'\n    })),\n    color: color,\n    onClick: handleOnClick,\n    disabled: status !== 'default',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Popover, {\n    placement: \"top\",\n    isOpen: messageShow,\n    target: id,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PopoverBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, message)), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"spinner d-inline-block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"bounce1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"bounce2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"bounce3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"icon success\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"simple-icon-check\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"icon fail\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"simple-icon-exclamation\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, children)));\n};\n\nexport default StateButton;","map":{"version":3,"sources":["/home/browsewire/Desktop/CEI/cei/client/src/components/StateButton.js"],"names":["React","useState","Button","Popover","PopoverBody","classnames","StateButton","id","className","color","children","onClick","status","setStatus","message","setMessage","messageShow","setMessageShow","handleOnClick","then","res","catch","err","finally","setTimeout"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Button, Popover, PopoverBody } from 'reactstrap';\nimport classnames from 'classnames';\n\nconst StateButton = ({ id, className, color, children, onClick }) => {\n  const [status, setStatus] = useState('default');\n  const [message, setMessage] = useState('');\n  const [messageShow, setMessageShow] = useState(false);\n\n  const handleOnClick = () => {\n    setStatus('processing');\n\n    onClick()\n      .then((res) => {\n        setMessage(res);\n        setStatus('success');\n      })\n      .catch((err) => {\n        setMessage(err);\n        setStatus('fail');\n      })\n      .finally(() => {\n        setMessageShow(true);\n        setTimeout(() => {\n          setStatus('default');\n          setMessageShow(false);\n        }, 3000);\n      });\n  };\n\n  return (\n    <span>\n      <Button\n        id={id}\n        className={`btn-multiple-state  ${className}  ${classnames({\n          'show-spinner': status === 'processing',\n          'show-success': status === 'success',\n          'show-fail': status === 'fail',\n        })}`}\n        color={color}\n        onClick={handleOnClick}\n        disabled={status !== 'default'}\n      >\n        <Popover placement=\"top\" isOpen={messageShow} target={id}>\n          <PopoverBody>{message}</PopoverBody>\n        </Popover>\n        <span className=\"spinner d-inline-block\">\n          <span className=\"bounce1\" />\n          <span className=\"bounce2\" />\n          <span className=\"bounce3\" />\n        </span>\n        <span className=\"icon success\">\n          <i className=\"simple-icon-check\" />\n        </span>\n        <span className=\"icon fail\">\n          <i className=\"simple-icon-exclamation\" />\n        </span>\n        <span className=\"label\">{children}</span>\n      </Button>\n    </span>\n  );\n};\n\nexport default StateButton;\n"]},"metadata":{},"sourceType":"module"}